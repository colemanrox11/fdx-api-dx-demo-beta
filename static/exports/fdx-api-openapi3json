{
  "openapi": "3.0.0",
  "info": {
    "title": "FDX API",
    "description": "Financial Data Exchange V6.2.0 Consent API",
    "contact": {
      "name": "Financial Data Exchange",
      "url": "https://financialdataexchange.org/",
      "email": "fdxsupport@financialdataexchange.org"
    },
    "version": "6.2.0"
  },
  "servers": [
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-consent-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-customer-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-event-notifications-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-fraud-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-meta-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-payroll-api-v6.2.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-recipient-registration-api-v6.1.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-registry-api-v6.1.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-tax-api-v6.1.0",
      "variables": {}
    },
    {
      "url": "https://financialdataexchange-prod.apigee.net/fdx-resource-api-v6.1.0",
      "variables": {}
    }
  ],
  "paths": {
    "/consents/{consentId}": {
      "get": {
        "tags": [
          "User Consent"
        ],
        "summary": "getConsentGrant",
        "description": "Get a Consent Grant",
        "operationId": "getConsentGrant",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "Consent Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "example": "9585694d3ae58863"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConsentGrantentity"
                    },
                    {
                      "description": "Record of user consent",
                      "example": {
                        "id": "9585694d3ae58863",
                        "status": "ACTIVE",
                        "parties": [
                          {
                            "name": "Seedling App",
                            "type": "DATA_RECIPIENT",
                            "homeUri": "https://www.seedling.com",
                            "logoUri": "https://www.seedling.com/assets/seedling-logo.png",
                            "registry": "FDX",
                            "registeredEntityName": "Oak Tree Holdings, Inc",
                            "registeredEntityId": "5493001052I34KDC1O18"
                          },
                          {
                            "name": "Midwest Primary Bank, NA",
                            "type": "DATA_PROVIDER",
                            "homeUri": "https://www.midwest.com",
                            "logoUri": "https://www.midwest.com/81d88112572c.jpg",
                            "registry": "GLEIF",
                            "registeredEntityName": "Midwest Primary Bank, NA",
                            "registeredEntityId": "549300ATG070THRDJ595"
                          }
                        ],
                        "createdTime": "2021-07-03T21:28:10.375Z",
                        "expirationTime": "2021-07-03T22:28:10.374Z",
                        "durationType": "ONE_TIME",
                        "lookbackPeriod": 60,
                        "resources": [
                          {
                            "resourceType": "ACCOUNT",
                            "resourceId": "b14e1e714693bc00",
                            "dataClusters": [
                              "ACCOUNT_DETAILED",
                              "TRANSACTIONS",
                              "STATEMENTS"
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "(1) Single Resource": {
                    "value": {
                      "id": "9585694d3ae58863",
                      "status": "ACTIVE",
                      "parties": [
                        {
                          "name": "Seedling App",
                          "type": "DATA_RECIPIENT",
                          "homeUri": "https://www.seedling.com",
                          "logoUri": "https://www.seedling.com/assets/seedling-logo.png",
                          "registry": "FDX",
                          "registeredEntityName": "Oak Tree Holdings, Inc",
                          "registeredEntityId": "5493001052I34KDC1O18"
                        },
                        {
                          "name": "Midwest Primary Bank, NA",
                          "type": "DATA_PROVIDER",
                          "homeUri": "https://www.midwest.com",
                          "logoUri": "https://www.midwest.com/81d88112572c.jpg",
                          "registry": "GLEIF",
                          "registeredEntityName": "Midwest Primary Bank, NA",
                          "registeredEntityId": "549300ATG070THRDJ595"
                        }
                      ],
                      "createdTime": "2021-07-03T21:28:10.375Z",
                      "expirationTime": "2021-07-03T22:28:10.374Z",
                      "durationType": "ONE_TIME",
                      "lookbackPeriod": 60,
                      "resources": [
                        {
                          "resourceType": "ACCOUNT",
                          "resourceId": "b14e1e714693bc00",
                          "dataClusters": [
                            "ACCOUNT_DETAILED",
                            "TRANSACTIONS",
                            "STATEMENTS"
                          ]
                        }
                      ]
                    }
                  },
                  "(2) Multiple Resources": {
                    "value": {
                      "id": "0e67811f9c12468f",
                      "status": "ACTIVE",
                      "parties": [
                        {
                          "name": "Seedling App",
                          "type": "DATA_RECIPIENT",
                          "homeUri": "https://www.seedling.com",
                          "logoUri": "https://www.seedling.com/assets/seedling-logo.png",
                          "registry": "GLEIF",
                          "registeredEntityName": "Oak Tree Holdings, Inc",
                          "registeredEntityId": "5493001052I34KDC1O18"
                        },
                        {
                          "name": "Midwest Primary Bank, NA",
                          "type": "DATA_PROVIDER",
                          "homeUri": "https://www.midwest.com",
                          "logoUri": "https://www.midwest.com/81d88112572c.jpg",
                          "registry": "GLEIF",
                          "registeredEntityName": "Midwest Primary Bank, NA",
                          "registeredEntityId": "549300ATG070THRDJ595"
                        }
                      ],
                      "createdTime": "2021-07-03T22:08:10.375Z",
                      "expirationTime": "2022-07-03T22:08:10.374Z",
                      "durationType": "TIME_BOUND",
                      "durationPeriod": 365,
                      "lookbackPeriod": 60,
                      "resources": [
                        {
                          "resourceType": "ACCOUNT",
                          "resourceId": "b14e1e714693bc00",
                          "dataClusters": [
                            "ACCOUNT_DETAILED",
                            "TRANSACTIONS",
                            "STATEMENTS"
                          ]
                        },
                        {
                          "resourceType": "ACCOUNT",
                          "resourceId": "ad6794161f45bc96",
                          "dataClusters": [
                            "ACCOUNT_DETAILED",
                            "TRANSACTIONS",
                            "STATEMENTS"
                          ]
                        },
                        {
                          "resourceType": "CUSTOMER",
                          "resourceId": "aed694b22bc3d2b3",
                          "dataClusters": [
                            "CUSTOMER_CONTACT"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/consents/{consentId}/revocation": {
      "put": {
        "tags": [
          "User Consent"
        ],
        "summary": "revokeConsentGrant",
        "description": "Revoke a Consent Grant",
        "operationId": "revokeConsentGrant",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "Consent Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "example": "9585694d3ae58863"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Reason and initiator of revocation",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Consentrevocationrequestentity"
                  },
                  {
                    "description": "Reason and initiator of revocation",
                    "example": {
                      "reason": "BUSINESS_RULE",
                      "initiator": "DATA_ACCESS_PLATFORM"
                    }
                  }
                ]
              },
              "examples": {
                "Standard Request": {
                  "value": {
                    "reason": "BUSINESS_RULE",
                    "initiator": "DATA_ACCESS_PLATFORM"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Input sent by client does not satisfy API specification",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Invalid Input",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Invalid Input",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, server understands the request but refuses to authorize it",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "403",
                        "message": "Forbidden",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Forbidden": {
                    "value": {
                      "code": "403",
                      "message": "Forbidden",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict with current state of target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "409",
                        "message": "Conflict with current state of target resource",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "code": "409",
                      "message": "Conflict with current state of target resource",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "User Consent"
        ],
        "summary": "getConsentRevocation",
        "description": "Retrieve Consent Revocation record",
        "operationId": "getConsentRevocation",
        "parameters": [
          {
            "name": "consentId",
            "in": "path",
            "description": "Consent Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string",
              "example": "9585694d3ae58863"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConsentRevocationListentity"
                    },
                    {
                      "description": "List of consent grant revocation requests"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Account Information"
        ],
        "summary": "searchForAccounts",
        "description": "Return information for all of the customer's consented accounts or just those accounts identified in the `accountIds` request parameter. Use `ResultTypeQuery` parameter value of `lightweight` to retrieve minimal descriptive information and the `accountId` for each account. The `accountId` can then be used in the `getAccount` operation's path `/accounts/{accountId}` to retrieve full details about each account",
        "operationId": "searchForAccounts",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "accountIds",
            "in": "query",
            "description": "Comma separated list of account ids",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time for use in retrieval of transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time for use in retrieval of transactions",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "name": "resultType",
            "in": "query",
            "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResultType"
                },
                {
                  "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of accounts (DepositAccount, LoanAccount, LineOfCreditAccount, InvestmentAccount, InsuranceAccount, AnnuityAccount, CommercialAccount, or DigitalWallet)",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Accountsentity"
                    },
                    {
                      "description": "An optionally paginated array of accounts",
                      "example": {
                        "page": {
                          "nextOffset": "2",
                          "total": 3
                        },
                        "links": {
                          "next": {
                            "href": "/accounts?offSet=2&limit=10"
                          }
                        },
                        "accounts": [
                          {
                            "accountCategory": "DEPOSIT_ACCOUNT",
                            "accountId": "10001",
                            "nickname": "My Checking Acc XXXX3223",
                            "status": "OPEN",
                            "balanceAsOf": "2017-11-05T13:15:30.751Z",
                            "currentBalance": 13300.35,
                            "openingDayBalance": 500
                          },
                          {
                            "accountCategory": "DEPOSIT_ACCOUNT",
                            "accountId": "10002",
                            "nickname": "My Checking Acc XXXX4443",
                            "status": "OPEN",
                            "balanceAsOf": "2017-11-05T13:15:30.751Z",
                            "currentBalance": 332.22,
                            "openingDayBalance": 100.0
                          },
                          {
                            "accountCategory": "LOAN_ACCOUNT",
                            "accountId": "20001",
                            "nickname": "My Mortgage Acc XXXX9979",
                            "status": "OPEN",
                            "balanceAsOf": "2017-11-05T13:15:30.751Z",
                            "principalBalance": 133000.35,
                            "loanTerm": 30,
                            "nextPaymentDate": "2017-12-01",
                            "nextPaymentAmount": 2333.32
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Search for accounts success response": {
                    "value": {
                      "page": {
                        "nextOffset": "2",
                        "total": 3
                      },
                      "links": {
                        "next": {
                          "href": "/accounts?offSet=2&limit=10"
                        }
                      },
                      "accounts": [
                        {
                          "accountCategory": "DEPOSIT_ACCOUNT",
                          "accountId": "10001",
                          "nickname": "My Checking Acc XXXX3223",
                          "status": "OPEN",
                          "balanceAsOf": "2017-11-05T13:15:30.751Z",
                          "currentBalance": 13300.35,
                          "openingDayBalance": 500
                        },
                        {
                          "accountCategory": "DEPOSIT_ACCOUNT",
                          "accountId": "10002",
                          "nickname": "My Checking Acc XXXX4443",
                          "status": "OPEN",
                          "balanceAsOf": "2017-11-05T13:15:30.751Z",
                          "currentBalance": 332.22,
                          "openingDayBalance": 100.0
                        },
                        {
                          "accountCategory": "LOAN_ACCOUNT",
                          "accountId": "20001",
                          "nickname": "My Mortgage Acc XXXX9979",
                          "status": "OPEN",
                          "balanceAsOf": "2017-11-05T13:15:30.751Z",
                          "principalBalance": 133000.35,
                          "loanTerm": 30,
                          "nextPaymentDate": "2017-12-01",
                          "nextPaymentAmount": 2333.32
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Start or end date value is not in the ISO 8601 format",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "702",
                        "message": "Invalid start or end date",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid start or end date": {
                    "value": {
                      "code": "702",
                      "message": "Invalid start or end date",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid date range": {
                    "value": {
                      "code": "703",
                      "message": "Invalid date range",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "Account Information"
        ],
        "summary": "getAccount",
        "description": "Retrieve full details about the account identified by `{accountId}` parameter",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This can be one of LoanAccount, DepositAccount, LineOfCreditAccount, InvestmentAccount, InsuranceAccount, AnnuityAccount, CommercialAccount, or DigitalWallet",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountWithDetailsentity"
                    },
                    {
                      "description": "An instance of an account with full details",
                      "example": {
                        "accountCategory": "LOAN_ACCOUNT",
                        "accountId": "12345678",
                        "accountType": "LOAN",
                        "displayName": "XXXXX4567",
                        "status": "OPEN",
                        "description": "30 Year Mortgage",
                        "nickname": "My Home Mortgage",
                        "currency": {
                          "currencyCode": "USD"
                        },
                        "interestRate": 4,
                        "loanTerm": 0,
                        "totalNumberOfPayments": 0
                      }
                    }
                  ]
                },
                "examples": {
                  "Loan Account With Details": {
                    "value": {
                      "accountCategory": "LOAN_ACCOUNT",
                      "accountId": "12345678",
                      "accountType": "LOAN",
                      "displayName": "XXXXX4567",
                      "status": "OPEN",
                      "description": "30 Year Mortgage",
                      "nickname": "My Home Mortgage",
                      "currency": {
                        "currencyCode": "USD"
                      },
                      "interestRate": 4,
                      "loanTerm": 0,
                      "totalNumberOfPayments": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "701",
                        "message": "Account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account not found": {
                    "value": {
                      "code": "701",
                      "message": "Account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/statements": {
      "get": {
        "tags": [
          "Account Statements"
        ],
        "summary": "searchForAccountStatements",
        "description": "Get account statements. Example: GET /accounts/{accountId}/statements?startTime=value1&endTime=value2",
        "operationId": "searchForAccountStatements",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time for use in retrieval of elements (ISO 8601)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-07-15"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time for use in retrieval of elements (ISO 8601)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-07-15"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of available statements",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Anarrayofstatements"
                    },
                    {
                      "description": "A paginated array of account statements",
                      "example": {
                        "page": {
                          "nextOffset": "2",
                          "total": 3
                        },
                        "links": {
                          "next": {
                            "href": "/accounts/1111/statements?offSet=2&limit=10"
                          }
                        },
                        "statements": [
                          {
                            "accountId": "10001",
                            "statementId": "40004"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Search for statements success response": {
                    "value": {
                      "page": {
                        "nextOffset": "2",
                        "total": 3
                      },
                      "links": {
                        "next": {
                          "href": "/accounts/1111/statements?offSet=2&limit=10"
                        }
                      },
                      "statements": [
                        {
                          "accountId": "10001",
                          "statementId": "40004"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Start or end date value is not in the ISO 8601 format",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "702",
                        "message": "Invalid start or end date",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid start or end date": {
                    "value": {
                      "code": "702",
                      "message": "Invalid start or end date",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid date range": {
                    "value": {
                      "code": "703",
                      "message": "Invalid date range",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "701",
                        "message": "Account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account not found": {
                    "value": {
                      "code": "701",
                      "message": "Account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/statements/{statementId}": {
      "get": {
        "tags": [
          "Account Statements"
        ],
        "summary": "getAccountStatement",
        "description": "Gets an account statement image file. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. See ContentTypes definition for typical values",
        "operationId": "getAccountStatement",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statementId",
            "in": "path",
            "description": "Statement Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An image of an account statement",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/pdf": {
                "schema": {
                  "description": "A pdf image of an account statement"
                }
              },
              "image/gif": {
                "schema": {
                  "description": "A gif image of an account statement"
                }
              },
              "image/jpeg": {
                "schema": {
                  "description": "A jpeg image of an account statement"
                }
              },
              "image/tiff": {
                "schema": {
                  "description": "A tiff image of an account statement"
                }
              },
              "image/png": {
                "schema": {
                  "description": "A png image of an account statement"
                }
              }
            }
          },
          "302": {
            "description": "Statement is available at specified location. URL is returned via the `Location` HTTP header",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Statement is processing and is not yet available",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1300",
                        "message": "Statement is Processing",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Statement is Processing": {
                    "value": {
                      "code": "1300",
                      "message": "Statement is Processing",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "When account is present with no statements in it",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1108",
                        "message": "Statements not found for given Account",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Statements not found for given Account": {
                    "value": {
                      "code": "1108",
                      "message": "Statements not found for given Account",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Statement id not found for Account": {
                    "value": {
                      "code": "1104",
                      "message": "Statement id not found for Account",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Content Type not Supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1203",
                        "message": "Content Type not Supported",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Content Type not Supported": {
                    "value": {
                      "code": "1203",
                      "message": "Content Type not Supported",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/transaction-images/{imageId}": {
      "get": {
        "tags": [
          "Account Transactions"
        ],
        "summary": "getAccountTransactionImages",
        "description": "Get account transaction image",
        "operationId": "getAccountTransactionImages",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Image Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An image of transaction (such as a scanned check)",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/pdf": {
                "schema": {}
              },
              "image/gif": {
                "schema": {}
              },
              "image/jpeg": {
                "schema": {}
              },
              "image/tiff": {
                "schema": {}
              },
              "image/png": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Account or image with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "701",
                        "message": "Account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account not found": {
                    "value": {
                      "code": "701",
                      "message": "Account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Image Id not found for Transaction": {
                    "value": {
                      "code": "1103",
                      "message": "Image Id not found for Transaction",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Content Type not Supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1203",
                        "message": "Content Type not Supported",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Content Type not Supported": {
                    "value": {
                      "code": "1203",
                      "message": "Content Type not Supported",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "Account Transactions"
        ],
        "summary": "searchForAccountTransactions",
        "description": "Search for account transactions. Example: /accounts/{accountId}/transactions?startTime=value1&endTime=value2",
        "operationId": "searchForAccountTransactions",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time for use in retrieval of elements (ISO 8601)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-07-15"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time for use in retrieval of elements (ISO 8601)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-07-15"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated collection of transactions, which can be one of DepositTransaction, LoanTransaction, LineOfCreditTransaction, InvestmentTransaction, InsuranceTransaction, CommercialTransaction, or DigitalWalletTransaction",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Transactionsentity"
                    },
                    {
                      "description": "Optionally paginated array of transactions",
                      "example": {
                        "page": {
                          "nextOffset": "2",
                          "total": 3
                        },
                        "links": {
                          "next": {
                            "href": "/accounts/33333/transactions?offSet=2&limit=10"
                          }
                        },
                        "transactions": [
                          {
                            "accountCategory": "DEPOSIT_ACCOUNT",
                            "accountId": "10001",
                            "transactionId": "20002",
                            "postedTimestamp": "2017-11-05T13:15:30.751Z",
                            "description": "Direct deposit from XYZ Corp",
                            "debitCreditMemo": "CREDIT",
                            "amount": 1200.42,
                            "payee": "XYZ Corp"
                          },
                          {
                            "accountCategory": "DEPOSIT_ACCOUNT",
                            "accountId": "10001",
                            "transactionId": "20002",
                            "postedTimestamp": "2017-11-05T13:15:31.751Z",
                            "description": "Withdrawal from ATM",
                            "debitCreditMemo": "DEBIT",
                            "amount": 1200.42,
                            "payee": "Account Owner"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Paginated Transactions": {
                    "value": {
                      "page": {
                        "nextOffset": "2",
                        "total": 3
                      },
                      "links": {
                        "next": {
                          "href": "/accounts/33333/transactions?offSet=2&limit=10"
                        }
                      },
                      "transactions": [
                        {
                          "accountCategory": "DEPOSIT_ACCOUNT",
                          "accountId": "10001",
                          "transactionId": "20002",
                          "postedTimestamp": "2017-11-05T13:15:30.751Z",
                          "description": "Direct deposit from XYZ Corp",
                          "debitCreditMemo": "CREDIT",
                          "amount": 1200.42,
                          "payee": "XYZ Corp"
                        },
                        {
                          "accountCategory": "DEPOSIT_ACCOUNT",
                          "accountId": "10001",
                          "transactionId": "20002",
                          "postedTimestamp": "2017-11-05T13:15:31.751Z",
                          "description": "Withdrawal from ATM",
                          "debitCreditMemo": "DEBIT",
                          "amount": 1200.42,
                          "payee": "Account Owner"
                        }
                      ]
                    }
                  },
                  "Transaction with Rewards": {
                    "summary": "Example of single transaction with associated reward",
                    "value": {
                      "transactions": [
                        {
                          "accountCategory": "LOC_ACCOUNT",
                          "accountId": "10001",
                          "transactionId": "20003",
                          "postedTimestamp": "2017-11-05T13:15:30.751Z",
                          "description": "Hotel Stay",
                          "debitCreditMemo": "DEBIT",
                          "amount": 236,
                          "reward": {
                            "accrued": 472,
                            "adjusted": 0,
                            "categoryId": "293"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Start or end date value is not in the ISO 8601 format",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "702",
                        "message": "Invalid start or end date",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid start or end date": {
                    "value": {
                      "code": "702",
                      "message": "Invalid start or end date",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid date range": {
                    "value": {
                      "code": "703",
                      "message": "Invalid date range",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "701",
                        "message": "Account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account not found": {
                    "value": {
                      "code": "701",
                      "message": "Account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/asset-transfer-networks": {
      "get": {
        "tags": [
          "Money Movement"
        ],
        "summary": "getAccountAssetTransferNetworks",
        "description": "...",
        "operationId": "getAccountAssetTransferNetworks",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information required to facilitate asset transfer from this account",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AssetTransferNetworkList"
                    },
                    {
                      "description": "An array of asset transfer network details for this account",
                      "example": {
                        "assetTransferNetworks": [
                          {
                            "identifier": "121000358",
                            "identifierType": "ACCOUNT_NUMBER",
                            "institutionName": "US Investments",
                            "institutionId": "1234567890",
                            "type": "US_ACATS",
                            "jointAccount": true
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "ACATS": {
                    "value": {
                      "assetTransferNetworks": [
                        {
                          "identifier": "121000358",
                          "identifierType": "ACCOUNT_NUMBER",
                          "institutionName": "US Investments",
                          "institutionId": "1234567890",
                          "type": "US_ACATS",
                          "jointAccount": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/payment-networks": {
      "get": {
        "tags": [
          "Money Movement"
        ],
        "summary": "getAccountPaymentNetworks",
        "description": "Get payment networks supported by the account",
        "operationId": "getAccountPaymentNetworks",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information required to execute a payment transaction against this account",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Arrayofaccountpaymentnetworks"
                    },
                    {
                      "description": "An optionally paginated array of payment networks supported by the account",
                      "example": {
                        "page": {
                          "totalElements": 1
                        },
                        "paymentNetworks": [
                          {
                            "bankId": "121000358",
                            "identifier": "1234567890",
                            "identifierType": "ACCOUNT_NUMBER",
                            "type": "US_ACH",
                            "transferIn": true,
                            "transferOut": true,
                            "transferLimits": {
                              "out": {
                                "day": {
                                  "resetsOn": "2023-08-09T00:00:00.000Z",
                                  "transferMaxAmount": 10000.0,
                                  "transferRemainingAmount": 8356.0,
                                  "maxOccurrence": 6,
                                  "remainingOccurrence": 5
                                },
                                "month": {
                                  "resetsOn": "2023-09-01T00:00:00.000Z",
                                  "transferMaxAmount": 50000.0,
                                  "transferRemainingAmount": 35200.0
                                },
                                "transaction": {
                                  "transferMaxAmount": 5000.0,
                                  "transferRemainingAmount": 4990.0
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Account Number": {
                    "value": {
                      "page": {
                        "totalElements": 1
                      },
                      "paymentNetworks": [
                        {
                          "bankId": "121000358",
                          "identifier": "1234567890",
                          "identifierType": "ACCOUNT_NUMBER",
                          "type": "US_ACH",
                          "transferIn": true,
                          "transferOut": true,
                          "transferLimits": {
                            "out": {
                              "day": {
                                "resetsOn": "2023-08-09T00:00:00.000Z",
                                "transferMaxAmount": 10000.0,
                                "transferRemainingAmount": 8356.0,
                                "maxOccurrence": 6,
                                "remainingOccurrence": 5
                              },
                              "month": {
                                "resetsOn": "2023-09-01T00:00:00.000Z",
                                "transferMaxAmount": 50000.0,
                                "transferRemainingAmount": 35200.0
                              },
                              "transaction": {
                                "transferMaxAmount": 5000.0,
                                "transferRemainingAmount": 4990.0
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "Tokenized Account Number": {
                    "value": {
                      "page": {
                        "totalElements": 1
                      },
                      "paymentNetworks": [
                        {
                          "bankId": "121000358",
                          "identifier": "987654321",
                          "identifierType": "TOKENIZED_ACCOUNT_NUMBER",
                          "type": "US_ACH",
                          "transferIn": true,
                          "transferOut": true
                        }
                      ]
                    }
                  },
                  "Multiple Networks": {
                    "value": {
                      "page": {
                        "totalElements": 2
                      },
                      "paymentNetworks": [
                        {
                          "bankId": "121000358",
                          "identifier": "1234567890",
                          "identifierType": "ACCOUNT_NUMBER",
                          "type": "US_ACH",
                          "transferIn": true,
                          "transferOut": true
                        },
                        {
                          "bankId": "026009593",
                          "identifier": "1234567890",
                          "identifierType": "ACCOUNT_NUMBER",
                          "type": "US_FEDWIRE",
                          "transferIn": true,
                          "transferOut": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "701",
                        "message": "Account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account not found": {
                    "value": {
                      "code": "701",
                      "message": "Account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account not found": {
                    "value": {
                      "code": "901",
                      "message": "Source account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/accounts/{accountId}/contact": {
      "get": {
        "tags": [
          "Personal Information"
        ],
        "summary": "getAccountContact",
        "description": "Get contact information on the account",
        "operationId": "getAccountContact",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details used to verify an account",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountContactentity"
                    },
                    {
                      "description": "Contact information for the account"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Account with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "701",
                        "message": "Account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account not found": {
                    "value": {
                      "code": "701",
                      "message": "Account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Personal Information"
        ],
        "summary": "getCustomers",
        "description": "Retrieve account holders related to permissioned accounts",
        "operationId": "getCustomers",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CustomersEntity"
                    },
                    {
                      "description": "List of customers"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-customer-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/customers/current": {
      "get": {
        "tags": [
          "Personal Information"
        ],
        "summary": "getCustomerInfo",
        "description": "Get information about the customer within the authorization scope",
        "operationId": "getCustomerInfo",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data describing current authenticated customer",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Customerentity"
                    },
                    {
                      "description": "Represents a customer"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-customer-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Personal Information"
        ],
        "summary": "getCustomer",
        "description": "Retrieve customer information by customer id",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Customerentity"
                    },
                    {
                      "description": "Represents a customer"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Customer with id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "601",
                        "message": "Customer not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Customer not found": {
                    "value": {
                      "code": "601",
                      "message": "Customer not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-customer-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/reward-programs/{rewardProgramId}/categories": {
      "get": {
        "tags": [
          "Reward Program Categories"
        ],
        "summary": "getRewardProgramCategories",
        "description": "Get reward categories",
        "operationId": "getRewardProgramCategories",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "rewardProgramId",
            "in": "path",
            "description": "Reward Program Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data describing a reward program's categories",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RewardCategoriesentity"
                    },
                    {
                      "description": "An optionally paginated array of reward categories",
                      "example": {
                        "categories": [
                          {
                            "categoryName": "Amusement Park",
                            "categoryId": 100,
                            "multiplier": 1,
                            "description": "The Amusement Park category, including zoos, circuses and aquariums, covers establishments that operate parks or carnivals and offer mechanical rides and games and/or live animal shows."
                          },
                          {
                            "categoryName": "Dining/Restaurant",
                            "categoryId": 101,
                            "multiplier": 2,
                            "description": "Merchants in the Dining/Restaurant category range from fast food restaurants to fine dining establishments. They fall into the Dining category if they primarily prepare food and drinks for immediate consumption on the premises or for take-out. Dining merchants include bars, cocktail lounges, nightclubs, taverns and fast-food restaurants. Some merchants that sell food and drinks are located within larger establishments that sell other goods and services and may not be not included in this category. For example a department store or hotel restaurant, theme park cafes or discount store food counter would not be categorized under Dining."
                          },
                          {
                            "categoryName": "Entertainment",
                            "categoryId": 102,
                            "multiplier": 2,
                            "description": "Entertainment includes purchases made at sports promoters, movie theaters, theatrical promoters, amusement parks, tourist attractions, record stores and video rentals."
                          },
                          {
                            "categoryName": "Hotels",
                            "categoryId": 103,
                            "multiplier": 5,
                            "description": "Hotels include businesses that provide sleeping or meeting room accommodations. Some goods and services that appear on a hotel bill are included. Often restaurants in hotels are categorized as a hotel purchase."
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Multiple Reward Categories": {
                    "summary": "Example response with multiple reward categories",
                    "value": {
                      "categories": [
                        {
                          "categoryName": "Amusement Park",
                          "categoryId": 100,
                          "multiplier": 1,
                          "description": "The Amusement Park category, including zoos, circuses and aquariums, covers establishments that operate parks or carnivals and offer mechanical rides and games and/or live animal shows."
                        },
                        {
                          "categoryName": "Dining/Restaurant",
                          "categoryId": 101,
                          "multiplier": 2,
                          "description": "Merchants in the Dining/Restaurant category range from fast food restaurants to fine dining establishments. They fall into the Dining category if they primarily prepare food and drinks for immediate consumption on the premises or for take-out. Dining merchants include bars, cocktail lounges, nightclubs, taverns and fast-food restaurants. Some merchants that sell food and drinks are located within larger establishments that sell other goods and services and may not be not included in this category. For example a department store or hotel restaurant, theme park cafes or discount store food counter would not be categorized under Dining."
                        },
                        {
                          "categoryName": "Entertainment",
                          "categoryId": 102,
                          "multiplier": 2,
                          "description": "Entertainment includes purchases made at sports promoters, movie theaters, theatrical promoters, amusement parks, tourist attractions, record stores and video rentals."
                        },
                        {
                          "categoryName": "Hotels",
                          "categoryId": 103,
                          "multiplier": 5,
                          "description": "Hotels include businesses that provide sleeping or meeting room accommodations. Some goods and services that appear on a hotel bill are included. Often restaurants in hotels are categorized as a hotel purchase."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Request is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1101",
                        "message": "Reward program Id not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Reward program Id not found": {
                    "value": {
                      "code": "1101",
                      "message": "Reward program Id not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Categories not found for the reward program": {
                    "value": {
                      "code": "1102",
                      "message": "Categories not found for the reward program",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/reward-programs": {
      "get": {
        "tags": [
          "Reward Program Information"
        ],
        "summary": "searchRewardPrograms",
        "description": "Query all reward programs",
        "operationId": "searchRewardPrograms",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data describing reward programs associated with accounts",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RewardProgramsentity"
                    },
                    {
                      "description": "An optionally paginated array of reward programs",
                      "example": {
                        "rewardPrograms": [
                          {
                            "programName": "Marriott Bonvoy",
                            "rewardProgramId": "4FRCCQvGW0GZEMtsOQWlkQ",
                            "programUrl": "https://www.marriott.com/loyalty.mi",
                            "memberships": [
                              {
                                "accountIds": [
                                  "af0f8e58-9649-4c29-bab2-0295d522cd6f",
                                  "e75e31eb-bf04-4d87-9f20-4554f63a639e"
                                ],
                                "businessOrConsumer": "CONSUMER",
                                "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                                "memberId": "5ee28848b4f242a6b7a41e0daa03a824",
                                "memberNumber": "1783949940",
                                "memberTier": "Gold",
                                "balances": [
                                  {
                                    "name": "Points",
                                    "type": "POINTS",
                                    "balance": 900,
                                    "accruedYtd": 1000,
                                    "redeemedYtd": 200,
                                    "qualifying": false
                                  },
                                  {
                                    "name": "Promotional",
                                    "type": "POINTS",
                                    "balance": 900,
                                    "accrued": 1000,
                                    "redeemed": 200,
                                    "qualifying": false
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "programName": "United MileagePlus®",
                            "rewardProgramId": "GY4cHWCPxkqgkY61h4BKdQ",
                            "programUrl": "https://www.united.com/en/us/fly/mileageplus.html",
                            "memberships": [
                              {
                                "accountIds": [
                                  "b4ef4572-452d-41bd-9d2d-1b29dafe63f0"
                                ],
                                "businessOrConsumer": "BUSINESS",
                                "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                                "memberId": "b6b319dd3e2c4592847ad6ee32d518bc",
                                "memberNumber": "9394970669",
                                "balances": [
                                  {
                                    "name": "Miles",
                                    "type": "MILES",
                                    "balance": 900,
                                    "accrued": 1000,
                                    "redeemed": 200,
                                    "qualifying": false
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "programName": "Starbucks Rewards",
                            "rewardProgramId": "iqOtPUEYb0Go6SCL8As4fQ",
                            "programUrl": "https://www.starbucks.com/rewards",
                            "memberships": [
                              {
                                "accountIds": [
                                  "89cf3262-ff38-4f6a-afbc-aafc50cac751"
                                ],
                                "businessOrConsumer": "CONSUMER",
                                "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                                "memberId": "95c1aeacd85e4783950a9c2d6e76efa9",
                                "memberNumber": "7417973194",
                                "balances": [
                                  {
                                    "name": "Stars",
                                    "type": "POINTS",
                                    "balance": 900,
                                    "accrued": 1000,
                                    "redeemed": 200,
                                    "qualifying": false
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Multiple Reward Programs": {
                    "summary": "Example showing multiple reward programs",
                    "value": {
                      "rewardPrograms": [
                        {
                          "programName": "Marriott Bonvoy",
                          "rewardProgramId": "4FRCCQvGW0GZEMtsOQWlkQ",
                          "programUrl": "https://www.marriott.com/loyalty.mi",
                          "memberships": [
                            {
                              "accountIds": [
                                "af0f8e58-9649-4c29-bab2-0295d522cd6f",
                                "e75e31eb-bf04-4d87-9f20-4554f63a639e"
                              ],
                              "businessOrConsumer": "CONSUMER",
                              "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                              "memberId": "5ee28848b4f242a6b7a41e0daa03a824",
                              "memberNumber": "1783949940",
                              "memberTier": "Gold",
                              "balances": [
                                {
                                  "name": "Points",
                                  "type": "POINTS",
                                  "balance": 900,
                                  "accruedYtd": 1000,
                                  "redeemedYtd": 200,
                                  "qualifying": false
                                },
                                {
                                  "name": "Promotional",
                                  "type": "POINTS",
                                  "balance": 900,
                                  "accrued": 1000,
                                  "redeemed": 200,
                                  "qualifying": false
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "programName": "United MileagePlus®",
                          "rewardProgramId": "GY4cHWCPxkqgkY61h4BKdQ",
                          "programUrl": "https://www.united.com/en/us/fly/mileageplus.html",
                          "memberships": [
                            {
                              "accountIds": [
                                "b4ef4572-452d-41bd-9d2d-1b29dafe63f0"
                              ],
                              "businessOrConsumer": "BUSINESS",
                              "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                              "memberId": "b6b319dd3e2c4592847ad6ee32d518bc",
                              "memberNumber": "9394970669",
                              "balances": [
                                {
                                  "name": "Miles",
                                  "type": "MILES",
                                  "balance": 900,
                                  "accrued": 1000,
                                  "redeemed": 200,
                                  "qualifying": false
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "programName": "Starbucks Rewards",
                          "rewardProgramId": "iqOtPUEYb0Go6SCL8As4fQ",
                          "programUrl": "https://www.starbucks.com/rewards",
                          "memberships": [
                            {
                              "accountIds": [
                                "89cf3262-ff38-4f6a-afbc-aafc50cac751"
                              ],
                              "businessOrConsumer": "CONSUMER",
                              "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                              "memberId": "95c1aeacd85e4783950a9c2d6e76efa9",
                              "memberNumber": "7417973194",
                              "balances": [
                                {
                                  "name": "Stars",
                                  "type": "POINTS",
                                  "balance": 900,
                                  "accrued": 1000,
                                  "redeemed": 200,
                                  "qualifying": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/reward-programs/{rewardProgramId}": {
      "get": {
        "tags": [
          "Reward Program Information"
        ],
        "summary": "getRewardProgram",
        "description": "Get a specific reward program",
        "operationId": "getRewardProgram",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "rewardProgramId",
            "in": "path",
            "description": "Reward Program Identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data describing reward programs associated with accounts",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RewardProgramentity"
                    },
                    {
                      "description": "Reward program detail",
                      "example": {
                        "programName": "Discover Cashback Bonus",
                        "rewardProgramId": "ywX9ME0FXUa6Mtj0xkOgtA",
                        "programUrl": "https://www.discover.com/credit-cards/cashback-bonus/",
                        "memberships": [
                          {
                            "accountIds": [
                              "af0f8e58-9649-4c29-bab2-0295d522cd6f",
                              "e75e31eb-bf04-4d87-9f20-4554f63a639e"
                            ],
                            "businessOrConsumer": "CONSUMER",
                            "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                            "memberId": "b0a853a278804e1694d3104709cbfb58",
                            "memberNumber": "6137299224",
                            "memberTier": "Gold",
                            "balances": [
                              {
                                "name": "Cashback",
                                "type": "CASHBACK",
                                "balance": 101.95,
                                "accruedYtd": 4500.1,
                                "redeemedYtd": 234.45,
                                "qualifying": false
                              },
                              {
                                "name": "Cashback Match",
                                "type": "CASHBACK",
                                "balance": 401.95,
                                "accruedYtd": 500.1,
                                "redeemedYtd": 134.45,
                                "qualifying": false
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Single Reward Program": {
                    "value": {
                      "programName": "Discover Cashback Bonus",
                      "rewardProgramId": "ywX9ME0FXUa6Mtj0xkOgtA",
                      "programUrl": "https://www.discover.com/credit-cards/cashback-bonus/",
                      "memberships": [
                        {
                          "accountIds": [
                            "af0f8e58-9649-4c29-bab2-0295d522cd6f",
                            "e75e31eb-bf04-4d87-9f20-4554f63a639e"
                          ],
                          "businessOrConsumer": "CONSUMER",
                          "customerId": "kBA5C3d7cBK9DuRngsQRwt6Ydo80bjYDR7n4O5yCKshizuS7hOZJ4cAevBne",
                          "memberId": "b0a853a278804e1694d3104709cbfb58",
                          "memberNumber": "6137299224",
                          "memberTier": "Gold",
                          "balances": [
                            {
                              "name": "Cashback",
                              "type": "CASHBACK",
                              "balance": 101.95,
                              "accruedYtd": 4500.1,
                              "redeemedYtd": 234.45,
                              "qualifying": false
                            },
                            {
                              "name": "Cashback Match",
                              "type": "CASHBACK",
                              "balance": 401.95,
                              "accruedYtd": 500.1,
                              "redeemedYtd": 134.45,
                              "qualifying": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Reward program Id not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1101",
                        "message": "Reward program Id not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Reward program Id not found": {
                    "value": {
                      "code": "1101",
                      "message": "Reward program Id not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-core-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/notification-subscriptions": {
      "post": {
        "tags": [
          "Event Notifications"
        ],
        "summary": "createNotificationSubscription",
        "description": "Creates notification subscription entry on the server",
        "operationId": "createNotificationSubscription",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Notification subscription",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NotificationSubscriptionentity"
                  },
                  {
                    "description": "Notification subscription",
                    "example": {
                      "type": "CONSENT_REVOKED",
                      "category": "CONSENT",
                      "callbackUrl": "https://abc.com/notification",
                      "subscriber": {
                        "name": "ABC Inc",
                        "type": "DATA_ACCESS_PLATFORM",
                        "homeUri": "https://abc.com/logo",
                        "logoUri": "https://abc.com/logo",
                        "registry": "FDX",
                        "registeredEntityName": "ABC",
                        "registeredEntityId": "ABC123"
                      },
                      "effectiveDate": "2021-11-24",
                      "subscriptionId": "GUID-SubscriptionId1"
                    }
                  }
                ]
              },
              "examples": {
                "Create Consent Revoked Notification": {
                  "value": {
                    "type": "CONSENT_REVOKED",
                    "category": "CONSENT",
                    "callbackUrl": "https://abc.com/notification",
                    "subscriber": {
                      "name": "ABC Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "https://abc.com/logo",
                      "logoUri": "https://abc.com/logo",
                      "registry": "FDX",
                      "registeredEntityName": "ABC",
                      "registeredEntityId": "ABC123"
                    },
                    "effectiveDate": "2021-11-24",
                    "subscriptionId": "GUID-SubscriptionId1"
                  }
                },
                "Account Takeover Subscription": {
                  "value": {
                    "type": "RISK",
                    "category": "FRAUD",
                    "callbackUrl": "https://abc.com/notification",
                    "subscriber": {
                      "name": "ABC Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "https://abc.com/logo",
                      "logoUri": "https://abc.com/logo",
                      "registry": "FDX",
                      "registeredEntityName": "ABC",
                      "registeredEntityId": "ABC123"
                    },
                    "effectiveDate": "2021-11-24",
                    "subscriptionId": "GUID-0a318518-ca16-4e66-1234"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotificationSubscriptionentity"
                    },
                    {
                      "description": "Provides the fields of a notification subscription",
                      "example": {
                        "type": "CONSENT_REVOKED",
                        "category": "CONSENT",
                        "callbackUrl": "https://abc.com/notification",
                        "subscriber": {
                          "name": "ABC Inc",
                          "type": "DATA_ACCESS_PLATFORM",
                          "homeUri": "https://abc.com/logo",
                          "logoUri": "https://abc.com/logo",
                          "registry": "FDX",
                          "registeredEntityName": "ABC",
                          "registeredEntityId": "ABC123"
                        },
                        "effectiveDate": "2021-11-24",
                        "subscriptionId": "GUID-SubscriptionId2"
                      }
                    }
                  ]
                },
                "examples": {
                  "Consent Revoked Notification created": {
                    "value": {
                      "type": "CONSENT_REVOKED",
                      "category": "CONSENT",
                      "callbackUrl": "https://abc.com/notification",
                      "subscriber": {
                        "name": "ABC Inc",
                        "type": "DATA_ACCESS_PLATFORM",
                        "homeUri": "https://abc.com/logo",
                        "logoUri": "https://abc.com/logo",
                        "registry": "FDX",
                        "registeredEntityName": "ABC",
                        "registeredEntityId": "ABC123"
                      },
                      "effectiveDate": "2021-11-24",
                      "subscriptionId": "GUID-SubscriptionId2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input sent by client does not satisfy API specification",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Invalid Input",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Invalid Input",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1206",
                        "message": "Method Not Allowed",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Method Not Allowed": {
                    "value": {
                      "code": "1206",
                      "message": "Method Not Allowed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1207",
                        "message": "Too Many Requests",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Too Many Requests": {
                    "value": {
                      "code": "1207",
                      "message": "Too Many Requests",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-event-notifications-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/notification-subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "Event Notifications"
        ],
        "summary": "getNotificationSubscription",
        "description": "Call to get notification subscription",
        "operationId": "getNotificationSubscription",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "ID of notification subscription",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotificationSubscriptionentity"
                    },
                    {
                      "description": "Provides the fields of a notification subscription",
                      "example": {
                        "type": "CONSENT_REVOKED",
                        "category": "CONSENT",
                        "callbackUrl": "https://abc.com/notification",
                        "subscriber": {
                          "name": "ABC Inc",
                          "type": "DATA_ACCESS_PLATFORM",
                          "homeUri": "https://abc.com/logo",
                          "logoUri": "https://abc.com/logo",
                          "registry": "FDX",
                          "registeredEntityName": "ABC",
                          "registeredEntityId": "ABC123"
                        },
                        "effectiveDate": "2021-11-24",
                        "subscriptionId": "GUID-SubscriptionId2"
                      }
                    }
                  ]
                },
                "examples": {
                  "Notification Subscription by ID success response": {
                    "value": {
                      "type": "CONSENT_REVOKED",
                      "category": "CONSENT",
                      "callbackUrl": "https://abc.com/notification",
                      "subscriber": {
                        "name": "ABC Inc",
                        "type": "DATA_ACCESS_PLATFORM",
                        "homeUri": "https://abc.com/logo",
                        "logoUri": "https://abc.com/logo",
                        "registry": "FDX",
                        "registeredEntityName": "ABC",
                        "registeredEntityId": "ABC123"
                      },
                      "effectiveDate": "2021-11-24",
                      "subscriptionId": "GUID-SubscriptionId2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input sent by client does not satisfy API specification",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Invalid Input",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Invalid Input",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1206",
                        "message": "Method Not Allowed",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Method Not Allowed": {
                    "value": {
                      "code": "1206",
                      "message": "Method Not Allowed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1207",
                        "message": "Too Many Requests",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Too Many Requests": {
                    "value": {
                      "code": "1207",
                      "message": "Too Many Requests",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-event-notifications-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Event Notifications"
        ],
        "summary": "deleteNotificationSubscription",
        "description": "Delete a notification subscription",
        "operationId": "deleteNotificationSubscription",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "ID of notification subscription",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1206",
                        "message": "Method Not Allowed",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Method Not Allowed": {
                    "value": {
                      "code": "1206",
                      "message": "Method Not Allowed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1207",
                        "message": "Too Many Requests",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Too Many Requests": {
                    "value": {
                      "code": "1207",
                      "message": "Too Many Requests",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-event-notifications-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/notifications": {
      "post": {
        "tags": [
          "Event Notifications"
        ],
        "summary": "publishNotification",
        "description": "Publish Notification",
        "operationId": "publishNotification",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Notificationentity"
                  },
                  {
                    "example": {
                      "notificationId": "req123456-GUID",
                      "type": "CONSENT_REVOKED",
                      "sentOn": "2021-07-15T14:46:41.375Z",
                      "category": "SECURITY",
                      "severity": "EMERGENCY",
                      "priority": "HIGH",
                      "publisher": {
                        "name": "XYZ Inc",
                        "type": "DATA_ACCESS_PLATFORM",
                        "homeUri": "http://example.com",
                        "logoUri": "http://example.com",
                        "registry": "FDX",
                        "registeredEntityName": "XYZ",
                        "registeredEntityId": "xyz1234"
                      },
                      "subscriber": {
                        "name": "ABC Inc",
                        "type": "DATA_ACCESS_PLATFORM",
                        "homeUri": "http://example.com",
                        "logoUri": "http://example.com",
                        "registry": "FDX",
                        "registeredEntityName": "ABC",
                        "registeredEntityId": "ABC123"
                      },
                      "notificationPayload": {
                        "id": "ConsentID-1",
                        "idType": "CONSENT",
                        "customFields": {
                          "name": "INITIATOR",
                          "value": "INDIVIDUAL"
                        }
                      },
                      "url": {
                        "href": "https://api.xyz.com/fdx/v6/consents/ConsentID-1/revocation",
                        "action": "GET",
                        "rel": "consent",
                        "types": [
                          "application/json"
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Publish Consent Revoked Notification": {
                  "value": {
                    "notificationId": "req123456-GUID",
                    "type": "CONSENT_REVOKED",
                    "sentOn": "2021-07-15T14:46:41.375Z",
                    "category": "SECURITY",
                    "severity": "EMERGENCY",
                    "priority": "HIGH",
                    "publisher": {
                      "name": "XYZ Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "XYZ",
                      "registeredEntityId": "xyz1234"
                    },
                    "subscriber": {
                      "name": "ABC Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "ABC",
                      "registeredEntityId": "ABC123"
                    },
                    "notificationPayload": {
                      "id": "ConsentID-1",
                      "idType": "CONSENT",
                      "customFields": {
                        "name": "INITIATOR",
                        "value": "INDIVIDUAL"
                      }
                    },
                    "url": {
                      "href": "https://api.xyz.com/fdx/v6/consents/ConsentID-1/revocation",
                      "action": "GET",
                      "rel": "consent",
                      "types": [
                        "application/json"
                      ]
                    }
                  }
                },
                "Publish Consent Updated Notification": {
                  "value": {
                    "notificationId": "req123457-GUID",
                    "type": "CONSENT_UPDATED",
                    "sentOn": "2022-04-15T14:46:41.375Z",
                    "category": "CONSENT",
                    "severity": "EMERGENCY",
                    "priority": "HIGH",
                    "publisher": {
                      "name": "XYZ Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "XYZ",
                      "registeredEntityId": "xyz1234"
                    },
                    "subscriber": {
                      "name": "ABC Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "ABC",
                      "registeredEntityId": "ABC123"
                    },
                    "notificationPayload": {
                      "id": "9585694d3ae58863",
                      "idType": "CONSENT",
                      "customFields": {
                        "name": "INITIATOR",
                        "value": "INDIVIDUAL"
                      }
                    },
                    "url": {
                      "href": "https://api.xyz.com/fdx/v5/consents/9585694d3ae58863",
                      "action": "GET",
                      "rel": "consent",
                      "types": [
                        "application/json"
                      ]
                    }
                  }
                },
                "Publish Account Takeover Notification": {
                  "value": {
                    "notificationId": "0a318518-ca16-4e66-1234",
                    "type": "RISK",
                    "sentOn": "2021-07-15T14:46:41.375Z",
                    "category": "FRAUD",
                    "severity": "EMERGENCY",
                    "priority": "HIGH",
                    "publisher": {
                      "name": "XYZ Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "XYZ",
                      "registeredEntityId": "xyz1234"
                    },
                    "subscriber": {
                      "name": "ABC Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "ABC",
                      "registeredEntityId": "ABC123"
                    },
                    "notificationPayload": {
                      "id": "0a318518-ca16-4e66-be76-865a632ea771",
                      "idType": "ACCOUNT"
                    },
                    "url": {
                      "href": "https://api.xyz.com/fdx/v4/notifications?dataRecipientId=FIREFLY",
                      "action": "GET",
                      "rel": "notification",
                      "types": [
                        "application/json"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1206",
                        "message": "Method Not Allowed",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Method Not Allowed": {
                    "value": {
                      "code": "1206",
                      "message": "Method Not Allowed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1207",
                        "message": "Too Many Requests",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Too Many Requests": {
                    "value": {
                      "code": "1207",
                      "message": "Too Many Requests",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-event-notifications-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Event Notifications"
        ],
        "summary": "getNotifications",
        "description": "Get Notifications",
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataRecipientId",
            "in": "query",
            "description": "ID of Data Recipient (DR), omit for all DRs of a Data Access Platform",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Notificationsentity"
                    },
                    {
                      "description": "A paginated array of Notifications",
                      "example": {
                        "notifications": [
                          {
                            "notificationId": "0a318518-ca16-4e66-1234",
                            "type": "RISK",
                            "sentOn": "2021-07-15T14:46:41.375Z",
                            "category": "FRAUD",
                            "severity": "EMERGENCY",
                            "priority": "HIGH",
                            "publisher": {
                              "name": "XYZ Inc",
                              "type": "DATA_ACCESS_PLATFORM",
                              "homeUri": "http://example.com",
                              "logoUri": "http://example.com",
                              "registry": "FDX",
                              "registeredEntityName": "XYZ",
                              "registeredEntityId": "xyz1234"
                            },
                            "subscriber": {
                              "name": "ABC Inc",
                              "type": "DATA_ACCESS_PLATFORM",
                              "homeUri": "http://example.com",
                              "logoUri": "http://example.com",
                              "registry": "FDX",
                              "registeredEntityName": "ABC",
                              "registeredEntityId": "ABC123"
                            },
                            "notificationPayload": {
                              "id": "0a318518-ca16-4e66-be76-865a632ea771",
                              "idType": "ACCOUNT"
                            },
                            "url": {
                              "href": "https://api.xyz.com/fdx/v4/notifications?dataRecipientId=FIREFLY",
                              "action": "GET",
                              "rel": "notification",
                              "types": [
                                "application/json"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Risk Notification for DR": {
                    "value": {
                      "notifications": [
                        {
                          "notificationId": "0a318518-ca16-4e66-1234",
                          "type": "RISK",
                          "sentOn": "2021-07-15T14:46:41.375Z",
                          "category": "FRAUD",
                          "severity": "EMERGENCY",
                          "priority": "HIGH",
                          "publisher": {
                            "name": "XYZ Inc",
                            "type": "DATA_ACCESS_PLATFORM",
                            "homeUri": "http://example.com",
                            "logoUri": "http://example.com",
                            "registry": "FDX",
                            "registeredEntityName": "XYZ",
                            "registeredEntityId": "xyz1234"
                          },
                          "subscriber": {
                            "name": "ABC Inc",
                            "type": "DATA_ACCESS_PLATFORM",
                            "homeUri": "http://example.com",
                            "logoUri": "http://example.com",
                            "registry": "FDX",
                            "registeredEntityName": "ABC",
                            "registeredEntityId": "ABC123"
                          },
                          "notificationPayload": {
                            "id": "0a318518-ca16-4e66-be76-865a632ea771",
                            "idType": "ACCOUNT"
                          },
                          "url": {
                            "href": "https://api.xyz.com/fdx/v4/notifications?dataRecipientId=FIREFLY",
                            "action": "GET",
                            "rel": "notification",
                            "types": [
                              "application/json"
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1206",
                        "message": "Method Not Allowed",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Method Not Allowed": {
                    "value": {
                      "code": "1206",
                      "message": "Method Not Allowed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1207",
                        "message": "Too Many Requests",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Too Many Requests": {
                    "value": {
                      "code": "1207",
                      "message": "Too Many Requests",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-event-notifications-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/fraud/suspected-incident": {
      "post": {
        "tags": [
          "Fraud Notification"
        ],
        "summary": "reportSuspectedFraudIncident",
        "description": "Notify Data Provider of suspected fraud",
        "operationId": "reportSuspectedFraudIncident",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SuspectedFraudIncidententity"
                  },
                  {
                    "example": {
                      "type": "RISK",
                      "suspectedIncidentId": "0a318518-ca16-4e66-be76-865a632ea771",
                      "reporter": {
                        "name": "ABC Inc",
                        "type": "DATA_ACCESS_PLATFORM",
                        "homeUri": "http://example.com",
                        "logoUri": "http://example.com",
                        "registry": "FDX",
                        "registeredEntityName": "ABC",
                        "registeredEntityId": "ABC123"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "RISK": {
                  "value": {
                    "type": "RISK",
                    "suspectedIncidentId": "0a318518-ca16-4e66-be76-865a632ea771",
                    "reporter": {
                      "name": "ABC Inc",
                      "type": "DATA_ACCESS_PLATFORM",
                      "homeUri": "http://example.com",
                      "logoUri": "http://example.com",
                      "registry": "FDX",
                      "registeredEntityName": "ABC",
                      "registeredEntityId": "ABC123"
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-fraud-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/availability": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "getAvailability",
        "description": "Get information about this API's availability",
        "operationId": "getAvailability",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "operationId",
            "in": "query",
            "description": "Specific operationId for which to get the metrics. Optional",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXResourceOperationID"
                },
                {
                  "description": "Specific operationId for which to get the metrics. Optional"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status and planned times of API availability",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AvailabilityListentity"
                    },
                    {
                      "description": "Response object for /availability API"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-meta-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/capability": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "getCapability",
        "description": "Get information about this API's capability",
        "operationId": "getCapability",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "operationId",
            "in": "query",
            "description": "Specific operationId for which to get the metrics. Optional",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXResourceOperationID"
                },
                {
                  "description": "Specific operationId for which to get the metrics. Optional"
                }
              ]
            }
          },
          {
            "name": "fdxVersion",
            "in": "query",
            "description": "Specific FDX version for which to get the capability. Optional",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXVersion"
                },
                {
                  "description": "Specific FDX version for which to get the capability. Optional"
                }
              ]
            }
          },
          {
            "name": "resultType",
            "in": "query",
            "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResultType"
                },
                {
                  "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API's capability for connections, cutoff times and product types",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Capabilityentity"
                    },
                    {
                      "description": "The response object for the API /capability request"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-meta-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/certification-metrics": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "getCertificationMetrics",
        "description": "Get certification performance metrics for this implementer's APIs",
        "operationId": "getCertificationMetrics",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "operationId",
            "in": "query",
            "description": "Specific operationId for which to get the metrics. Optional",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXResourceOperationID"
                },
                {
                  "description": "Specific operationId for which to get the metrics. Optional"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of API's certification metrics",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CertificationMetricsentity"
                    },
                    {
                      "description": "Response object for /certification-metrics API"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-meta-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/transfers": {
      "get": {
        "tags": [
          "Internal Transfers"
        ],
        "summary": "searchForTransfers",
        "description": "Search for transfers",
        "operationId": "searchForTransfers",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Return items that have been created or updated since the nextUpdateId",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchStartTransferDate",
            "in": "query",
            "description": "Start time for use in retrieval of transfers by transfer date",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-07-15"
            }
          },
          {
            "name": "searchEndTransferDate",
            "in": "query",
            "description": "End time for use in retrieval of transfers by transfer date",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-07-15"
            }
          },
          {
            "name": "searchFromAccountIds",
            "in": "query",
            "description": "Search for transfers by source account",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "searchToAccountIds",
            "in": "query",
            "description": "Search for transfers by source account",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "searchStatuses",
            "in": "query",
            "description": "Search for transfers by source account",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            }
          },
          {
            "name": "searchTransferIds",
            "in": "query",
            "description": "Search for transfers by id",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Transfersentity"
                    },
                    {
                      "description": "A list of transfers"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Start or end date value is not in the ISO 8601 format",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "702",
                        "message": "Invalid start or end date",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid start or end date": {
                    "value": {
                      "code": "702",
                      "message": "Invalid start or end date",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid date range": {
                    "value": {
                      "code": "703",
                      "message": "Invalid date range",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Internal Transfers"
        ],
        "summary": "requestAccountTransfer",
        "description": "Create a transfer between accounts",
        "operationId": "requestAccountTransfer",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Data of the transfer request",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferforCreateentity1"
                  },
                  {
                    "description": "Data of the transfer request",
                    "example": {
                      "transferId": "MY-TRANSFER-ID",
                      "fromAccountId": "ACCOUNT-123",
                      "toAccountId": "ACCOUNT-456",
                      "amount": 100,
                      "memo": "FDX Transfer Example",
                      "paymentDetails": {
                        "principalAmount": 75,
                        "interestAmount": 10,
                        "insuranceAmount": 5,
                        "escrowAmount": 5,
                        "pmiAmount": 5,
                        "feesAmount": 0
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Transfer Example": {
                  "value": {
                    "transferId": "MY-TRANSFER-ID",
                    "fromAccountId": "ACCOUNT-123",
                    "toAccountId": "ACCOUNT-456",
                    "amount": 100,
                    "memo": "FDX Transfer Example",
                    "paymentDetails": {
                      "principalAmount": 75,
                      "interestAmount": 10,
                      "insuranceAmount": 5,
                      "escrowAmount": 5,
                      "pmiAmount": 5,
                      "feesAmount": 0
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Initial status of the requested transfer",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Transferentity"
                    },
                    {
                      "description": "A single transfer of money. Refer to Transfers for a list of multiple transfers.",
                      "example": {
                        "transferId": "MY-TRANSFER-ID",
                        "fromAccountId": "ACCOUNT-123",
                        "toAccountId": "ACCOUNT-456",
                        "amount": 100,
                        "memo": "FDX Transfer Example",
                        "paymentDetails": {
                          "principalAmount": 75,
                          "interestAmount": 10,
                          "insuranceAmount": 5,
                          "escrowAmount": 5,
                          "pmiAmount": 5,
                          "feesAmount": 0
                        },
                        "referenceId": "FI-TRANSFER-ID",
                        "status": "SCHEDULED",
                        "transferTime": "2021-03-14T13:15:30.751Z"
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Transfer": {
                    "value": {
                      "transferId": "MY-TRANSFER-ID",
                      "fromAccountId": "ACCOUNT-123",
                      "toAccountId": "ACCOUNT-456",
                      "amount": 100,
                      "memo": "FDX Transfer Example",
                      "paymentDetails": {
                        "principalAmount": 75,
                        "interestAmount": 10,
                        "insuranceAmount": 5,
                        "escrowAmount": 5,
                        "pmiAmount": 5,
                        "feesAmount": 0
                      },
                      "referenceId": "FI-TRANSFER-ID",
                      "status": "SCHEDULED",
                      "transferTime": "2021-03-14T13:15:30.751Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Source account does not have sufficient funds",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "910",
                        "message": "Insufficient funds",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Insufficient funds": {
                    "value": {
                      "code": "910",
                      "message": "Insufficient funds",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Account not authorized for transfer",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "903",
                        "message": "Source account not authorized for transfer",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Source account not authorized for transfer": {
                    "value": {
                      "code": "903",
                      "message": "Source account not authorized for transfer",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account not authorized for transfer": {
                    "value": {
                      "code": "906",
                      "message": "Destination account not authorized for transfer",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested transfer is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "901",
                        "message": "Source account not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Source account not found": {
                    "value": {
                      "code": "901",
                      "message": "Source account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account not found": {
                    "value": {
                      "code": "904",
                      "message": "Destination account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid amount": {
                    "value": {
                      "code": "907",
                      "message": "Invalid amount",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Transfer not found": {
                    "value": {
                      "code": "950",
                      "message": "Transfer not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate transfer request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "908",
                        "message": "Duplicate transfer request",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate transfer request": {
                    "value": {
                      "code": "908",
                      "message": "Duplicate transfer request",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/transfers/{transferId}": {
      "get": {
        "tags": [
          "Internal Transfers"
        ],
        "summary": "getTransfer",
        "description": "Get a transfer been accounts",
        "operationId": "getTransfer",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "transferId",
            "in": "path",
            "description": "Transfer identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Transferentity"
                    },
                    {
                      "description": "A single transfer of money. Refer to Transfers for a list of multiple transfers.",
                      "example": {
                        "transferId": "MY-TRANSFER-ID",
                        "fromAccountId": "ACCOUNT-123",
                        "toAccountId": "ACCOUNT-456",
                        "amount": 100,
                        "memo": "FDX Transfer Example",
                        "paymentDetails": {
                          "principalAmount": 75,
                          "interestAmount": 10,
                          "insuranceAmount": 5,
                          "escrowAmount": 5,
                          "pmiAmount": 5,
                          "feesAmount": 0
                        },
                        "referenceId": "FI-TRANSFER-ID",
                        "status": "SCHEDULED",
                        "transferTime": "2021-03-14T13:15:30.751Z"
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieved Transfer": {
                    "value": {
                      "transferId": "MY-TRANSFER-ID",
                      "fromAccountId": "ACCOUNT-123",
                      "toAccountId": "ACCOUNT-456",
                      "amount": 100,
                      "memo": "FDX Transfer Example",
                      "paymentDetails": {
                        "principalAmount": 75,
                        "interestAmount": 10,
                        "insuranceAmount": 5,
                        "escrowAmount": 5,
                        "pmiAmount": 5,
                        "feesAmount": 0
                      },
                      "referenceId": "FI-TRANSFER-ID",
                      "status": "SCHEDULED",
                      "transferTime": "2021-03-14T13:15:30.751Z"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Internal Transfers"
        ],
        "summary": "cancelTransfer",
        "description": "Cancel a transfer between accounts",
        "operationId": "cancelTransfer",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "transferId",
            "in": "path",
            "description": "Transfer identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Transferentity"
                    },
                    {
                      "description": "A single transfer of money. Refer to Transfers for a list of multiple transfers.",
                      "example": {
                        "transferId": "MY-TRANSFER-ID",
                        "fromAccountId": "ACCOUNT-123",
                        "toAccountId": "ACCOUNT-456",
                        "amount": 100,
                        "memo": "FDX Transfer Example",
                        "paymentDetails": {
                          "principalAmount": 75,
                          "interestAmount": 10,
                          "insuranceAmount": 5,
                          "escrowAmount": 5,
                          "pmiAmount": 5,
                          "feesAmount": 0
                        },
                        "referenceId": "FI-TRANSFER-ID",
                        "status": "SCHEDULED",
                        "transferTime": "2021-03-14T13:15:30.751Z"
                      }
                    }
                  ]
                },
                "examples": {
                  "Deleted Transfer": {
                    "value": {
                      "transferId": "MY-TRANSFER-ID",
                      "fromAccountId": "ACCOUNT-123",
                      "toAccountId": "ACCOUNT-456",
                      "amount": 100,
                      "memo": "FDX Transfer Example",
                      "paymentDetails": {
                        "principalAmount": 75,
                        "interestAmount": 10,
                        "insuranceAmount": 5,
                        "escrowAmount": 5,
                        "pmiAmount": 5,
                        "feesAmount": 0
                      },
                      "referenceId": "FI-TRANSFER-ID",
                      "status": "SCHEDULED",
                      "transferTime": "2021-03-14T13:15:30.751Z"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payees": {
      "get": {
        "tags": [
          "Payee Management"
        ],
        "summary": "searchForPayees",
        "description": "Search for payees",
        "operationId": "searchForPayees",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Return items that have been created or updated since the nextUpdateId",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeesentity"
                    },
                    {
                      "description": "A list of payees",
                      "example": {
                        "page": {
                          "nextOffset": "next-offset-123-xyz",
                          "prevOffset": "prev-offset-456-abc",
                          "totalElements": 100
                        },
                        "updates": {
                          "nextUpdateId": "next-update-id-456-krl"
                        },
                        "links": {
                          "next": {
                            "href": "/payees?offset=next-offset-123-xyz"
                          },
                          "prev": {
                            "href": "/payees?offset=prev-offset-456-abc"
                          },
                          "updates": {
                            "href": "/payees?updatedSince=next-update-id-456-krl"
                          }
                        },
                        "payees": [
                          {
                            "merchant": {
                              "displayName": "My Cell Phone Biller",
                              "name": {
                                "company": "US Cellular"
                              },
                              "address": {
                                "line1": "10 Cellular way",
                                "city": "New York",
                                "region": "NY",
                                "postalCode": "10001"
                              },
                              "phone": {
                                "type": "CELL",
                                "country": "+1",
                                "number": "2013329944"
                              },
                              "payeeId": "payee-1001",
                              "merchantAccountIds": [
                                "999900008888"
                              ],
                              "status": "ACTIVE",
                              "expiresTimestamp": "2025-03-15T13:29:19+0000"
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieve Payees": {
                    "value": {
                      "page": {
                        "nextOffset": "next-offset-123-xyz",
                        "prevOffset": "prev-offset-456-abc",
                        "totalElements": 100
                      },
                      "updates": {
                        "nextUpdateId": "next-update-id-456-krl"
                      },
                      "links": {
                        "next": {
                          "href": "/payees?offset=next-offset-123-xyz"
                        },
                        "prev": {
                          "href": "/payees?offset=prev-offset-456-abc"
                        },
                        "updates": {
                          "href": "/payees?updatedSince=next-update-id-456-krl"
                        }
                      },
                      "payees": [
                        {
                          "merchant": {
                            "displayName": "My Cell Phone Biller",
                            "name": {
                              "company": "US Cellular"
                            },
                            "address": {
                              "line1": "10 Cellular way",
                              "city": "New York",
                              "region": "NY",
                              "postalCode": "10001"
                            },
                            "phone": {
                              "type": "CELL",
                              "country": "+1",
                              "number": "2013329944"
                            },
                            "payeeId": "payee-1001",
                            "merchantAccountIds": [
                              "999900008888"
                            ],
                            "status": "ACTIVE",
                            "expiresTimestamp": "2025-03-15T13:29:19+0000"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Payee Management"
        ],
        "summary": "createPayee",
        "description": "Create a payee",
        "operationId": "createPayee",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayeeForUpdateentity1"
                  },
                  {
                    "example": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "first": "Junie",
                          "middle": "B",
                          "last": "Jones",
                          "suffix": "Jr",
                          "prefix": "Ms",
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "BUSINESS",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "merchantAccountIds": [
                          "999900008888"
                        ]
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Create a Payee with all properties": {
                  "value": {
                    "merchant": {
                      "displayName": "My Cell Phone Biller",
                      "name": {
                        "first": "Junie",
                        "middle": "B",
                        "last": "Jones",
                        "suffix": "Jr",
                        "prefix": "Ms",
                        "company": "US Cellular"
                      },
                      "address": {
                        "line1": "10 Cellular way",
                        "city": "New York",
                        "region": "NY",
                        "postalCode": "10001"
                      },
                      "phone": {
                        "type": "BUSINESS",
                        "country": "+1",
                        "number": "2013329944"
                      },
                      "merchantAccountIds": [
                        "999900008888"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Payee Exists",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "displayName": "My Cell Phone Biller",
                          "name": {
                            "company": "US Cellular"
                          },
                          "address": {
                            "line1": "10 Cellular way",
                            "city": "New York",
                            "region": "NY",
                            "postalCode": "10001"
                          },
                          "phone": {
                            "type": "CELL",
                            "country": "+1",
                            "number": "2013329944"
                          },
                          "payeeId": "payee-1001",
                          "merchantAccountIds": [
                            "999900008888"
                          ],
                          "status": "ACTIVE",
                          "expiresTimestamp": "2025-03-15T13:29:19+0000"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Existing Payee": {
                    "value": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "CELL",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "payeeId": "payee-1001",
                        "merchantAccountIds": [
                          "999900008888"
                        ],
                        "status": "ACTIVE",
                        "expiresTimestamp": "2025-03-15T13:29:19+0000"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "displayName": "My Cell Phone Biller",
                          "name": {
                            "company": "US Cellular"
                          },
                          "address": {
                            "line1": "10 Cellular way",
                            "city": "New York",
                            "region": "NY",
                            "postalCode": "10001"
                          },
                          "phone": {
                            "type": "CELL",
                            "country": "+1",
                            "number": "2013329944"
                          },
                          "payeeId": "payee-1001",
                          "merchantAccountIds": [
                            "999900008888"
                          ],
                          "status": "ACTIVE",
                          "expiresTimestamp": "2025-03-15T13:29:19+0000"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Created Payee": {
                    "value": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "CELL",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "payeeId": "payee-1001",
                        "merchantAccountIds": [
                          "999900008888"
                        ],
                        "status": "ACTIVE",
                        "expiresTimestamp": "2025-03-15T13:29:19+0000"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "displayName": "My Cell Phone Biller",
                          "name": {
                            "company": "US Cellular"
                          },
                          "address": {
                            "line1": "10 Cellular way",
                            "city": "New York",
                            "region": "NY",
                            "postalCode": "10001"
                          },
                          "phone": {
                            "type": "CELL",
                            "country": "+1",
                            "number": "2013329944"
                          },
                          "payeeId": "payee-1001",
                          "merchantAccountIds": [
                            "999900008888"
                          ],
                          "status": "ACTIVE",
                          "expiresTimestamp": "2025-03-15T13:29:19+0000"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Request": {
                    "value": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "CELL",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "payeeId": "payee-1001",
                        "merchantAccountIds": [
                          "999900008888"
                        ],
                        "status": "ACTIVE",
                        "expiresTimestamp": "2025-03-15T13:29:19+0000"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payees/{payeeId}": {
      "get": {
        "tags": [
          "Payee Management"
        ],
        "summary": "getPayee",
        "description": "Get a payee",
        "operationId": "getPayee",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "payeeId",
            "in": "path",
            "description": "Payee Identifier. Uniquely identifies a payee",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "displayName": "My Cell Phone Biller",
                          "name": {
                            "company": "US Cellular"
                          },
                          "address": {
                            "line1": "10 Cellular way",
                            "city": "New York",
                            "region": "NY",
                            "postalCode": "10001"
                          },
                          "phone": {
                            "type": "CELL",
                            "country": "+1",
                            "number": "2013329944"
                          },
                          "payeeId": "payee-1001",
                          "merchantAccountIds": [
                            "999900008888"
                          ],
                          "status": "ACTIVE",
                          "expiresTimestamp": "2025-03-15T13:29:19+0000"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieve Payee by Payee Id Response": {
                    "value": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "CELL",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "payeeId": "payee-1001",
                        "merchantAccountIds": [
                          "999900008888"
                        ],
                        "status": "ACTIVE",
                        "expiresTimestamp": "2025-03-15T13:29:19+0000"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payee with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "800",
                        "message": "Payee not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Payee Management"
        ],
        "summary": "updatePayee",
        "description": "Used to update an existing payee. The payee type must match the existing payee. This call updates the payee's fields to the values provided. If a field is not provided, the payee's field is not updated",
        "operationId": "updatePayee",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "payeeId",
            "in": "path",
            "description": "Payee Identifier. Uniquely identifies a payee",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayeeForUpdateentity"
                  },
                  {
                    "example": {
                      "merchant": {
                        "displayName": "My Business Cell Phone Biller"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Update Display Name": {
                  "value": {
                    "merchant": {
                      "displayName": "My Business Cell Phone Biller"
                    }
                  }
                },
                "Update Phone Number": {
                  "value": {
                    "merchant": {
                      "phone": {
                        "type": "CELL",
                        "country": "+1",
                        "number": "9085550000"
                      }
                    }
                  }
                },
                "Update Name and Address": {
                  "value": {
                    "merchant": {
                      "name": {
                        "company": "My Business Cell Phone Biller"
                      },
                      "address": {
                        "line1": "10 Cellular way",
                        "city": "New York",
                        "region": "NY",
                        "postalCode": "10001"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "displayName": "My Cell Phone Biller",
                          "name": {
                            "company": "US Cellular"
                          },
                          "address": {
                            "line1": "10 Cellular way",
                            "city": "New York",
                            "region": "NY",
                            "postalCode": "10001"
                          },
                          "phone": {
                            "type": "CELL",
                            "country": "+1",
                            "number": "2013329944"
                          },
                          "payeeId": "payee-1001",
                          "merchantAccountIds": [
                            "999900008888"
                          ],
                          "status": "ACTIVE",
                          "expiresTimestamp": "2025-03-15T13:29:19+0000"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Update": {
                    "value": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "CELL",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "payeeId": "payee-1001",
                        "merchantAccountIds": [
                          "999900008888"
                        ],
                        "status": "ACTIVE",
                        "expiresTimestamp": "2025-03-15T13:29:19+0000"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input sent by client does not satisfy API specification",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Invalid Input",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Invalid Input",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Payee cannot be modified or deleted": {
                    "value": {
                      "code": "801",
                      "message": "Payee cannot be modified or deleted",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payee with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "800",
                        "message": "Payee not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "displayName": "My Cell Phone Biller",
                          "name": {
                            "company": "US Cellular"
                          },
                          "address": {
                            "line1": "10 Cellular way",
                            "city": "New York",
                            "region": "NY",
                            "postalCode": "10001"
                          },
                          "phone": {
                            "type": "CELL",
                            "country": "+1",
                            "number": "2013329944"
                          },
                          "payeeId": "payee-1001",
                          "merchantAccountIds": [
                            "999900008888"
                          ],
                          "status": "ACTIVE",
                          "expiresTimestamp": "2025-03-15T13:29:19+0000"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Request": {
                    "value": {
                      "merchant": {
                        "displayName": "My Cell Phone Biller",
                        "name": {
                          "company": "US Cellular"
                        },
                        "address": {
                          "line1": "10 Cellular way",
                          "city": "New York",
                          "region": "NY",
                          "postalCode": "10001"
                        },
                        "phone": {
                          "type": "CELL",
                          "country": "+1",
                          "number": "2013329944"
                        },
                        "payeeId": "payee-1001",
                        "merchantAccountIds": [
                          "999900008888"
                        ],
                        "status": "ACTIVE",
                        "expiresTimestamp": "2025-03-15T13:29:19+0000"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Payee Management"
        ],
        "summary": "deletePayee",
        "description": "Delete a payee",
        "operationId": "deletePayee",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "payeeId",
            "in": "path",
            "description": "Payee Identifier. Uniquely identifies a payee",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Payeeentity"
                    },
                    {
                      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
                      "example": {
                        "merchant": {
                          "status": "DELETED"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Deletion": {
                    "value": {
                      "merchant": {
                        "status": "DELETED"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Payee cannot be modified or deleted",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "801",
                        "message": "Payee cannot be modified or deleted",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payee cannot be modified or deleted": {
                    "value": {
                      "code": "801",
                      "message": "Payee cannot be modified or deleted",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payee with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "800",
                        "message": "Payee not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payment-initiation-parties": {
      "post": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "createPaymentInitiationParty",
        "description": "Create a payment initiation party associated with a customer profile",
        "operationId": "createPaymentInitiationParty",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitiationPartyentity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created payment initiation party",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentInitiationPartyCreateResponseentity"
                    },
                    {
                      "description": "Entity that stores FI payment initiation party details. Each payment\ninitiation party  will have a separate entry per FI customer, e.g. we\nmight have multiple payment initiation parties that represent the same\nphysical person, nevertheless since they are registered for separate\ncustomers then they will have separate entries.\n"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "listPaymentInitiationParties",
        "description": "Retrieve the payment initiation parties associated with a customer profile",
        "operationId": "listPaymentInitiationParties",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentInitiationPartiesentity"
                    },
                    {
                      "description": "Payment initiation party summaries"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payment-initiation-parties/{paymentInitiationPartyId}": {
      "get": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "getPaymentInitiationParty",
        "description": "Retrieve the payment initiation party details by ID",
        "operationId": "getPaymentInitiationParty",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentInitiationPartyentity"
                    },
                    {
                      "description": "Party details for FI payment initiation. Each payment initiation party\nwill have a separate entry per FI customer, for example we\nmight have multiple payment initiation parties that represent the same\nphysical person; since they are registered for separate\ncustomers they will have separate entries.\n"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "updatePaymentInitiationParty",
        "description": "Update the payment initiation party associated with a customer profile",
        "operationId": "updatePaymentInitiationParty",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitiationPartyentity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "deletePaymentInitiationParty",
        "description": "Remove the payment initiation party associated with a customer profile",
        "operationId": "deletePaymentInitiationParty",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payment-initiation-parties/{paymentInitiationPartyId}/payment-methods": {
      "post": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "createPaymentMethod",
        "description": "Registration of a payment initiation party to a payment method",
        "operationId": "createPaymentMethod",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitiationPartyToPaymentMethodentity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created payment method registration",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentInitiationPartyMethodCreateResponseentity"
                    },
                    {
                      "description": "Registration between a payment initiation party and a Payment Method"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payment-initiation-parties/{paymentInitiationPartyId}/payment-methods/{paymentMethodRegistrationId}": {
      "get": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "getPaymentMethodRegistration",
        "description": "Retrieve the details of a payment method registered with a payment initiation party",
        "operationId": "getPaymentMethodRegistration",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "paymentMethodRegistrationId",
            "in": "path",
            "description": "Registration identifier between a payment initiation party and a payment method",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentInitiationPartyToPaymentMethodentity"
                    },
                    {
                      "description": "Registration between a payment initiation party and a Payment Method"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "deletePaymentMethodRegistration",
        "description": "Remove the registered payment method from a payment initiation party",
        "operationId": "deletePaymentMethodRegistration",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "paymentMethodRegistrationId",
            "in": "path",
            "description": "Registration identifier between a payment initiation party and a payment method",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Payment Initiation Parties"
        ],
        "summary": "updatePaymentMethodRegistration",
        "description": "Update the payment method registration associated with payment initiation party",
        "operationId": "updatePaymentMethodRegistration",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentInitiationPartyId",
            "in": "path",
            "description": "This is an unique identifier of a payment initiation party",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "paymentMethodRegistrationId",
            "in": "path",
            "description": "Registration identifier between a payment initiation party and a payment method",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInitiationPartyToPaymentMethodentity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "searchForPayments",
        "description": "Search for payments",
        "operationId": "searchForPayments",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Return items that have been created or updated since the nextUpdateId",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymentsentity"
                    },
                    {
                      "description": "A list of payments",
                      "example": {
                        "page": {
                          "nextOffset": "next-offset-123-xyz",
                          "prevOffset": "prev-offset-456-abc",
                          "totalElements": 100
                        },
                        "updates": {
                          "nextUpdateId": "next-update-id-456-krl"
                        },
                        "links": {
                          "next": {
                            "href": "/payments?offset=next-offset-123-xyz"
                          },
                          "prev": {
                            "href": "/payments?offset=prev-offset-456-abc"
                          },
                          "updates": {
                            "href": "/payments?updatedSince=next-update-id-456-krl"
                          }
                        },
                        "payments": [
                          {
                            "fromAccountId": "ACCOUNT-123",
                            "toPayeeId": "PAYEE-ABC",
                            "amount": 10.99,
                            "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                            "dueDate": "2021-08-17",
                            "paymentId": "PAYMENT-213",
                            "recurringPaymentId": "RECURRING-PAYMENT-485",
                            "processedTimestamp": "2021-03-15T13:29:19+0000",
                            "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                            "status": "PROCESSED",
                            "links": [
                              {
                                "href": "/recurring-payment/RECURRING-PAYMENT-485",
                                "rel": "recurringPayment"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieve Payments": {
                    "value": {
                      "page": {
                        "nextOffset": "next-offset-123-xyz",
                        "prevOffset": "prev-offset-456-abc",
                        "totalElements": 100
                      },
                      "updates": {
                        "nextUpdateId": "next-update-id-456-krl"
                      },
                      "links": {
                        "next": {
                          "href": "/payments?offset=next-offset-123-xyz"
                        },
                        "prev": {
                          "href": "/payments?offset=prev-offset-456-abc"
                        },
                        "updates": {
                          "href": "/payments?updatedSince=next-update-id-456-krl"
                        }
                      },
                      "payments": [
                        {
                          "fromAccountId": "ACCOUNT-123",
                          "toPayeeId": "PAYEE-ABC",
                          "amount": 10.99,
                          "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                          "dueDate": "2021-08-17",
                          "paymentId": "PAYMENT-213",
                          "recurringPaymentId": "RECURRING-PAYMENT-485",
                          "processedTimestamp": "2021-03-15T13:29:19+0000",
                          "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                          "status": "PROCESSED",
                          "links": [
                            {
                              "href": "/recurring-payment/RECURRING-PAYMENT-485",
                              "rel": "recurringPayment"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "schedulePayment",
        "description": "Schedule a payment",
        "operationId": "schedulePayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentForUpdateentity1"
                  },
                  {
                    "example": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17"
                    }
                  }
                ]
              },
              "examples": {
                "Schedule a Payment": {
                  "value": {
                    "fromAccountId": "ACCOUNT-123",
                    "toPayeeId": "PAYEE-ABC",
                    "amount": 10.99,
                    "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                    "dueDate": "2021-08-17"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Duplicate Payment",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Payment": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Creation": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "803",
                        "message": "Due date too soon",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Due date too soon": {
                    "value": {
                      "code": "803",
                      "message": "Due date too soon",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Payment rejected": {
                    "value": {
                      "code": "804",
                      "message": "Payment rejected",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested payment is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "800",
                        "message": "Payee not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account not found": {
                    "value": {
                      "code": "901",
                      "message": "Source account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account closed": {
                    "value": {
                      "code": "902",
                      "message": "Source account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account not found": {
                    "value": {
                      "code": "904",
                      "message": "Destination account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account closed": {
                    "value": {
                      "code": "905",
                      "message": "Destination account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid amount": {
                    "value": {
                      "code": "907",
                      "message": "Invalid amount",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Insufficient funds": {
                    "value": {
                      "code": "910",
                      "message": "Insufficient funds",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Request": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Account type not supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "704",
                        "message": "Account type not supported",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account type not supported": {
                    "value": {
                      "code": "704",
                      "message": "Account type not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "getPayment",
        "description": "Get a payment",
        "operationId": "getPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment Identifier. Uniquely identifies a payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "processedTimestamp": "2021-03-15T13:29:19+0000",
                        "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                        "status": "PROCESSED",
                        "links": [
                          {
                            "href": "/recurring-payment/RECURRING-PAYMENT-854",
                            "rel": "recurringPayment"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieve Payment": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "processedTimestamp": "2021-03-15T13:29:19+0000",
                      "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                      "status": "PROCESSED",
                      "links": [
                        {
                          "href": "/recurring-payment/RECURRING-PAYMENT-854",
                          "rel": "recurringPayment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A payment with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "802",
                        "message": "Payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payment not found": {
                    "value": {
                      "code": "802",
                      "message": "Payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Payments"
        ],
        "summary": "updatePayment",
        "description": "Update a payment",
        "operationId": "updatePayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment Identifier. Uniquely identifies a payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentForUpdateentity2"
                  },
                  {
                    "example": {
                      "fromAccountId": "ACCOUNT-890",
                      "amount": 5,
                      "dueDate": "2021-08-30",
                      "toPayeeId": "PAYEE-XYZ"
                    }
                  }
                ]
              },
              "examples": {
                "Update Amount": {
                  "value": {
                    "fromAccountId": "ACCOUNT-890",
                    "amount": 5,
                    "dueDate": "2021-08-30",
                    "toPayeeId": "PAYEE-XYZ"
                  }
                },
                "Update Payee": {
                  "value": {
                    "fromAccountId": "ACCOUNT-890",
                    "toPayeeId": "PAYEE-XYZ",
                    "amount": 5,
                    "dueDate": "2021-08-30"
                  }
                },
                "Update From Account and Due Date": {
                  "value": {
                    "fromAccountId": "ACCOUNT-890",
                    "dueDate": "2021-08-30",
                    "toPayeeId": "PAYEE-XYZ",
                    "amount": 5
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "processedTimestamp": "2021-03-15T13:29:19+0000",
                        "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                        "status": "PROCESSED",
                        "links": [
                          {
                            "href": "/recurring-payment/RECURRING-PAYMENT-548",
                            "rel": "recurringPayment"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Update": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "processedTimestamp": "2021-03-15T13:29:19+0000",
                      "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                      "status": "PROCESSED",
                      "links": [
                        {
                          "href": "/recurring-payment/RECURRING-PAYMENT-548",
                          "rel": "recurringPayment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "803",
                        "message": "Due date too soon",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Due date too soon": {
                    "value": {
                      "code": "803",
                      "message": "Due date too soon",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Payment cannot be modified or cancelled": {
                    "value": {
                      "code": "805",
                      "message": "Payment cannot be modified or cancelled",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Insufficient funds": {
                    "value": {
                      "code": "910",
                      "message": "Insufficient funds",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested payment change is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "802",
                        "message": "Payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payment not found": {
                    "value": {
                      "code": "802",
                      "message": "Payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account not found": {
                    "value": {
                      "code": "901",
                      "message": "Source account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account closed": {
                    "value": {
                      "code": "902",
                      "message": "Source account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account not found": {
                    "value": {
                      "code": "904",
                      "message": "Destination account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account closed": {
                    "value": {
                      "code": "905",
                      "message": "Destination account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid amount": {
                    "value": {
                      "code": "907",
                      "message": "Invalid amount",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Insufficient funds": {
                    "value": {
                      "code": "910",
                      "message": "Insufficient funds",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "processedTimestamp": "2021-03-15T13:29:19+0000",
                        "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                        "status": "PROCESSED",
                        "links": [
                          {
                            "href": "/recurring-payment/RECURRING-PAYMENT-584",
                            "rel": "recurringPayment"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Request": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "processedTimestamp": "2021-03-15T13:29:19+0000",
                      "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                      "status": "PROCESSED",
                      "links": [
                        {
                          "href": "/recurring-payment/RECURRING-PAYMENT-584",
                          "rel": "recurringPayment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Account type not supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "704",
                        "message": "Account type not supported",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "704",
                      "message": "Account type not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Payments"
        ],
        "summary": "cancelPayment",
        "description": "Cancel a payment",
        "operationId": "cancelPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment Identifier. Uniquely identifies a payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymententity"
                    },
                    {
                      "description": "Represents a payment",
                      "example": {
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "paymentId": "PAYMENT-213",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "cancelledTimestamp": "2021-03-14T13:29:19+0000",
                        "status": "CANCELLED",
                        "links": [
                          {
                            "href": "/recurring-payment/RECURRING-PAYMENT-845",
                            "rel": "recurringPayment"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Cancel": {
                    "value": {
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "paymentId": "PAYMENT-213",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "cancelledTimestamp": "2021-03-14T13:29:19+0000",
                      "status": "CANCELLED",
                      "links": [
                        {
                          "href": "/recurring-payment/RECURRING-PAYMENT-845",
                          "rel": "recurringPayment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Payment cannot be modified or cancelled at this time. Likely due to the state that it is in",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "805",
                        "message": "Payment cannot be modified or cancelled",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payment cannot be modified or cancelled": {
                    "value": {
                      "code": "805",
                      "message": "Payment cannot be modified or cancelled",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A payment with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "802",
                        "message": "Payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payment not found": {
                    "value": {
                      "code": "802",
                      "message": "Payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/recurring-payments": {
      "get": {
        "tags": [
          "Recurring Payments"
        ],
        "summary": "searchForRecurringPayments",
        "description": "Search for recurring payments",
        "operationId": "searchForRecurringPayments",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Return items that have been created or updated since the nextUpdateId",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymentsentity"
                    },
                    {
                      "description": "A list of recurring payments",
                      "example": {
                        "page": {
                          "nextOffset": "next-offset-123-xyz",
                          "prevOffset": "prev-offset-456-abc",
                          "totalElements": 100
                        },
                        "updates": {
                          "nextUpdateId": "next-update-id-456-krl"
                        },
                        "links": {
                          "next": {
                            "href": "/recurring-payments?offset=next-offset-123-xyz"
                          },
                          "prev": {
                            "href": "/recurring-payments?offset=prev-offset-456-abc"
                          },
                          "updates": {
                            "href": "/recurring-payments?updatedSince=next-update-id-456-krl"
                          }
                        },
                        "recurringPayments": [
                          {
                            "frequency": "MONTHLY",
                            "duration": {
                              "type": "NUMBEROFTIMES",
                              "numberOfTimes": 12
                            },
                            "fromAccountId": "ACCOUNT-123",
                            "toPayeeId": "PAYEE-ABC",
                            "amount": 10.99,
                            "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                            "dueDate": "2021-08-17",
                            "recurringPaymentId": "RECURRING-PAYMENT-485",
                            "cancelledTimestamp": "2021-03-14T13:29:19+0000",
                            "status": "CANCELLED"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieve Recurring Payments": {
                    "value": {
                      "page": {
                        "nextOffset": "next-offset-123-xyz",
                        "prevOffset": "prev-offset-456-abc",
                        "totalElements": 100
                      },
                      "updates": {
                        "nextUpdateId": "next-update-id-456-krl"
                      },
                      "links": {
                        "next": {
                          "href": "/recurring-payments?offset=next-offset-123-xyz"
                        },
                        "prev": {
                          "href": "/recurring-payments?offset=prev-offset-456-abc"
                        },
                        "updates": {
                          "href": "/recurring-payments?updatedSince=next-update-id-456-krl"
                        }
                      },
                      "recurringPayments": [
                        {
                          "frequency": "MONTHLY",
                          "duration": {
                            "type": "NUMBEROFTIMES",
                            "numberOfTimes": 12
                          },
                          "fromAccountId": "ACCOUNT-123",
                          "toPayeeId": "PAYEE-ABC",
                          "amount": 10.99,
                          "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                          "dueDate": "2021-08-17",
                          "recurringPaymentId": "RECURRING-PAYMENT-485",
                          "cancelledTimestamp": "2021-03-14T13:29:19+0000",
                          "status": "CANCELLED"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Recurring Payments"
        ],
        "summary": "scheduleRecurringPayment",
        "description": "Schedule a recurring payment",
        "operationId": "scheduleRecurringPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RecurringPaymentforUpdateentity1"
                  },
                  {
                    "example": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17"
                    }
                  }
                ]
              },
              "examples": {
                "Create Recurring Payment": {
                  "value": {
                    "frequency": "MONTHLY",
                    "duration": {
                      "type": "NUMBEROFTIMES",
                      "numberOfTimes": 12
                    },
                    "fromAccountId": "ACCOUNT-123",
                    "toPayeeId": "PAYEE-ABC",
                    "amount": 10.99,
                    "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                    "dueDate": "2021-08-17"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Duplicate Recurring Payment",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Recurring Payment": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Creation": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "803",
                        "message": "Due date too soon",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Due date too soon": {
                    "value": {
                      "code": "803",
                      "message": "Due date too soon",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Payment rejected": {
                    "value": {
                      "code": "804",
                      "message": "Payment rejected",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Recurring payment rejected": {
                    "value": {
                      "code": "807",
                      "message": "Recurring payment rejected",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested payment is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "800",
                        "message": "Payee not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account not found": {
                    "value": {
                      "code": "901",
                      "message": "Source account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account closed": {
                    "value": {
                      "code": "902",
                      "message": "Source account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account not found": {
                    "value": {
                      "code": "904",
                      "message": "Destination account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account closed": {
                    "value": {
                      "code": "905",
                      "message": "Destination account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid amount": {
                    "value": {
                      "code": "907",
                      "message": "Invalid amount",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Insufficient funds": {
                    "value": {
                      "code": "910",
                      "message": "Insufficient funds",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Request": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Account type not supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "704",
                        "message": "Account type not supported",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account type not supported": {
                    "value": {
                      "code": "704",
                      "message": "Account type not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/recurring-payments/{recurringPaymentId}": {
      "get": {
        "tags": [
          "Recurring Payments"
        ],
        "summary": "getRecurringPayment",
        "description": "Get a recurring payment",
        "operationId": "getRecurringPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "recurringPaymentId",
            "in": "path",
            "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Retrieve Recurring Payment": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A recurring payment with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "806",
                        "message": "Recurring payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Recurring payment not found": {
                    "value": {
                      "code": "806",
                      "message": "Recurring payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Recurring Payments"
        ],
        "summary": "updateRecurringPayment",
        "description": "Update a recurring payment",
        "operationId": "updateRecurringPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "recurringPaymentId",
            "in": "path",
            "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "idempotency-key",
            "in": "header",
            "description": "Used to de-duplicate requests",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RecurringPaymentforUpdateentity2"
                  },
                  {
                    "example": {
                      "frequency": "MONTHLY",
                      "dueDate": "2021-08-30",
                      "fromAccountId": "ACCOUNT-890",
                      "toPayeeId": "PAYEE-XYZ",
                      "amount": 5,
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      }
                    }
                  }
                ]
              },
              "examples": {
                "Update Duration (type and numberOfTimes is required if type is NUMBEROFTIMES)": {
                  "value": {
                    "frequency": "MONTHLY",
                    "dueDate": "2021-08-30",
                    "fromAccountId": "ACCOUNT-890",
                    "toPayeeId": "PAYEE-XYZ",
                    "amount": 5,
                    "duration": {
                      "type": "NUMBEROFTIMES",
                      "numberOfTimes": 12
                    }
                  }
                },
                "Update Amount": {
                  "value": {
                    "frequency": "MONTHLY",
                    "amount": 10.99,
                    "dueDate": "2021-08-30",
                    "fromAccountId": "ACCOUNT-890",
                    "toPayeeId": "PAYEE-XYZ"
                  }
                },
                "Update Frequency and Due Date": {
                  "value": {
                    "fromAccountId": "ACCOUNT-123",
                    "frequency": "MONTHLY",
                    "dueDate": "2021-08-17",
                    "toPayeeId": "PAYEE-XYZ",
                    "amount": 5
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Update": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "803",
                        "message": "Due date too soon",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Due date too soon": {
                    "value": {
                      "code": "803",
                      "message": "Due date too soon",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Recurring payment cannot be modified or cancelled": {
                    "value": {
                      "code": "808",
                      "message": "Recurring payment cannot be modified or cancelled",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested recurring payment change is invalid",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "806",
                        "message": "Recurring payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Recurring payment not found": {
                    "value": {
                      "code": "806",
                      "message": "Recurring payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Payee not found": {
                    "value": {
                      "code": "800",
                      "message": "Payee not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account not found": {
                    "value": {
                      "code": "901",
                      "message": "Source account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Source account closed": {
                    "value": {
                      "code": "902",
                      "message": "Source account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account not found": {
                    "value": {
                      "code": "904",
                      "message": "Destination account not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Destination account closed": {
                    "value": {
                      "code": "905",
                      "message": "Destination account closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Invalid amount": {
                    "value": {
                      "code": "907",
                      "message": "Invalid amount",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Insufficient funds": {
                    "value": {
                      "code": "910",
                      "message": "Insufficient funds",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Duplicate Request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "status": "SCHEDULED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Duplicate Request": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "status": "SCHEDULED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Account type not supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "704",
                        "message": "Account type not supported",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account type not supported": {
                    "value": {
                      "code": "704",
                      "message": "Account type not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Recurring Payments"
        ],
        "summary": "cancelRecurringPayment",
        "description": "Cancel a recurring payment",
        "operationId": "cancelRecurringPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "recurringPaymentId",
            "in": "path",
            "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecurringPaymententity"
                    },
                    {
                      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
                      "example": {
                        "frequency": "MONTHLY",
                        "duration": {
                          "type": "NUMBEROFTIMES",
                          "numberOfTimes": 12
                        },
                        "fromAccountId": "ACCOUNT-123",
                        "toPayeeId": "PAYEE-ABC",
                        "amount": 10.99,
                        "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                        "dueDate": "2021-08-17",
                        "recurringPaymentId": "RECURRING-PAYMENT-485",
                        "cancelledTimestamp": "2021-03-14T13:29:19+0000",
                        "status": "CANCELLED"
                      }
                    }
                  ]
                },
                "examples": {
                  "Successful Cancel": {
                    "value": {
                      "frequency": "MONTHLY",
                      "duration": {
                        "type": "NUMBEROFTIMES",
                        "numberOfTimes": 12
                      },
                      "fromAccountId": "ACCOUNT-123",
                      "toPayeeId": "PAYEE-ABC",
                      "amount": 10.99,
                      "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                      "dueDate": "2021-08-17",
                      "recurringPaymentId": "RECURRING-PAYMENT-485",
                      "cancelledTimestamp": "2021-03-14T13:29:19+0000",
                      "status": "CANCELLED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Recurring payment cannot be modified or cancelled at this time. Likely due to the state that it is in",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "808",
                        "message": "Recurring payment cannot be modified or cancelled",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Recurring payment cannot be modified or cancelled": {
                    "value": {
                      "code": "808",
                      "message": "Recurring payment cannot be modified or cancelled",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A recurring payment with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "806",
                        "message": "Recurring payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Recurring payment not found": {
                    "value": {
                      "code": "806",
                      "message": "Recurring payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/recurring-payments/{recurringPaymentId}/payments": {
      "get": {
        "tags": [
          "Recurring Payments"
        ],
        "summary": "getPaymentsForRecurringPayment",
        "description": "Search for payments associated with the recurring payment",
        "operationId": "getPaymentsForRecurringPayment",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "recurringPaymentId",
            "in": "path",
            "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Return items that have been created or updated since the nextUpdateId",
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Paymentsentity"
                    },
                    {
                      "description": "A list of payments",
                      "example": {
                        "page": {
                          "nextOffset": "next-offset-123-xyz",
                          "prevOffset": "prev-offset-456-abc",
                          "totalElements": 100
                        },
                        "updates": {
                          "nextUpdateId": "next-update-id-456-krl"
                        },
                        "links": {
                          "next": {
                            "href": "/recurring-payment/RECURRING-PAYMENT-485/payments?offset=next-offset-123-xyz"
                          },
                          "prev": {
                            "href": "/recurring-payment/RECURRING-PAYMENT-485/payments?offset=prev-offset-456-abc"
                          },
                          "updates": {
                            "href": "/recurring-payment/RECURRING-PAYMENT-485/payments?updatedSince=next-update-id-456-krl"
                          }
                        },
                        "payments": [
                          {
                            "fromAccountId": "ACCOUNT-123",
                            "toPayeeId": "PAYEE-ABC",
                            "amount": 10.99,
                            "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                            "dueDate": "2021-08-17",
                            "paymentId": "PAYMENT-213",
                            "recurringPaymentId": "RECURRING-PAYMENT-485",
                            "processedTimestamp": "2021-03-15T13:29:19+0000",
                            "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                            "status": "PROCESSED",
                            "links": [
                              {
                                "href": "/recurring-payment/RECURRING-PAYMENT-458",
                                "rel": "recurringPayment"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Payments Associated with Recurring Payment": {
                    "value": {
                      "page": {
                        "nextOffset": "next-offset-123-xyz",
                        "prevOffset": "prev-offset-456-abc",
                        "totalElements": 100
                      },
                      "updates": {
                        "nextUpdateId": "next-update-id-456-krl"
                      },
                      "links": {
                        "next": {
                          "href": "/recurring-payment/RECURRING-PAYMENT-485/payments?offset=next-offset-123-xyz"
                        },
                        "prev": {
                          "href": "/recurring-payment/RECURRING-PAYMENT-485/payments?offset=prev-offset-456-abc"
                        },
                        "updates": {
                          "href": "/recurring-payment/RECURRING-PAYMENT-485/payments?updatedSince=next-update-id-456-krl"
                        }
                      },
                      "payments": [
                        {
                          "fromAccountId": "ACCOUNT-123",
                          "toPayeeId": "PAYEE-ABC",
                          "amount": 10.99,
                          "merchantAccountId": "MERCHANT-ACCOUNT-ID-0001",
                          "dueDate": "2021-08-17",
                          "paymentId": "PAYMENT-213",
                          "recurringPaymentId": "RECURRING-PAYMENT-485",
                          "processedTimestamp": "2021-03-15T13:29:19+0000",
                          "startedProcessingTimestamp": "2021-03-14T13:29:19+0000",
                          "status": "PROCESSED",
                          "links": [
                            {
                              "href": "/recurring-payment/RECURRING-PAYMENT-458",
                              "rel": "recurringPayment"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A recurring payment with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "806",
                        "message": "Recurring payment not found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Recurring payment not found": {
                    "value": {
                      "code": "806",
                      "message": "Recurring payment not found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-money-movement-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payroll/reports": {
      "get": {
        "tags": [
          "Payroll Information"
        ],
        "summary": "getPayrollReports",
        "description": "Search for the employee's latest payroll report",
        "operationId": "getPayrollReports",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "reportType",
            "in": "query",
            "description": "Whether to retrieve Verification of Employment (\"VOE\") or Verification of Income and Employment (\"VOIE\") reports",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PayrollReportType"
                },
                {
                  "description": "Whether to retrieve Verification of Employment (\"VOE\") or Verification of Income and Employment (\"VOIE\") reports"
                }
              ]
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "resultType",
            "in": "query",
            "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResultType"
                },
                {
                  "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payroll reports available",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayrollReportListentity"
                    },
                    {
                      "description": "Response object for /payroll/report API with list of reports available"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input sent by client does not satisfy API specification",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Invalid Input",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Invalid Input",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-payroll-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/payroll/reports/{reportId}": {
      "get": {
        "tags": [
          "Payroll Information"
        ],
        "summary": "getPayrollReport",
        "description": "Retrieve the employee's specified payroll report",
        "operationId": "getPayrollReport",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "Specific reportId to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specific payroll report",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayrollReportentity"
                    },
                    {
                      "description": "An employee's Payroll Report"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Required input data not sent",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Report ID is required",
                        "debugMessage": "Custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Report ID is required",
                      "debugMessage": "Custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payroll Report with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "800",
                        "message": "Payroll Report not found",
                        "debugMessage": "Custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Resource not found": {
                    "value": {
                      "code": "800",
                      "message": "Payroll Report not found",
                      "debugMessage": "Custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-payroll-api-v6.2.0",
            "variables": {}
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Recipients"
        ],
        "summary": "createRecipient",
        "description": "Request to Register Recipient by Creating a Recipient Record",
        "operationId": "createRecipient",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RecipientRequest"
                  },
                  {
                    "example": {
                      "client_name": "My Example Client",
                      "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                      "redirect_uris": [
                        "https://partner.example/callback"
                      ],
                      "logo_uri": "https://client.example.org/logo.png",
                      "client_uri": "https://example.net/",
                      "contacts": [
                        "support@example.net"
                      ],
                      "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                      "duration_type": [
                        "TIME_BOUND"
                      ],
                      "duration_period": 365,
                      "lookback_period": 365,
                      "registry_references": [
                        {
                          "registered_entity_name": "Official recipient name",
                          "registered_entity_id": "4HCHXIURY78NNH6JH",
                          "registry": "GLEIF"
                        }
                      ],
                      "intermediaries": [
                        {
                          "name": "Data Access Platform Name",
                          "description": "Data Access Platform specializing in servicing permissioned data sharing for Data Recipients",
                          "uri": "https://partner.example/",
                          "logo_uri": "https://partner.example/logo.png",
                          "contacts": [
                            "support@partner.com"
                          ],
                          "registry_references": [
                            {
                              "registered_entity_name": "Data Access Platform listed company Name",
                              "registered_entity_id": "JJH7776512TGMEJSG",
                              "registry": "FDX"
                            }
                          ]
                        },
                        {
                          "name": "Digital Service Provider Name",
                          "description": "Digital Service Provider to the Recipient",
                          "uri": "https://sub-partner-one.example/",
                          "logo_uri": "https://sub-partner-one.example/logo.png",
                          "contacts": [
                            "support@sub-partner-one.com"
                          ],
                          "registry_references": [
                            {
                              "registered_entity_name": "Service Provider listed company Name",
                              "registered_entity_id": "9LUQNDG778LI9D1",
                              "registry": "GLEIF"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "examples": {
                "Create Recipient Record at Provider": {
                  "value": {
                    "client_name": "My Example Client",
                    "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                    "redirect_uris": [
                      "https://partner.example/callback"
                    ],
                    "logo_uri": "https://client.example.org/logo.png",
                    "client_uri": "https://example.net/",
                    "contacts": [
                      "support@example.net"
                    ],
                    "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                    "duration_type": [
                      "TIME_BOUND"
                    ],
                    "duration_period": 365,
                    "lookback_period": 365,
                    "registry_references": [
                      {
                        "registered_entity_name": "Official recipient name",
                        "registered_entity_id": "4HCHXIURY78NNH6JH",
                        "registry": "GLEIF"
                      }
                    ],
                    "intermediaries": [
                      {
                        "name": "Data Access Platform Name",
                        "description": "Data Access Platform specializing in servicing permissioned data sharing for Data Recipients",
                        "uri": "https://partner.example/",
                        "logo_uri": "https://partner.example/logo.png",
                        "contacts": [
                          "support@partner.com"
                        ],
                        "registry_references": [
                          {
                            "registered_entity_name": "Data Access Platform listed company Name",
                            "registered_entity_id": "JJH7776512TGMEJSG",
                            "registry": "FDX"
                          }
                        ]
                      },
                      {
                        "name": "Digital Service Provider Name",
                        "description": "Digital Service Provider to the Recipient",
                        "uri": "https://sub-partner-one.example/",
                        "logo_uri": "https://sub-partner-one.example/logo.png",
                        "contacts": [
                          "support@sub-partner-one.com"
                        ],
                        "registry_references": [
                          {
                            "registered_entity_name": "Service Provider listed company Name",
                            "registered_entity_id": "9LUQNDG778LI9D1",
                            "registry": "GLEIF"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecipientProvider"
                    },
                    {
                      "description": "Record of Recipient at the Provider. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)",
                      "example": {
                        "client_id": "V8tvEkZWhDAdxSaKGUJZ",
                        "client_secret": "SpsuwZIxnp8bBEhp5sk1EKiIKTZ4X4DKU",
                        "grant_types": [
                          "authorization_code",
                          "refresh_token"
                        ],
                        "token_endpoint_auth_method": "private_key_jwt",
                        "registration_client_uri": "https://server.example.com/register/V8tvEkZWhDAdxSaKGUJZ",
                        "status": "Approved",
                        "registration_access_token": "V8tvEkZWhDAdxSaKGUJZ",
                        "client_name": "My Example Client",
                        "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                        "redirect_uris": [
                          "https://partner.example/callback"
                        ],
                        "logo_uri": "https://client.example.org/logo.png",
                        "client_uri": "https://example.net/",
                        "contacts": [
                          "support@example.net"
                        ],
                        "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                        "duration_type": [
                          "TIME_BOUND"
                        ],
                        "duration_period": 365,
                        "lookback_period": 365,
                        "registry_references": [
                          {
                            "registered_entity_name": "Official recipient name",
                            "registered_entity_id": "4HCHXIURY78NNH6JH",
                            "registry": "GLEIF"
                          }
                        ],
                        "intermediaries": [
                          {
                            "name": "Data Access Platform Name",
                            "description": "Data Access Platform specializing in servicing permissioned data sharing for Data Recipients",
                            "uri": "https://partner.example/",
                            "logo_uri": "https://partner.example/logo.png",
                            "contacts": [
                              "support@partner.com"
                            ],
                            "registry_references": [
                              {
                                "registered_entity_name": "Data Access Platform listed company Name",
                                "registered_entity_id": "JJH7776512TGMEJSG",
                                "registry": "FDX"
                              }
                            ]
                          },
                          {
                            "name": "Digital Service Provider Name",
                            "description": "Digital Service Provider to the Recipient",
                            "uri": "https://sub-partner-one.example/",
                            "logo_uri": "https://sub-partner-one.example/logo.png",
                            "contacts": [
                              "support@sub-partner-one.com"
                            ],
                            "registry_references": [
                              {
                                "registered_entity_name": "Service Provider listed company Name",
                                "registered_entity_id": "9LUQNDG778LI9D1",
                                "registry": "GLEIF"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Provider Response With Full Record Of Recipient": {
                    "value": {
                      "client_id": "V8tvEkZWhDAdxSaKGUJZ",
                      "client_secret": "SpsuwZIxnp8bBEhp5sk1EKiIKTZ4X4DKU",
                      "grant_types": [
                        "authorization_code",
                        "refresh_token"
                      ],
                      "token_endpoint_auth_method": "private_key_jwt",
                      "registration_client_uri": "https://server.example.com/register/V8tvEkZWhDAdxSaKGUJZ",
                      "status": "Approved",
                      "registration_access_token": "V8tvEkZWhDAdxSaKGUJZ",
                      "client_name": "My Example Client",
                      "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                      "redirect_uris": [
                        "https://partner.example/callback"
                      ],
                      "logo_uri": "https://client.example.org/logo.png",
                      "client_uri": "https://example.net/",
                      "contacts": [
                        "support@example.net"
                      ],
                      "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                      "duration_type": [
                        "TIME_BOUND"
                      ],
                      "duration_period": 365,
                      "lookback_period": 365,
                      "registry_references": [
                        {
                          "registered_entity_name": "Official recipient name",
                          "registered_entity_id": "4HCHXIURY78NNH6JH",
                          "registry": "GLEIF"
                        }
                      ],
                      "intermediaries": [
                        {
                          "name": "Data Access Platform Name",
                          "description": "Data Access Platform specializing in servicing permissioned data sharing for Data Recipients",
                          "uri": "https://partner.example/",
                          "logo_uri": "https://partner.example/logo.png",
                          "contacts": [
                            "support@partner.com"
                          ],
                          "registry_references": [
                            {
                              "registered_entity_name": "Data Access Platform listed company Name",
                              "registered_entity_id": "JJH7776512TGMEJSG",
                              "registry": "FDX"
                            }
                          ]
                        },
                        {
                          "name": "Digital Service Provider Name",
                          "description": "Digital Service Provider to the Recipient",
                          "uri": "https://sub-partner-one.example/",
                          "logo_uri": "https://sub-partner-one.example/logo.png",
                          "contacts": [
                            "support@sub-partner-one.com"
                          ],
                          "registry_references": [
                            {
                              "registered_entity_name": "Service Provider listed company Name",
                              "registered_entity_id": "9LUQNDG778LI9D1",
                              "registry": "GLEIF"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-recipient-registration-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/register/{clientId}": {
      "get": {
        "tags": [
          "Recipients"
        ],
        "summary": "getRecipient",
        "description": "Get a specific recipient data identified with clientId",
        "operationId": "getRecipient",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client Identifier. Uniquely identifies a Client",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecipientProvider"
                    },
                    {
                      "description": "Record of Recipient at the Provider. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-recipient-registration-api-v6.1.0",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Recipients"
        ],
        "summary": "updateRecipient",
        "description": "Update data for a specific recipient identified with clientId",
        "operationId": "updateRecipient",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client Identifier. Uniquely identifies a Client",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RecipientRequest"
                  },
                  {
                    "example": {
                      "client_name": "My Example Client",
                      "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                      "redirect_uris": [
                        "https://partner.example/callback"
                      ],
                      "logo_uri": "https://client.example.org/logo.png",
                      "client_uri": "https://example.net/",
                      "contacts": [
                        "support@example.net"
                      ],
                      "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                      "duration_type": [
                        "TIME_BOUND"
                      ],
                      "duration_period": 365,
                      "lookback_period": 365,
                      "registry_references": [
                        {
                          "registered_entity_name": "Official recipient name",
                          "registered_entity_id": "4HCHXIURY78NNH6JH",
                          "registry": "GLEIF"
                        }
                      ],
                      "intermediaries": [
                        {
                          "name": "Data Access Platform Name",
                          "description": "Data Access Platform specializing in servicing permissioned data sharing for Data Recipients",
                          "uri": "https://partner.example/",
                          "logo_uri": "https://partner.example/logo.png",
                          "contacts": [
                            "support@partner.com"
                          ],
                          "registry_references": [
                            {
                              "registered_entity_name": "Data Access Platform listed company Name",
                              "registered_entity_id": "JJH7776512TGMEJSG",
                              "registry": "FDX"
                            }
                          ]
                        },
                        {
                          "name": "Digital Service Provider Name",
                          "description": "Digital Service Provider to the Recipient",
                          "uri": "https://sub-partner-one.example/",
                          "logo_uri": "https://sub-partner-one.example/logo.png",
                          "contacts": [
                            "support@sub-partner-one.com"
                          ],
                          "registry_references": [
                            {
                              "registered_entity_name": "Service Provider listed company Name",
                              "registered_entity_id": "9LUQNDG778LI9D1",
                              "registry": "GLEIF"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "examples": {
                "Update to same Recipient Record": {
                  "value": {
                    "client_name": "My Example Client",
                    "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                    "redirect_uris": [
                      "https://partner.example/callback"
                    ],
                    "logo_uri": "https://client.example.org/logo.png",
                    "client_uri": "https://example.net/",
                    "contacts": [
                      "support@example.net"
                    ],
                    "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                    "duration_type": [
                      "TIME_BOUND"
                    ],
                    "duration_period": 365,
                    "lookback_period": 365,
                    "registry_references": [
                      {
                        "registered_entity_name": "Official recipient name",
                        "registered_entity_id": "4HCHXIURY78NNH6JH",
                        "registry": "GLEIF"
                      }
                    ],
                    "intermediaries": [
                      {
                        "name": "Data Access Platform Name",
                        "description": "Data Access Platform specializing in servicing permissioned data sharing for Data Recipients",
                        "uri": "https://partner.example/",
                        "logo_uri": "https://partner.example/logo.png",
                        "contacts": [
                          "support@partner.com"
                        ],
                        "registry_references": [
                          {
                            "registered_entity_name": "Data Access Platform listed company Name",
                            "registered_entity_id": "JJH7776512TGMEJSG",
                            "registry": "FDX"
                          }
                        ]
                      },
                      {
                        "name": "Digital Service Provider Name",
                        "description": "Digital Service Provider to the Recipient",
                        "uri": "https://sub-partner-one.example/",
                        "logo_uri": "https://sub-partner-one.example/logo.png",
                        "contacts": [
                          "support@sub-partner-one.com"
                        ],
                        "registry_references": [
                          {
                            "registered_entity_name": "Service Provider listed company Name",
                            "registered_entity_id": "9LUQNDG778LI9D1",
                            "registry": "GLEIF"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RecipientProvider"
                    },
                    {
                      "description": "Record of Recipient at the Provider. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-recipient-registration-api-v6.1.0",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipients"
        ],
        "summary": "deleteRecipient",
        "description": "Delete data for a specific recipient identified with clientId",
        "operationId": "deleteRecipient",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Client Identifier. Uniquely identifies a Client",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-recipient-registration-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/recipients": {
      "get": {
        "tags": [
          "Recipients"
        ],
        "summary": "getRegistryRecipients",
        "description": "Get recipients",
        "operationId": "getRegistryRecipients",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Recipientrecordsatecosystemregistry"
                    },
                    {
                      "description": "Recipient records at Ecosystem Registry. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/).",
                      "example": {
                        "page": {
                          "nextOffset": "nextoffset",
                          "prevOffset": "prevoffset",
                          "total": 5000
                        },
                        "links": {
                          "next": {
                            "href": "/recipients?offset=nextoffset"
                          },
                          "prev": {
                            "href": "/recipients?offset=prevoffset"
                          }
                        },
                        "recipients": [
                          {
                            "recipient_id": "12345",
                            "client_name": "My Example Client",
                            "redirect_uris": [
                              "https://partner.example/callback"
                            ],
                            "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                            "logo_uri": "https://client.example1.org/logo.png",
                            "client_uri": "https://example1.net/",
                            "contacts": [
                              "support@example1.net"
                            ],
                            "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                            "duration_type": [
                              "TIME_BOUND"
                            ],
                            "duration_period": 365,
                            "lookback_period": 365,
                            "registry_references": [
                              {
                                "registered_entity_name": "Official recipient name",
                                "registered_entity_id": "4HCHXIURY78NNH6JH",
                                "registry": "GLEIF"
                              }
                            ]
                          },
                          {
                            "recipient_id": "23456",
                            "client_name": "Another Example Client",
                            "redirect_uris": [
                              "https://partner.example/callback"
                            ],
                            "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                            "logo_uri": "https://client.example2.org/logo.png",
                            "client_uri": "https://example2.net/",
                            "contacts": [
                              "support@example2.net"
                            ],
                            "scope": "ACCOUNT_DETAILED INVESTMENTS",
                            "duration_type": [
                              "TIME_BOUND"
                            ],
                            "duration_period": 365,
                            "lookback_period": 365,
                            "registry_references": [
                              {
                                "registered_entity_name": "Official recipient name",
                                "registered_entity_id": "8XKSJGEU2465KSOGI",
                                "registry": "GLEIF"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Example retrieval of a list of recipient records from the ecosystem registry": {
                    "value": {
                      "page": {
                        "nextOffset": "nextoffset",
                        "prevOffset": "prevoffset",
                        "total": 5000
                      },
                      "links": {
                        "next": {
                          "href": "/recipients?offset=nextoffset"
                        },
                        "prev": {
                          "href": "/recipients?offset=prevoffset"
                        }
                      },
                      "recipients": [
                        {
                          "recipient_id": "12345",
                          "client_name": "My Example Client",
                          "redirect_uris": [
                            "https://partner.example/callback"
                          ],
                          "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                          "logo_uri": "https://client.example1.org/logo.png",
                          "client_uri": "https://example1.net/",
                          "contacts": [
                            "support@example1.net"
                          ],
                          "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                          "duration_type": [
                            "TIME_BOUND"
                          ],
                          "duration_period": 365,
                          "lookback_period": 365,
                          "registry_references": [
                            {
                              "registered_entity_name": "Official recipient name",
                              "registered_entity_id": "4HCHXIURY78NNH6JH",
                              "registry": "GLEIF"
                            }
                          ]
                        },
                        {
                          "recipient_id": "23456",
                          "client_name": "Another Example Client",
                          "redirect_uris": [
                            "https://partner.example/callback"
                          ],
                          "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                          "logo_uri": "https://client.example2.org/logo.png",
                          "client_uri": "https://example2.net/",
                          "contacts": [
                            "support@example2.net"
                          ],
                          "scope": "ACCOUNT_DETAILED INVESTMENTS",
                          "duration_type": [
                            "TIME_BOUND"
                          ],
                          "duration_period": 365,
                          "lookback_period": 365,
                          "registry_references": [
                            {
                              "registered_entity_name": "Official recipient name",
                              "registered_entity_id": "8XKSJGEU2465KSOGI",
                              "registry": "GLEIF"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-registry-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/recipients/{recipientId}": {
      "get": {
        "tags": [
          "Recipients"
        ],
        "summary": "getRegistryRecipient",
        "description": "Get a specific recipient",
        "operationId": "getRegistryRecipient",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "Recipient Identifier. Uniquely identifies a Recipient",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Recipientrecordatecosystemregistry"
                    },
                    {
                      "description": "Record of Recipient at the Ecosystem Registry. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/).",
                      "example": {
                        "recipient_id": "12345",
                        "client_name": "My Example Client",
                        "redirect_uris": [
                          "https://partner.example/callback"
                        ],
                        "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                        "logo_uri": "https://client.example.org/logo.png",
                        "client_uri": "https://example.net/",
                        "contacts": [
                          "support@example.net"
                        ],
                        "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                        "duration_type": [
                          "TIME_BOUND"
                        ],
                        "duration_period": 365,
                        "lookback_period": 365,
                        "registry_references": [
                          {
                            "registered_entity_name": "Official recipient name",
                            "registered_entity_id": "4HCHXIURY78NNH6JH",
                            "registry": "GLEIF"
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Example retrieval of a recipient record from the ecosystem registry": {
                    "value": {
                      "recipient_id": "12345",
                      "client_name": "My Example Client",
                      "redirect_uris": [
                        "https://partner.example/callback"
                      ],
                      "description": "Recipient Application servicing financial use case requiring permissioned data sharing",
                      "logo_uri": "https://client.example.org/logo.png",
                      "client_uri": "https://example.net/",
                      "contacts": [
                        "support@example.net"
                      ],
                      "scope": "ACCOUNT_DETAILED TRANSACTIONS INVESTMENTS",
                      "duration_type": [
                        "TIME_BOUND"
                      ],
                      "duration_period": 365,
                      "lookback_period": 365,
                      "registry_references": [
                        {
                          "registered_entity_name": "Official recipient name",
                          "registered_entity_id": "4HCHXIURY78NNH6JH",
                          "registry": "GLEIF"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-registry-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/tax-forms": {
      "post": {
        "tags": [
          "Submit Tax Forms"
        ],
        "summary": "createTaxForm",
        "description": "Submit the data for a specific tax document",
        "operationId": "createTaxForm",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
            },
            "examples": {
              "OAuthFapi2Advanced OAuth 2.0 securityScheme example": {
                "summary": "Follows published FDX API standard OAuth 2.0 security requirements",
                "description": "See [IETF RFC 6750](https://datatracker.ietf.org/doc/html/rfc6750) regarding OAuth 2.0 bearer tokens to access protected resources",
                "value": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
              },
              "OAuthFapi1Baseline securityScheme example": {
                "summary": "Follows published FDX API Data Receiving Entity credentials-based security",
                "description": "See [IETF RFC 7617](https://datatracker.ietf.org/doc/html/rfc7617) regarding base64-encoded Basic tokens to access protected resources",
                "value": "Authorization: Basic (Base64 of client_id:client_secret)"
              },
              "TaxBasicAuth securityScheme example": {
                "summary": "Follows published FDX Tax Document Alternate Authentication v2023",
                "description": "Also following IETF RFC 7617 Basic Authorization",
                "value": "Authorization: Basic (Base64 of documentId:documentPasscode)"
              }
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxStatement1"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created document for the tax data submitted",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatement2"
                    },
                    {
                      "description": "The full data contents of the tax document and all its included forms as ingested"
                    }
                  ]
                }
              }
            }
          },
          "206": {
            "description": "Partial Content success creating customer tax document, some errors are being returned",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatement3"
                    },
                    {
                      "description": "The data contents of the tax document as ingested, with Errors on some included forms"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Tax Form type is not supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1201",
                        "message": "Tax Form type is not supported",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Tax Form type is not supported": {
                    "value": {
                      "code": "1201",
                      "message": "Tax Form type is not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Tax Year not supported": {
                    "value": {
                      "code": "1202",
                      "message": "Tax Year not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Account ID is required": {
                    "value": {
                      "code": "1204",
                      "message": "Account ID is required",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-tax-api-v6.1.0",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Tax Forms"
        ],
        "summary": "searchForTaxForms",
        "description": "Get the full lists of tax document data and tax form images available for a specific year for the current authorized customer",
        "operationId": "searchForTaxForms",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
            },
            "examples": {
              "OAuthFapi2Advanced OAuth 2.0 securityScheme example": {
                "summary": "Follows published FDX API standard OAuth 2.0 security requirements",
                "description": "See [IETF RFC 6750](https://datatracker.ietf.org/doc/html/rfc6750) regarding OAuth 2.0 bearer tokens to access protected resources",
                "value": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
              },
              "OAuthFapi1Baseline securityScheme example": {
                "summary": "Follows published FDX API Data Receiving Entity credentials-based security",
                "description": "See [IETF RFC 7617](https://datatracker.ietf.org/doc/html/rfc7617) regarding base64-encoded Basic tokens to access protected resources",
                "value": "Authorization: Basic (Base64 of client_id:client_secret)"
              },
              "TaxBasicAuth securityScheme example": {
                "summary": "Follows published FDX Tax Document Alternate Authentication v2023",
                "description": "Also following IETF RFC 7617 Basic Authorization",
                "value": "Authorization: Basic (Base64 of documentId:documentPasscode)"
              }
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Use the [Accept HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) to indicate one or more content types to request for the search result response. Use `application/json` to request data, `application/pdf`, `application/zip` or `image/*` MIME-types to request images. In comma-separated array format using values typically from './fdxapi.components.yaml#/components/schemas/ContentTypes' enumeration. Use in combination with TaxDataTypeQuery parameter to request `application/json` responses in 'JSON' or 'BASE64_PDF' format for tax form data",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Accept: application/json"
            },
            "examples": {
              "Only JSON data": {
                "value": "Accept: application/json"
              },
              "Multiple types accepted": {
                "value": "Accept: application/json, application/zip"
              }
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "Account Identifier for use in searching or authorization. Optional",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taxYear",
            "in": "query",
            "description": "Tax year in which to search for tax forms. Optional",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 2050.0,
              "minimum": 2018.0,
              "type": "integer",
              "format": "int32",
              "example": 2023
            }
          },
          {
            "name": "taxForms",
            "in": "query",
            "description": "One or more tax form type enums for the specific documents being requested. Comma separated",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeFormType"
              }
            }
          },
          {
            "name": "taxDataType",
            "in": "query",
            "description": "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TypeDataType"
                },
                {
                  "description": "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response"
                }
              ]
            }
          },
          {
            "name": "resultType",
            "in": "query",
            "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResultType"
                },
                {
                  "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all the tax document data and tax form images available for the customer matching search criteria",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/zip": {
                "schema": {
                  "description": "All the document image(s) downloaded as a zip file, containing one or more forms"
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatementList"
                    },
                    {
                      "description": "Tax statement list containing one or more tax statements",
                      "example": {
                        "statements": [
                          {
                            "taxYear": 2020,
                            "taxStatementId": "9876987698769876",
                            "attributes": [
                              {
                                "name": "federalTaxWithheld",
                                "value": "4014.00"
                              }
                            ],
                            "taxDataType": "JSON",
                            "forms": [
                              {
                                "tax1099Div": {
                                  "taxYear": 2020,
                                  "taxFormId": "9876987698769876",
                                  "taxFormDate": "2021-03-30",
                                  "additionalInformation": "FDX v6.0",
                                  "taxFormType": "Tax1099Div"
                                }
                              }
                            ]
                          },
                          {
                            "taxYear": 2020,
                            "taxStatementId": "6543654365436543",
                            "attributes": [
                              {
                                "name": "federalTaxWithheld",
                                "value": "4011.00"
                              }
                            ],
                            "taxDataType": "JSON",
                            "forms": [
                              {
                                "tax1099Int": {
                                  "taxYear": 2020,
                                  "taxFormId": "6543654365436543",
                                  "taxFormDate": "2021-03-30",
                                  "additionalInformation": "FDX v6.0",
                                  "taxFormType": "Tax1099Int"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "ResultType lightweight Search Response with Forms 1099-DIV and 1099-INT": {
                    "value": {
                      "statements": [
                        {
                          "taxYear": 2020,
                          "taxStatementId": "9876987698769876",
                          "attributes": [
                            {
                              "name": "federalTaxWithheld",
                              "value": "4014.00"
                            }
                          ],
                          "taxDataType": "JSON",
                          "forms": [
                            {
                              "tax1099Div": {
                                "taxYear": 2020,
                                "taxFormId": "9876987698769876",
                                "taxFormDate": "2021-03-30",
                                "additionalInformation": "FDX v6.0",
                                "taxFormType": "Tax1099Div"
                              }
                            }
                          ]
                        },
                        {
                          "taxYear": 2020,
                          "taxStatementId": "6543654365436543",
                          "attributes": [
                            {
                              "name": "federalTaxWithheld",
                              "value": "4011.00"
                            }
                          ],
                          "taxDataType": "JSON",
                          "forms": [
                            {
                              "tax1099Int": {
                                "taxYear": 2020,
                                "taxFormId": "6543654365436543",
                                "taxFormDate": "2021-03-30",
                                "additionalInformation": "FDX v6.0",
                                "taxFormType": "Tax1099Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "ResultType details Search Response with Form 1098": {
                    "value": {
                      "statements": [
                        {
                          "taxYear": 2023,
                          "taxStatementId": "ID-09990111",
                          "issuer": {
                            "tin": "12-3456789",
                            "partyType": "BUSINESS",
                            "businessName": {
                              "name1": "Financial Intelligence Associates"
                            },
                            "address": {
                              "line1": "12022 Sundown Valley Dr",
                              "line2": "Suite 230",
                              "city": "Reston",
                              "region": "VA",
                              "postalCode": "20191",
                              "country": "US"
                            },
                            "phone": {
                              "number": "8885551212"
                            }
                          },
                          "recipient": {
                            "tin": "xxx-xx-1234",
                            "partyType": "INDIVIDUAL",
                            "individualName": {
                              "first": "Kris",
                              "middle": "Q",
                              "last": "Public"
                            },
                            "address": {
                              "line1": "1 Main St",
                              "city": "Melrose",
                              "region": "NY",
                              "postalCode": "12121",
                              "country": "US"
                            }
                          },
                          "forms": [
                            {
                              "tax1098": {
                                "taxYear": 2023,
                                "taxFormId": "ID-09990111-1098",
                                "taxFormDate": "2024-02-15",
                                "taxFormType": "Tax1098",
                                "mortgagedProperties": 9,
                                "otherInformation": "10. Property tax: $10,017.00",
                                "accountNumber": "111-23456",
                                "mortgageInterest": 1008,
                                "outstandingPrincipal": 200900,
                                "originationDate": "2022-03-10",
                                "overpaidRefund": 4011,
                                "mortgageInsurance": 5012,
                                "pointsPaid": 6013,
                                "isPropertyAddressSameAsBorrowerAddress": true,
                                "acquisitionDate": "2022-11-15",
                                "propertyTax": 10017
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "Partial Content success searching for customer Tax Data forms, some errors are being returned",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatementList"
                    },
                    {
                      "description": "Tax statement list containing one or more tax statements",
                      "example": {
                        "statements": [
                          {
                            "taxYear": 2020,
                            "taxStatementId": "9876987698769876",
                            "attributes": [
                              {
                                "name": "federalTaxWithheld",
                                "value": "4014.00"
                              }
                            ],
                            "taxDataType": "JSON",
                            "forms": [
                              {
                                "tax1099Div": {
                                  "taxYear": 2020,
                                  "taxFormId": "9876987698769876",
                                  "taxFormDate": "2021-03-30",
                                  "additionalInformation": "FDX v6.0",
                                  "taxFormType": "Tax1099Div"
                                }
                              }
                            ]
                          },
                          {
                            "taxYear": 2020,
                            "taxDataType": "JSON",
                            "forms": [
                              {
                                "tax1099Int": {
                                  "taxYear": 2020,
                                  "taxFormType": "Tax1099Int",
                                  "error": {
                                    "code": "1205",
                                    "message": "Tax Forms not yet been made available",
                                    "debugMessage": "1099-INT forms should be available after 02-01-2021"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Lightweight Response With Error": {
                    "value": {
                      "statements": [
                        {
                          "taxYear": 2020,
                          "taxStatementId": "9876987698769876",
                          "attributes": [
                            {
                              "name": "federalTaxWithheld",
                              "value": "4014.00"
                            }
                          ],
                          "taxDataType": "JSON",
                          "forms": [
                            {
                              "tax1099Div": {
                                "taxYear": 2020,
                                "taxFormId": "9876987698769876",
                                "taxFormDate": "2021-03-30",
                                "additionalInformation": "FDX v6.0",
                                "taxFormType": "Tax1099Div"
                              }
                            }
                          ]
                        },
                        {
                          "taxYear": 2020,
                          "taxDataType": "JSON",
                          "forms": [
                            {
                              "tax1099Int": {
                                "taxYear": 2020,
                                "taxFormType": "Tax1099Int",
                                "error": {
                                  "code": "1205",
                                  "message": "Tax Forms not yet been made available",
                                  "debugMessage": "1099-INT forms should be available after 02-01-2021"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid or parameter values are not supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1202",
                        "message": "Tax Year not Supported",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Tax Year not Supported": {
                    "value": {
                      "code": "1202",
                      "message": "Tax Year not Supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Tax Form Type not supported": {
                    "value": {
                      "code": "1201",
                      "message": "Tax Form Type not supported",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Account ID is required": {
                    "value": {
                      "code": "1204",
                      "message": "Account ID is required",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tax Form not Found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1200",
                        "message": "Tax Form not Found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Tax Form not Found": {
                    "value": {
                      "code": "1200",
                      "message": "Tax Form not Found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Content Type not Supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1203",
                        "message": "Content Type not Supported",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Content Type not Supported": {
                    "value": {
                      "code": "1203",
                      "message": "Content Type not Supported",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Tax forms are not currently available for this account or this year",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "705",
                        "message": "Tax Forms not available for Closed account",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Operation not supported by Closed account": {
                    "value": {
                      "code": "705",
                      "message": "Tax Forms not available for Closed account",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Tax Forms not yet been made available": {
                    "value": {
                      "code": "1205",
                      "message": "Tax Forms not yet been made available",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "TaxBasicAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-tax-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/tax-forms/{taxFormId}": {
      "put": {
        "tags": [
          "Submit Tax Forms"
        ],
        "summary": "updateTaxForm",
        "description": "Update tax document. Allows you to upload and replace binaries or json document",
        "operationId": "updateTaxForm",
        "parameters": [
          {
            "name": "taxFormId",
            "in": "path",
            "description": "The unique ID for this tax form or tax statement",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
            },
            "examples": {
              "OAuthFapi2Advanced OAuth 2.0 securityScheme example": {
                "summary": "Follows published FDX API standard OAuth 2.0 security requirements",
                "description": "See [IETF RFC 6750](https://datatracker.ietf.org/doc/html/rfc6750) regarding OAuth 2.0 bearer tokens to access protected resources",
                "value": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
              },
              "OAuthFapi1Baseline securityScheme example": {
                "summary": "Follows published FDX API Data Receiving Entity credentials-based security",
                "description": "See [IETF RFC 7617](https://datatracker.ietf.org/doc/html/rfc7617) regarding base64-encoded Basic tokens to access protected resources",
                "value": "Authorization: Basic (Base64 of client_id:client_secret)"
              },
              "TaxBasicAuth securityScheme example": {
                "summary": "Follows published FDX Tax Document Alternate Authentication v2023",
                "description": "Also following IETF RFC 7617 Basic Authorization",
                "value": "Authorization: Basic (Base64 of documentId:documentPasscode)"
              }
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxStatement6"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {}
          },
          "206": {
            "description": "Partial Content success updating customer tax document, some errors are being returned",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatement7"
                    },
                    {
                      "description": "The data contents of the tax document as updated, with Errors on some included forms"
                    }
                  ]
                }
              }
            }
          },
          "415": {
            "description": "Server does not support the content type uploaded",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-tax-api-v6.1.0",
            "variables": {}
          }
        ]
      },
      "get": {
        "tags": [
          "Tax Forms"
        ],
        "summary": "getTaxForm",
        "description": "Get the form image or TaxStatement as json for a single tax document for the customer. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. See `AcceptHeader` definition for typical values",
        "operationId": "getTaxForm",
        "parameters": [
          {
            "name": "taxFormId",
            "in": "path",
            "description": "The unique ID for this tax form or tax statement",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
            },
            "examples": {
              "OAuthFapi2Advanced OAuth 2.0 securityScheme example": {
                "summary": "Follows published FDX API standard OAuth 2.0 security requirements",
                "description": "See [IETF RFC 6750](https://datatracker.ietf.org/doc/html/rfc6750) regarding OAuth 2.0 bearer tokens to access protected resources",
                "value": "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkZEWCBUYXggVEYgUnVsZXMiLCJpYXQiOjE1MTYyMzkwMjJ9.SZGaxSt9EXqK1GbYTckZbygBDiqS1KaZybzzqf2VxOw"
              },
              "OAuthFapi1Baseline securityScheme example": {
                "summary": "Follows published FDX API Data Receiving Entity credentials-based security",
                "description": "See [IETF RFC 7617](https://datatracker.ietf.org/doc/html/rfc7617) regarding base64-encoded Basic tokens to access protected resources",
                "value": "Authorization: Basic (Base64 of client_id:client_secret)"
              },
              "TaxBasicAuth securityScheme example": {
                "summary": "Follows published FDX Tax Document Alternate Authentication v2023",
                "description": "Also following IETF RFC 7617 Basic Authorization",
                "value": "Authorization: Basic (Base64 of documentId:documentPasscode)"
              }
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Use the [Accept HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) to indicate one or more content types to request for the search result response. Use `application/json` to request data, `application/pdf`, `application/zip` or `image/*` MIME-types to request images. In comma-separated array format using values typically from './fdxapi.components.yaml#/components/schemas/ContentTypes' enumeration. Use in combination with TaxDataTypeQuery parameter to request `application/json` responses in 'JSON' or 'BASE64_PDF' format for tax form data",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Accept: application/json"
            },
            "examples": {
              "Only JSON data": {
                "value": "Accept: application/json"
              },
              "Multiple types accepted": {
                "value": "Accept: application/json, application/zip"
              }
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "taxDataType",
            "in": "query",
            "description": "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TypeDataType"
                },
                {
                  "description": "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document image or TaxStatement as json for a single tax document for the customer. A single document can include multiple IRS tax forms and/or other reporting statements as delivered by providers",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/pdf": {
                "schema": {
                  "description": "The document image downloaded as pdf"
                }
              },
              "application/zip": {
                "schema": {
                  "description": "The document image downloaded as zip file, containing one or more form images"
                }
              },
              "image/gif": {
                "schema": {
                  "description": "The document image downloaded as gif"
                }
              },
              "image/jpeg": {
                "schema": {
                  "description": "The document image downloaded as jpeg"
                }
              },
              "image/tiff": {
                "schema": {
                  "description": "The document image downloaded as tiff"
                }
              },
              "image/png": {
                "schema": {
                  "description": "The document image downloaded as png"
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatement4"
                    },
                    {
                      "description": "The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer",
                      "example": {
                        "taxYear": 2020,
                        "taxStatementId": "1234123412341234",
                        "attributes": [
                          {
                            "name": "Total tax withheld",
                            "value": "8025.00"
                          }
                        ],
                        "issuer": {
                          "tin": "12-3456789",
                          "partyType": "BUSINESS",
                          "businessName": {
                            "name1": "Financial Data Exchange"
                          },
                          "address": {
                            "line1": "12020 Sunrise Valley Dr",
                            "line2": "Suite 230",
                            "city": "Reston",
                            "region": "VA",
                            "postalCode": "20191",
                            "country": "US"
                          },
                          "phone": {
                            "number": "8885551212"
                          }
                        },
                        "recipient": {
                          "tin": "xxx-xx-1234",
                          "partyType": "INDIVIDUAL",
                          "individualName": {
                            "first": "Kris",
                            "middle": "Q",
                            "last": "Public"
                          },
                          "address": {
                            "line1": "1 Main St",
                            "city": "Melrose",
                            "region": "NY",
                            "postalCode": "12121",
                            "country": "US"
                          }
                        },
                        "taxDataType": "JSON",
                        "forms": [
                          {
                            "tax1099Div": {
                              "taxYear": 2020,
                              "taxFormId": "9876987698769876",
                              "taxFormDate": "2021-03-30",
                              "additionalInformation": "FDX v6.0",
                              "taxFormType": "Tax1099Div",
                              "foreignAccountTaxCompliance": false,
                              "accountNumber": "111-5555555",
                              "ordinaryDividends": 1107.0,
                              "qualifiedDividends": 1208.0,
                              "totalCapitalGain": 2109.0,
                              "unrecaptured1250Gain": 2210.0,
                              "section1202Gain": 2311.0,
                              "collectiblesGain": 2412.0,
                              "nonTaxableDistribution": 3013.0,
                              "federalTaxWithheld": 4014.0,
                              "section199ADividends": 5015.0,
                              "investmentExpenses": 6016.0,
                              "foreignTaxPaid": 7017.0,
                              "foreignCountry": "Mexico",
                              "cashLiquidation": 9019.0,
                              "nonCashLiquidation": 10020.0,
                              "taxExemptInterestDividend": 11021.0,
                              "specifiedPabInterestDividend": 12022.0,
                              "stateAndLocal": [
                                {
                                  "stateCode": "NY",
                                  "state": {
                                    "taxWithheld": 15023.0,
                                    "taxId": "14-000023"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "tax1099Int": {
                              "taxYear": 2020,
                              "taxFormId": "6543654365436543",
                              "taxFormDate": "2021-03-30",
                              "additionalInformation": "FDX v6.0",
                              "taxFormType": "Tax1099Int",
                              "foreignAccountTaxCompliance": false,
                              "accountNumber": "111-5555555",
                              "payerRtn": "007007007",
                              "interestIncome": 1008.0,
                              "earlyWithdrawalPenalty": 2009.0,
                              "usBondInterest": 3010.0,
                              "federalTaxWithheld": 4011.0,
                              "investmentExpenses": 5012.0,
                              "foreignTaxPaid": 6013.0,
                              "foreignCountry": "Canada",
                              "taxExemptInterest": 8015.0,
                              "specifiedPabInterest": 9016.0,
                              "marketDiscount": 10017.0,
                              "bondPremium": 11018.0,
                              "usBondPremium": 12019.0,
                              "taxExemptBondPremium": 13020.0,
                              "cusipNumber": "CUSIP",
                              "stateAndLocal": [
                                {
                                  "stateCode": "NY",
                                  "state": {
                                    "taxWithheld": 17022.0,
                                    "taxId": "15-000022"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "examples": {
                  "Tax1099Div and Tax1099Int": {
                    "value": {
                      "taxYear": 2020,
                      "taxStatementId": "1234123412341234",
                      "attributes": [
                        {
                          "name": "Total tax withheld",
                          "value": "8025.00"
                        }
                      ],
                      "issuer": {
                        "tin": "12-3456789",
                        "partyType": "BUSINESS",
                        "businessName": {
                          "name1": "Financial Data Exchange"
                        },
                        "address": {
                          "line1": "12020 Sunrise Valley Dr",
                          "line2": "Suite 230",
                          "city": "Reston",
                          "region": "VA",
                          "postalCode": "20191",
                          "country": "US"
                        },
                        "phone": {
                          "number": "8885551212"
                        }
                      },
                      "recipient": {
                        "tin": "xxx-xx-1234",
                        "partyType": "INDIVIDUAL",
                        "individualName": {
                          "first": "Kris",
                          "middle": "Q",
                          "last": "Public"
                        },
                        "address": {
                          "line1": "1 Main St",
                          "city": "Melrose",
                          "region": "NY",
                          "postalCode": "12121",
                          "country": "US"
                        }
                      },
                      "taxDataType": "JSON",
                      "forms": [
                        {
                          "tax1099Div": {
                            "taxYear": 2020,
                            "taxFormId": "9876987698769876",
                            "taxFormDate": "2021-03-30",
                            "additionalInformation": "FDX v6.0",
                            "taxFormType": "Tax1099Div",
                            "foreignAccountTaxCompliance": false,
                            "accountNumber": "111-5555555",
                            "ordinaryDividends": 1107.0,
                            "qualifiedDividends": 1208.0,
                            "totalCapitalGain": 2109.0,
                            "unrecaptured1250Gain": 2210.0,
                            "section1202Gain": 2311.0,
                            "collectiblesGain": 2412.0,
                            "nonTaxableDistribution": 3013.0,
                            "federalTaxWithheld": 4014.0,
                            "section199ADividends": 5015.0,
                            "investmentExpenses": 6016.0,
                            "foreignTaxPaid": 7017.0,
                            "foreignCountry": "Mexico",
                            "cashLiquidation": 9019.0,
                            "nonCashLiquidation": 10020.0,
                            "taxExemptInterestDividend": 11021.0,
                            "specifiedPabInterestDividend": 12022.0,
                            "stateAndLocal": [
                              {
                                "stateCode": "NY",
                                "state": {
                                  "taxWithheld": 15023.0,
                                  "taxId": "14-000023"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "tax1099Int": {
                            "taxYear": 2020,
                            "taxFormId": "6543654365436543",
                            "taxFormDate": "2021-03-30",
                            "additionalInformation": "FDX v6.0",
                            "taxFormType": "Tax1099Int",
                            "foreignAccountTaxCompliance": false,
                            "accountNumber": "111-5555555",
                            "payerRtn": "007007007",
                            "interestIncome": 1008.0,
                            "earlyWithdrawalPenalty": 2009.0,
                            "usBondInterest": 3010.0,
                            "federalTaxWithheld": 4011.0,
                            "investmentExpenses": 5012.0,
                            "foreignTaxPaid": 6013.0,
                            "foreignCountry": "Canada",
                            "taxExemptInterest": 8015.0,
                            "specifiedPabInterest": 9016.0,
                            "marketDiscount": 10017.0,
                            "bondPremium": 11018.0,
                            "usBondPremium": 12019.0,
                            "taxExemptBondPremium": 13020.0,
                            "cusipNumber": "CUSIP",
                            "stateAndLocal": [
                              {
                                "stateCode": "NY",
                                "state": {
                                  "taxWithheld": 17022.0,
                                  "taxId": "15-000022"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "206": {
            "description": "Partial Content success retrieving a customer tax document, some errors are being returned",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxStatement5"
                    },
                    {
                      "description": "The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer, one or more of which contain an Error"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Account ID is required for searching or validating authorization",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1204",
                        "message": "Account ID is Required",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Tax Form not Found": {
                    "value": {
                      "code": "1204",
                      "message": "Account ID is Required",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tax Form for provided Tax Form ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1200",
                        "message": "Tax Form not Found",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Tax Form not Found": {
                    "value": {
                      "code": "1200",
                      "message": "Tax Form not Found",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Content Type not Supported",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1203",
                        "message": "Content Type not Supported",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Content Type not Supported": {
                    "value": {
                      "code": "1203",
                      "message": "Content Type not Supported",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Tax forms are not currently available for this account or this year",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "705",
                        "message": "Account is Closed",
                        "debugMessage": "Provider custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Account is Closed": {
                    "value": {
                      "code": "705",
                      "message": "Account is Closed",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  },
                  "Tax Forms not yet been made available": {
                    "value": {
                      "code": "1205",
                      "message": "Tax Forms not yet been made available",
                      "debugMessage": "Provider custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "TaxBasicAuth": []
          },
          {
            "bearerAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-tax-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/resources": {
      "get": {
        "tags": [
          "Resource Information"
        ],
        "summary": "getResources",
        "description": "Retrieve all the resources",
        "operationId": "getResources",
        "parameters": [
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          },
          {
            "name": "resultType",
            "in": "query",
            "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
            "style": "form",
            "explode": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResultType"
                },
                {
                  "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight"
                }
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Opaque cursor used by the provider to send the next set of records",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of resources found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResourceListentity"
                    },
                    {
                      "description": "Response object for /resources API"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input sent by client does not satisfy API specification",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Invalid Input",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Invalid Input",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication credentials for the target resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "603",
                        "message": "Authentication failed",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "603",
                      "message": "Authentication failed",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found for request parameters",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1107",
                        "message": "Data not found for request parameters",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Data not found for request parameters": {
                    "value": {
                      "code": "1107",
                      "message": "Data not found for request parameters",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-resource-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    },
    "/resources/{resourceId}": {
      "get": {
        "tags": [
          "Resource Information"
        ],
        "summary": "getResource",
        "description": "Retrieve the details of the identified resource",
        "operationId": "getResource",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Specific resourceId for which to retrieve details",
            "required": true,
            "style": "simple",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier for this interaction",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
            }
          },
          {
            "name": "FDX-API-Actor-Type",
            "in": "header",
            "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
            "style": "simple",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FDXAPIActorType"
                },
                {
                  "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
                  "example": "BATCH"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specific resource",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Resourceentity"
                    },
                    {
                      "description": "Details of resource entity"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Required input data not sent",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "401",
                        "message": "Resource ID is required",
                        "debugMessage": "Custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "401",
                      "message": "Resource ID is required",
                      "debugMessage": "Custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with provided ID was not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "Code TBD for Resource ID",
                        "message": "Resource not found",
                        "debugMessage": "Custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Resource not found": {
                    "value": {
                      "code": "Code TBD for Resource ID",
                      "message": "Resource not found",
                      "debugMessage": "Custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "500",
                        "message": "Internal server error",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Internal server error": {
                    "value": {
                      "code": "500",
                      "message": "Internal server error",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error when FdxVersion in Header is not one of those implemented at backend",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "1106",
                        "message": "FdxVersion not supported or not implemented",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "FdxVersion not supported or not implemented": {
                    "value": {
                      "code": "1106",
                      "message": "FdxVersion not supported or not implemented",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is down for maintenance",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "Unique identifier for this interaction",
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string",
                      "description": "Unique identifier for this interaction",
                      "format": "uuid",
                      "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                    },
                    "example": "c770aef3-6784-41f7-8e0e-ff5f97bddb3a"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error1"
                    },
                    {
                      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
                      "example": {
                        "code": "503",
                        "message": "Scheduled Maintenance",
                        "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                      }
                    }
                  ]
                },
                "examples": {
                  "Scheduled Maintenance": {
                    "value": {
                      "code": "503",
                      "message": "Scheduled Maintenance",
                      "debugMessage": "Data Provider's custom developer-level error details for troubleshooting"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://financialdataexchange-prod.apigee.net/fdx-resource-api-v6.1.0",
            "variables": {}
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ConsentGrantentity": {
        "title": "ConsentGrantentity",
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 256,
            "type": "string",
            "description": "The persistent identifier of the consent"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentGrantStatus3"
              },
              {
                "description": "The current status of the consent"
              }
            ]
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partyentity"
            },
            "description": "The non-end user parties participating in the Consent Grant"
          },
          "createdTime": {
            "type": "string",
            "description": "When the consent was initially granted",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "expirationTime": {
            "type": "string",
            "description": "When the consent grant will become expired",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "updatedTime": {
            "type": "string",
            "description": "When the consent grant was updated",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "durationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentDurationType"
              },
              {
                "description": "The type of duration of the consent"
              }
            ]
          },
          "durationPeriod": {
            "type": "integer",
            "description": "The consent duration in days from day of original grant",
            "format": "int32"
          },
          "lookbackPeriod": {
            "type": "integer",
            "description": "Period, in days, for which historical data may be requested; measured from request time, not grant time",
            "format": "int32"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentGrantResourceentity"
            },
            "description": "The permissioned resource entities"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links for related Consent Grant records"
          }
        },
        "description": "Record of user consent"
      },
      "ConsentGrantResourceentity": {
        "title": "ConsentGrantResourceentity",
        "required": [
          "resourceType",
          "resourceId",
          "dataClusters"
        ],
        "type": "object",
        "properties": {
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentResourceType3"
              },
              {
                "description": "Type of resource to be permissioned"
              }
            ]
          },
          "resourceId": {
            "maxLength": 256,
            "type": "string",
            "description": "Identifier of resource to be permissioned"
          },
          "dataClusters": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataCluster"
            },
            "description": "Names of clusters of data elements permissioned"
          }
        },
        "description": "Entity of permissioned resources"
      },
      "ConsentRequestentity": {
        "title": "ConsentRequestentity",
        "type": "object",
        "properties": {
          "durationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentDurationType"
              },
              {
                "description": "The type of duration of the consent"
              }
            ]
          },
          "durationPeriod": {
            "type": "integer",
            "description": "The consent duration in days from day of original grant",
            "format": "int32"
          },
          "lookbackPeriod": {
            "type": "integer",
            "description": "Period, in days, for which historical data may be requested; measured from request time, not grant time",
            "format": "int32"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentRequestedResourceentity"
            },
            "description": "The requested resource entities"
          }
        },
        "description": "Details of request to create new consent grant. This schema is to be used in POST request to Data Provider's `POST /par` endpoint using the Pushed Authorization Request (PAR) method"
      },
      "ConsentRequestedResourceentity": {
        "title": "ConsentRequestedResourceentity",
        "required": [
          "resourceType",
          "dataClusters"
        ],
        "type": "object",
        "properties": {
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentResourceType1"
              },
              {
                "description": "Type of resource permission requested"
              }
            ]
          },
          "dataClusters": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataCluster"
            },
            "description": "Names of clusters of data elements requested"
          }
        },
        "description": "Details of requested resource and data clusters"
      },
      "ConsentRevocationentity": {
        "title": "ConsentRevocationentity",
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentGrantStatus1"
              },
              {
                "description": "The status of the consent = REVOKED"
              }
            ]
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentUpdateReason1"
              },
              {
                "description": "The reason for consent revocation"
              }
            ]
          },
          "initiator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyType1"
              },
              {
                "description": "The party initiating consent revocation"
              }
            ]
          },
          "updatedTime": {
            "type": "string",
            "description": "When the consent grant was revoked",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          }
        },
        "description": "Details of request to revoke consent grant"
      },
      "ConsentRevocationListentity": {
        "title": "ConsentRevocationListentity",
        "type": "object",
        "properties": {
          "revocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentRevocationentity"
            },
            "description": "The list of revocation requests"
          }
        },
        "description": "List of consent grant revocation requests"
      },
      "Consentrevocationrequestentity": {
        "title": "Consentrevocationrequestentity",
        "type": "object",
        "properties": {
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentUpdateReason1"
              },
              {
                "description": "The reason for consent revocation"
              }
            ]
          },
          "initiator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyType2"
              },
              {
                "description": "The party initiating revocation"
              }
            ]
          }
        },
        "description": "Details of request to revoke consent grant"
      },
      "FDXOAuthTokenIntrospectionResponse": {
        "title": "FDXOAuthTokenIntrospectionResponse",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Flag indicating whether 'ConsentGrant' is active"
          },
          "iss": {
            "type": "string",
            "description": "Issuer claim 'iss' identifies the principal that issued the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "sub": {
            "type": "string",
            "description": "Subject claim 'sub' identifies the principal that is the subject of the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "aud": {
            "type": "string",
            "description": "Audience claim 'aud' identifies the recipients for whom the JWT is intended. May be a single StringOrURI value or an array of [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) values"
          },
          "exp": {
            "type": "number",
            "description": "Expiration Time claim 'exp' identifies the time on or after which the JWT MUST NOT be accepted Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "iat": {
            "type": "number",
            "description": "Issued At claim 'iat' identifies the time at which the JWT was issued. Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "jti": {
            "type": "string",
            "description": "JWT ID claim 'jti' provides a unique identifier for the JWT. Contains a case-sensitive string value"
          },
          "client_id": {
            "type": "string",
            "description": "The unique client identifier for the Data Recipient granted the consent"
          },
          "scope": {
            "type": "string",
            "description": "Space-delimited array of any number of scopes from those in FdxOauthScope, plus 'openid' and 'offline_access'"
          },
          "fdxConsentId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique ID for a consent grant"
          }
        },
        "description": "FDX response enabling transport of ConsentGrant details extended from [JSON Web Token (JWT) Profile for OAuth 2.0 Access Tokens](https://datatracker.ietf.org/doc/html/rfc9068)"
      },
      "FDXJWTProfile": {
        "title": "FDXJWTProfile",
        "type": "object",
        "properties": {
          "iss": {
            "type": "string",
            "description": "Issuer claim 'iss' identifies the principal that issued the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "sub": {
            "type": "string",
            "description": "Subject claim 'sub' identifies the principal that is the subject of the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "aud": {
            "type": "string",
            "description": "Audience claim 'aud' identifies the recipients for whom the JWT is intended. May be a single StringOrURI value or an array of [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) values"
          },
          "exp": {
            "type": "number",
            "description": "Expiration Time claim 'exp' identifies the time on or after which the JWT MUST NOT be accepted Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "iat": {
            "type": "number",
            "description": "Issued At claim 'iat' identifies the time at which the JWT was issued. Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value"
          },
          "jti": {
            "type": "string",
            "description": "JWT ID claim 'jti' provides a unique identifier for the JWT. Contains a case-sensitive string value"
          },
          "client_id": {
            "type": "string",
            "description": "The unique client identifier for the Data Recipient granted the consent"
          },
          "scope": {
            "type": "string",
            "description": "Space-delimited array of any number of scopes from those in FdxOauthScope, plus 'openid' and 'offline_access'"
          },
          "fdxConsentId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique ID for a consent grant"
          }
        },
        "description": "FDX JWT Profile enabling transport of ConsentGrant details in OAuth 'access_token', extended from [JSON Web Token (JWT) Profile for OAuth 2.0 Access Tokens](https://datatracker.ietf.org/doc/html/rfc9068)"
      },
      "ConsentGrantStatus": {
        "title": "ConsentGrantStatus",
        "enum": [
          "ACTIVE",
          "EXPIRED",
          "REVOKED"
        ],
        "type": "string",
        "description": "Current status of Consent Grant"
      },
      "ConsentResourceType": {
        "title": "ConsentResourceType",
        "enum": [
          "ACCOUNT",
          "CUSTOMER",
          "DOCUMENT"
        ],
        "type": "string",
        "description": "Resource for which data may be permissioned; can be extended to support additional types of resources"
      },
      "ConsentUpdateReason": {
        "title": "ConsentUpdateReason",
        "enum": [
          "BUSINESS_RULE",
          "USER_ACTION"
        ],
        "type": "string",
        "description": "Reason for Updating a Consent Grant"
      },
      "DataCluster": {
        "title": "DataCluster",
        "enum": [
          "ACCOUNT_BASIC",
          "ACCOUNT_DETAILED",
          "ACCOUNT_PAYMENTS",
          "BILLS",
          "CUSTOMER_CONTACT",
          "CUSTOMER_PERSONAL",
          "IMAGES",
          "INVESTMENTS",
          "NOTIFICATIONS",
          "PAYMENT_SUPPORT",
          "REWARDS",
          "STATEMENTS",
          "TAX",
          "TRANSACTIONS"
        ],
        "type": "string",
        "description": "Name of permissioned Data Cluster. For Data Cluster definitions refer to the Consent Components > Data Clusters section of the User Experience Guidelines document included in the FDX API. `ACCOUNT_PAYMENTS` is deprecated and replaced with `PAYMENT_SUPPORT` in FDX release V6.1.0, `ACCOUNT_PAYMENTS` will be removed with V7 release"
      },
      "ConsentDurationType": {
        "title": "ConsentDurationType",
        "enum": [
          "ONE_TIME",
          "PERSISTENT",
          "TIME_BOUND"
        ],
        "type": "string",
        "description": "The type of duration of the consent"
      },
      "ConsentGrantStatus1": {
        "title": "ConsentGrantStatus1",
        "enum": [
          "ACTIVE",
          "EXPIRED",
          "REVOKED"
        ],
        "type": "string",
        "description": "The status of the consent = REVOKED"
      },
      "ConsentGrantStatus3": {
        "title": "ConsentGrantStatus3",
        "enum": [
          "ACTIVE",
          "EXPIRED",
          "REVOKED"
        ],
        "type": "string",
        "description": "The current status of the consent"
      },
      "ConsentResourceType1": {
        "title": "ConsentResourceType1",
        "enum": [
          "ACCOUNT",
          "CUSTOMER",
          "DOCUMENT"
        ],
        "type": "string",
        "description": "Type of resource permission requested"
      },
      "ConsentResourceType3": {
        "title": "ConsentResourceType3",
        "enum": [
          "ACCOUNT",
          "CUSTOMER",
          "DOCUMENT"
        ],
        "type": "string",
        "description": "Type of resource to be permissioned"
      },
      "ConsentUpdateReason1": {
        "title": "ConsentUpdateReason1",
        "enum": [
          "BUSINESS_RULE",
          "USER_ACTION"
        ],
        "type": "string",
        "description": "The reason for consent revocation"
      },
      "ContentTypes": {
        "title": "ContentTypes",
        "enum": [
          "application/json",
          "application/pdf",
          "application/zip",
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "type": "string",
        "description": "Types of document formats. (Suggested values)"
      },
      "Error1": {
        "title": "Error1",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code defined by FDX API Specification or Data Provider indicating the error situation which has occurred"
          },
          "message": {
            "type": "string",
            "description": "End user displayable information which might help the customer diagnose an error"
          },
          "debugMessage": {
            "type": "string",
            "description": "Message used to debug the root cause of the error. Contents should not be used in consumer's business logic. Can change at any time and should only be used for consumer to communicate with the data provider about an issue. Provider can include an error GUID in message for their use."
          }
        },
        "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors"
      },
      "FDXAPIActorType": {
        "title": "FDXAPIActorType",
        "enum": [
          "BATCH",
          "USER"
        ],
        "type": "string",
        "description": "Indicates whether a customer is present and has requested the operation (USER), or if a batch job has requested the operation (BATCH)"
      },
      "HATEOASLink": {
        "title": "HATEOASLink",
        "required": [
          "href"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "URL to invoke the action on the resource",
            "example": "https://api.fi.com/fdx/v4/accounts/12345"
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HTTPActionType"
              },
              {
                "description": "HTTP Method to use for the request"
              }
            ]
          },
          "rel": {
            "type": "string",
            "description": "Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentTypes"
            },
            "description": "Content-types that can be used in the Accept header"
          }
        },
        "description": "REST application constraint (Hypermedia As The Engine Of Application State)"
      },
      "HTTPActionType": {
        "title": "HTTPActionType",
        "enum": [
          "DELETE",
          "GET",
          "PATCH",
          "POST",
          "PUT"
        ],
        "type": "string",
        "description": "HTTP Method to use for the request"
      },
      "Partyentity": {
        "title": "Partyentity",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human recognizable common name"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyType"
              },
              {
                "description": "Extensible string enum identifying the type of the party"
              }
            ]
          },
          "homeUri": {
            "type": "string",
            "description": "URI for party, where an end user could learn more about the company or application involved in the data sharing chain"
          },
          "logoUri": {
            "type": "string",
            "description": "URI for a logo asset to be displayed to the end user"
          },
          "registry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Registry"
              },
              {
                "description": "The registry containing the party's registration with name and id: FDX, GLEIF, ICANN, PRIVATE"
              }
            ]
          },
          "registeredEntityName": {
            "type": "string",
            "description": "Registered name of party"
          },
          "registeredEntityId": {
            "type": "string",
            "description": "Registered id of party"
          }
        },
        "description": "FDX Participant - an entity or person that is a part of a FDX API transaction"
      },
      "PartyType": {
        "title": "PartyType",
        "enum": [
          "DATA_ACCESS_PLATFORM",
          "DATA_PROVIDER",
          "DATA_RECIPIENT",
          "INDIVIDUAL",
          "MERCHANT",
          "VENDOR"
        ],
        "type": "string",
        "description": "Extensible string enum identifying the type of the party"
      },
      "PartyType1": {
        "title": "PartyType1",
        "enum": [
          "DATA_ACCESS_PLATFORM",
          "DATA_PROVIDER",
          "DATA_RECIPIENT",
          "INDIVIDUAL",
          "MERCHANT",
          "VENDOR"
        ],
        "type": "string",
        "description": "The party initiating consent revocation"
      },
      "PartyType2": {
        "title": "PartyType2",
        "enum": [
          "DATA_ACCESS_PLATFORM",
          "DATA_PROVIDER",
          "DATA_RECIPIENT",
          "INDIVIDUAL",
          "MERCHANT",
          "VENDOR"
        ],
        "type": "string",
        "description": "The party initiating revocation"
      },
      "Registry": {
        "title": "Registry",
        "enum": [
          "FDX",
          "GLEIF",
          "ICANN",
          "PRIVATE"
        ],
        "type": "string",
        "description": "The registry containing the party's registration with name and id: FDX, GLEIF, ICANN, PRIVATE"
      },
      "Accountentity": {
        "title": "Accountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountDescriptorentity"
          },
          {
            "type": "object",
            "properties": {
              "parentAccountId": {
                "maxLength": 256,
                "type": "string",
                "description": "Long-term persistent identity of the parent account. This is used to group accounts"
              },
              "lineOfBusiness": {
                "type": "string",
                "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc."
              },
              "routingTransitNumber": {
                "type": "string",
                "description": "The routing transit number (RTN) associated with the account number at the owning institution. This also serves as the 3-digit Institution (FID) and 5-digit Transit numbers for Canadian institutions, including leading zeroes"
              },
              "balanceType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BalanceType2"
                  },
                  {
                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
                  }
                ]
              },
              "contact": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountContactentity2"
                  },
                  {
                    "description": "Contact information associated with this account"
                  }
                ]
              },
              "interestRate": {
                "type": "number",
                "description": "Interest Rate of Account"
              },
              "interestRateType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InterestRateType2"
                  },
                  {
                    "description": "FIXED or VARIABLE"
                  }
                ]
              },
              "interestRateAsOf": {
                "type": "string",
                "description": "Date of account's interest rate",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "priorInterestRate": {
                "type": "number",
                "description": "Previous Interest Rate of Account"
              },
              "interestRateIndex": {
                "type": "string",
                "description": "Variable rate index name such as EONIA, EURIBOR, EURREPO, FEFUND, LIBOR, PRIME, SOFR, SONIA, etc."
              },
              "earlyPenaltyFlag": {
                "type": "boolean",
                "description": "Flag that indicates if there is an early penalty for withdrawal/payoff"
              },
              "transferIn": {
                "type": "boolean",
                "description": "Account is eligible for incoming transfers"
              },
              "transferOut": {
                "type": "boolean",
                "description": "Account is eligible for outgoing transfers"
              },
              "billPayStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountBillPayStatus2"
                  },
                  {
                    "description": "Defines account's ability to participate in bill payments"
                  }
                ]
              },
              "micrNumber": {
                "maxLength": 64,
                "type": "string",
                "description": "MICR Number"
              },
              "lastActivityDate": {
                "type": "string",
                "description": "Date that last transaction occurred on account",
                "format": "date",
                "example": "2021-07-15"
              },
              "rewardProgramId": {
                "maxLength": 256,
                "type": "string",
                "description": "Long-term persistent identity of rewards program associated with this account"
              },
              "transactionsIncluded": {
                "type": "boolean",
                "description": "Default is false. If present and true, a call to retrieve transactions will not return any further details about this account. This is an optimization that allows an FDX API server to return transactions and account details in a single call"
              },
              "domicile": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Domicileentity1"
                  },
                  {
                    "description": "The country and region of the account's legal jurisdiction"
                  }
                ]
              }
            }
          }
        ],
        "description": "An abstract account entity that concrete account entities extend"
      },
      "AccountContactentity": {
        "title": "AccountContactentity",
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          },
          "holders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolderentity"
            },
            "description": "Owners of the account"
          }
        },
        "description": "Contact information for the account"
      },
      "AccountDescriptorentity": {
        "title": "AccountDescriptorentity",
        "required": [
          "accountCategory"
        ],
        "type": "object",
        "properties": {
          "accountCategory": {
            "type": "string"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the account, though not an account number. This identity must be unique to the owning institution"
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this account"
              }
            ]
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {
                "description": "Account type"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "Full account number for the end user for this account at the owning institution. If not masked this is sensitive data which should only be exchanged if encrypted. For detailed information on implementing encryption see \"Part 4 End to End Encryption\" of the FDX API Security Model document in the Security section of the latest FDX Release download"
          },
          "accountNumberDisplay": {
            "type": "string",
            "description": "Account display number for the end user's handle at the owning institution. This is to be displayed by the Interface Provider"
          },
          "productName": {
            "type": "string",
            "description": "Marketed product name for this account. Used in UIs to assist in account selection"
          },
          "nickname": {
            "type": "string",
            "description": "Name given by the user. Used in UIs to assist in account selection"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountStatus2"
              },
              {
                "description": "Account status. Suggested values are: OPEN, CLOSED, PENDINGOPEN, PENDINGCLOSE, PAID, DELINQUENT, NEGATIVECURRENTBALANCE, RESTRICTED"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of account"
          },
          "accountOpenDate": {
            "type": "string",
            "description": "Account opening date",
            "format": "date",
            "example": "2021-07-15"
          },
          "accountCloseDate": {
            "type": "string",
            "description": "Account closing date",
            "format": "date",
            "example": "2021-07-15"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currencyentity4"
              },
              {
                "description": "Account currency"
              }
            ]
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of Financial institution-specific attributes"
          }
        },
        "description": "This descriptor provides minimal information about the account for use in lightweight arrays",
        "discriminator": {
          "propertyName": "accountCategory",
          "mapping": {
            "Account entity": "Accountentity",
            "Annuity Account entity": "AnnuityAccountentity",
            "Commercial Account entity": "CommercialAccountentity",
            "Deposit Account entity": "DepositAccountentity",
            "Digital Wallet account entity": "DigitalWalletaccountentity",
            "Insurance Account entity": "InsuranceAccountentity",
            "Investment Account entity": "InvestmentAccountentity",
            "Line of Credit Account entity": "LineofCreditAccountentity",
            "Loan Account entity": "LoanAccountentity"
          }
        }
      },
      "AccountHolderentity": {
        "title": "AccountHolderentity",
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The person's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "taxId": {
            "type": "string",
            "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)"
          },
          "taxIdCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode1"
              },
              {
                "description": "Country originating the Customer's taxId element"
              }
            ]
          },
          "governmentId": {
            "type": "string",
            "description": "A federal (such as passport) or state (such as driver's license) issued identifier"
          },
          "customerId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the customer. This identity must be unique to the owning institution"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessorConsumerType"
              },
              {
                "description": "Type of entity. One of BUSINESS or CONSUMER"
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerNameentity"
              },
              {
                "description": "The customer's name"
              }
            ]
          },
          "businessCustomer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessCustomerentity"
              },
              {
                "description": "The business customer information, only used if 'type' is 'BUSINESS'."
              }
            ]
          },
          "customerStartDate": {
            "type": "string",
            "description": "The customer's start date at the financial institution",
            "format": "date",
            "example": "2021-07-15"
          },
          "lastActivityDate": {
            "type": "string",
            "description": "The customer's date of last account activity at the financial institution",
            "format": "date",
            "example": "2021-07-15"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomertoAccountRelationshipentity"
            },
            "description": "List of accounts related to this customer"
          },
          "relationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountHolderRelationship1"
              },
              {
                "description": "Customer's relationship to the account"
              }
            ]
          }
        },
        "description": "Extends `Customer` and adds a `relationship` field to define the customer's relationship with an account"
      },
      "PaymentNetworkSupportedbyAccount": {
        "title": "PaymentNetworkSupportedbyAccount",
        "type": "object",
        "properties": {
          "bankId": {
            "type": "string",
            "description": "Bank identifier used by the payment network. Typically the 9-digit routing transit number (RTN) associated with the account number at a US institution, or the 3-digit Institution (FID) and 5-digit Transit numbers for Canadian institutions, including leading zeroes"
          },
          "identifier": {
            "type": "string",
            "description": "The number used to identify the account within the payment network. If identifierType is ACCOUNT_NUMBER, this is the account number; if identifierType is TOKENIZED_ACCOUNT_NUMBER, this is a tokenized account number"
          },
          "identifierType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentNetworkIdentifierType3"
              },
              {
                "description": "Type of identifier, ACCOUNT_NUMBER or TOKENIZED_ACCOUNT_NUMBER"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentNetworkType2"
              },
              {
                "description": "Type of Canadian or U.S. payment network, CA_ACSS, CA_LVTS, US_ACH, US_CHIPS, US_FEDWIRE, US_RTP"
              }
            ]
          },
          "transferIn": {
            "type": "boolean",
            "description": "Can transfer funds to the account using this information"
          },
          "transferOut": {
            "type": "boolean",
            "description": "Can transfer funds from the account using this information"
          },
          "supportsRequestForPayment": {
            "type": "boolean",
            "description": "Can receive Request for Payments"
          },
          "transferLimits": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Incomingandoutgoingtransferlimits2"
              },
              {
                "description": "The amount limits for transfers"
              }
            ]
          }
        },
        "description": "This provides details required to execute a transaction against the account within the payment network"
      },
      "Arrayofaccountpaymentnetworks": {
        "title": "Arrayofaccountpaymentnetworks",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "paymentNetworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentNetworkSupportedbyAccount"
            },
            "description": "Array of payment networks"
          }
        },
        "description": "An optionally paginated array of payment networks supported by the account"
      },
      "Accountsentity": {
        "title": "Accountsentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "accounts": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AnnuityAccountentity"
                },
                {
                  "$ref": "#/components/schemas/CommercialAccountentity"
                },
                {
                  "$ref": "#/components/schemas/DepositAccountentity"
                },
                {
                  "$ref": "#/components/schemas/DigitalWalletaccountentity"
                },
                {
                  "$ref": "#/components/schemas/InsuranceAccountentity"
                },
                {
                  "$ref": "#/components/schemas/InvestmentAccountentity"
                },
                {
                  "$ref": "#/components/schemas/LineofCreditAccountentity"
                },
                {
                  "$ref": "#/components/schemas/LoanAccountentity"
                }
              ]
            },
            "description": "An array of accounts with entity types dependent on the account type (deposit, investment, loan, line of credit, annuity, insurance, commercial, or digital wallet)"
          }
        },
        "description": "An optionally paginated array of accounts"
      },
      "AnnuityAccountentity": {
        "title": "AnnuityAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "payoutType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayoutType2"
                  },
                  {
                    "description": "Indicates type of payout such as immediate or deferred"
                  }
                ]
              },
              "policyProductType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PolicyProductType2"
                  },
                  {
                    "description": "The type of annuity product, e.g. Fixed or Variable"
                  }
                ]
              },
              "payoutAmount": {
                "type": "number",
                "description": "Amount paid out, based on mode frequency"
              },
              "payoutMode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayoutMode2"
                  },
                  {
                    "description": "Frequency of annuity payments"
                  }
                ]
              },
              "payoutStartDate": {
                "type": "string",
                "description": "Date the payout starts",
                "format": "date",
                "example": "2021-07-15"
              },
              "payoutEndDate": {
                "type": "string",
                "description": "Date the payout ends",
                "format": "date",
                "example": "2021-07-15"
              },
              "numberModalPayouts": {
                "type": "integer",
                "description": "Total number of payouts",
                "format": "int32"
              },
              "surrenderValue": {
                "type": "number",
                "description": "Cash surrender value (net) available if contract is surrendered"
              },
              "payoutChangePercentage": {
                "type": "number",
                "description": "Percentage of the accumulated value to be paid to the payee each year; used exclusive of payoutChangeAmount"
              },
              "payoutChangeAmount": {
                "type": "number",
                "description": "Incremental modal amount (positive or negative) by which the payout amount will be changed; used exclusive of payoutPercentage"
              },
              "periodCertainType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PeriodCertainType2"
                  },
                  {
                    "description": "The number of modal periods comprising the duration of the certain period of an annuity payout"
                  }
                ]
              }
            }
          }
        ],
        "description": "An annuity account type"
      },
      "AssetTransferNetwork": {
        "title": "AssetTransferNetwork",
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "The number used to identify the account within the asset transfer network. If identifierType is ACCOUNT_NUMBER, this is the account number; if identifierType is TOKENIZED_ACCOUNT_NUMBER, this is a tokenized account number"
          },
          "identifierType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentNetworkIdentifierType1"
              },
              {
                "description": "Type of identifier"
              }
            ]
          },
          "institutionName": {
            "type": "string",
            "description": "The name of the institution holding the account"
          },
          "institutionId": {
            "type": "string",
            "description": "Institution identifier used by the asset transfer network ie. the Depository Trust and Clearing Corporation code for the institution holding the account"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetTransferType2"
              },
              {
                "description": "Type of asset transfer"
              }
            ]
          },
          "jointAccount": {
            "type": "boolean",
            "description": "Whether this account has joint owners"
          }
        },
        "description": "Information required to facilitate asset transfer from this account"
      },
      "AssetTransferNetworkList": {
        "title": "AssetTransferNetworkList",
        "type": "object",
        "properties": {
          "assetTransferNetworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransferNetwork"
            },
            "description": "Array of asset transfer networks"
          }
        },
        "description": "An array of asset transfer network details for this account"
      },
      "Billsentity": {
        "title": "Billsentity",
        "type": "object",
        "properties": {
          "totalPaymentDue": {
            "type": "number",
            "description": "Total payment due or next payment due.  Monthly payment due for loans"
          },
          "minimumPaymentDue": {
            "type": "number",
            "description": "The minimum amount which is due"
          },
          "dueDate": {
            "type": "string",
            "description": "The date that the payment is due",
            "format": "date",
            "example": "2021-07-15"
          },
          "autoPayEnabled": {
            "type": "boolean",
            "description": "Whether the user's bill is paid automatically"
          },
          "autoPayAmount": {
            "type": "number",
            "description": "The amount of money the user has set to autopay this bill"
          },
          "autoPayDate": {
            "type": "string",
            "description": "The date the autopayment is set to trigger for this bill",
            "format": "date",
            "example": "2021-07-15"
          },
          "pastDueAmount": {
            "type": "number",
            "description": "The amount that the user should have already paid. The value is negative if user owes money"
          },
          "lastPaymentAmount": {
            "type": "number",
            "description": "The amount of the most recent payment"
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "The date of most recent payment",
            "format": "date",
            "example": "2021-07-15"
          },
          "statementBalance": {
            "type": "number",
            "description": "The amount of the last statement.  The value is negative if the user owes money"
          },
          "statementDate": {
            "type": "string",
            "description": "The date the statement was issued",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "The payments due on an account"
      },
      "CardArtentity": {
        "title": "CardArtentity",
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Display label for the specific image"
          },
          "imageUri": {
            "type": "string",
            "description": "The [URI](https://datatracker.ietf.org/doc/html/rfc2397) link of a PNG, JPG or GIF image with proportions defined by [ISO 8710 ID-1](https://en.wikipedia.org/wiki/ISO/IEC_7810) with 340x210 ratio and width no greater than 512 pixels. The image at this URI must be accessible at all times, with no additional authentication headers. Typically this is an image resource located in the data provider's public web site or Content Delivery Network"
          }
        },
        "description": "Art associated with the card"
      },
      "CommercialAccountentity": {
        "title": "CommercialAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date of balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "openingLedgerBalance": {
                "type": "number",
                "description": "Opening ledger balance"
              },
              "closingLedgerBalance": {
                "type": "number",
                "description": "Closing ledger balance"
              },
              "currentLedgerBalance": {
                "type": "number",
                "description": "Current ledger balance"
              },
              "openingAvailableBalance": {
                "type": "number",
                "description": "Opening available balance"
              },
              "currentAvailableBalance": {
                "type": "number",
                "description": "Current available balance"
              },
              "closingAvailableBalance": {
                "type": "number",
                "description": "Closing available balance"
              },
              "nextDayAvailableBalance": {
                "type": "number",
                "description": "Next day's available balance"
              },
              "twoDaysPlusAvailableBalance": {
                "type": "number",
                "description": "Two days out's available balance"
              },
              "numberOfOutstandingCredits": {
                "type": "integer",
                "description": "Number of outstanding credit transactions",
                "format": "int32"
              },
              "outstandingCreditsAmount": {
                "type": "number",
                "description": "Total amount of outstanding credits"
              },
              "numberOfOutstandingDebits": {
                "type": "integer",
                "description": "Number of outstanding debit transactions",
                "format": "int32"
              },
              "outstandingDebitsAmount": {
                "type": "number",
                "description": "Total amount of outstanding debits"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CommercialTransactionentity"
                },
                "description": "Transactions on the commercial account"
              },
              "commercialBalances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CommercialBalanceentity"
                },
                "description": "A list of specific treasury management defined balances"
              }
            }
          }
        ],
        "description": "Information for a commercial account type"
      },
      "CommercialBalanceentity": {
        "title": "CommercialBalanceentity",
        "type": "object",
        "properties": {
          "commercialCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommercialCodeentity1"
              },
              {
                "description": "The code for a specific treasury management defined field"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "The treasury management balance amount"
          },
          "memo": {
            "type": "string",
            "description": "Memo field for the treasury management balance amount"
          }
        },
        "description": "A specific treasury management defined balance"
      },
      "CommercialCodeentity": {
        "title": "CommercialCodeentity",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TreasuryManagementType"
              },
              {
                "description": "The source of Treasury Management account definition; one of BAI, BTRS, ISO, SWIFT"
              }
            ]
          },
          "code": {
            "type": "string",
            "description": "The code of the Treasury Management defined field"
          }
        },
        "description": "The code for a specific treasury management defined field.\nThe [X9 BTRS/BTR3 standard](https://x9.org/standards/btrs/) (formerly named BAI2) for corporate and treasury data elements is proposed to provide the basis of (or starting point for) representing summary, account, and transaction codes for the Corp/Treasury Entity, subject to any necessary modifications useful to the members of the FDX consortium and users of the API specification"
      },
      "CommercialTransactionentity": {
        "title": "CommercialTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "immediateAvailableBalance": {
                "type": "number",
                "description": "Immediate available balance"
              },
              "nextDayAvailableBalance": {
                "type": "number",
                "description": "Next day available balance"
              },
              "twoDaysPlusAvailableBalance": {
                "type": "number",
                "description": "Two days plus available balance"
              },
              "referenceBankId": {
                "type": "string",
                "description": "Reference bank id"
              },
              "referenceBranchId": {
                "type": "string",
                "description": "Reference branch id"
              },
              "referenceCustomerId": {
                "type": "string",
                "description": "Reference customer id"
              },
              "commercialCode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CommercialCodeentity1"
                  },
                  {
                    "description": "The code for a specific treasury management defined field"
                  }
                ]
              },
              "memo": {
                "type": "string",
                "description": "Memo field for the commercial transaction"
              }
            }
          }
        ],
        "description": "A transaction on a commercial account type"
      },
      "Contributionentity": {
        "title": "Contributionentity",
        "type": "object",
        "properties": {
          "securityId": {
            "type": "string",
            "description": "Unique identifier of security"
          },
          "securityIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SecurityIdType1"
              },
              {
                "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN"
              }
            ]
          },
          "employerMatchPercentage": {
            "type": "number",
            "description": "Employer contribution match percentage"
          },
          "employerMatchAmount": {
            "type": "number",
            "description": "Employer contribution match amount"
          },
          "employeePreTaxAmount": {
            "type": "number",
            "description": "Employee pre-tax contribution amount"
          },
          "employeePreTaxPercentage": {
            "type": "number",
            "description": "Employee pre-tax contribution percentage"
          },
          "employeeAfterTaxAmount": {
            "type": "number",
            "description": "Employee after tax contribution amount"
          },
          "employeeAfterTaxPercentage": {
            "type": "number",
            "description": "Employee after tax contribution percentage"
          },
          "employeeDeferPreTaxAmount": {
            "type": "number",
            "description": "Employee defer pre-tax contribution match amount"
          },
          "employeeDeferPreTaxPercentage": {
            "type": "number",
            "description": "Employee defer pre-tax contribution match percentage"
          },
          "employeeYearToDate": {
            "type": "number",
            "description": "Employee total year to date contribution"
          },
          "employerYearToDate": {
            "type": "number",
            "description": "Employer total year to date contribution"
          },
          "rolloverContributionPercentage": {
            "type": "number",
            "description": "Rollover contribution percentage"
          },
          "rolloverContributionAmount": {
            "type": "number",
            "description": "Rollover contribution Amount"
          }
        },
        "description": "Contribution information to an investment account"
      },
      "Currencyentity": {
        "title": "Currencyentity",
        "type": "object",
        "properties": {
          "currencyRate": {
            "type": "number",
            "description": "Currency rate between original and converted currency"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "originalCurrencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode1"
              },
              {
                "description": "Original ISO 4217 currency code"
              }
            ]
          }
        },
        "description": "Represents an international currency"
      },
      "DebtSecurityentity": {
        "title": "DebtSecurityentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Securityentity"
          },
          {
            "type": "object",
            "properties": {
              "parValue": {
                "type": "number",
                "description": "Par value amount"
              },
              "debtType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DebtType2"
                  },
                  {
                    "description": "Debt type. One of COUPON, ZERO"
                  }
                ]
              },
              "debtClass": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DebtClass2"
                  },
                  {
                    "description": "Classification of debt. One of TREASURY, MUNICIPAL, CORPORATE, OTHER"
                  }
                ]
              },
              "couponRate": {
                "type": "number",
                "description": "Bond coupon rate for next closest call date"
              },
              "couponDate": {
                "type": "string",
                "description": "Maturity date for next coupon",
                "format": "date",
                "example": "2021-07-15"
              },
              "couponMatureFrequency": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CouponMatureFrequency2"
                  },
                  {
                    "description": "When coupons mature. One of MONTHLY, QUARTERLY,  SEMIANNUAL, ANNUAL, OTHER"
                  }
                ]
              },
              "callPrice": {
                "type": "number",
                "description": "Bond call price"
              },
              "yieldToCall": {
                "type": "number",
                "description": "Yield to next call"
              },
              "callDate": {
                "type": "string",
                "description": "Next call date",
                "format": "date",
                "example": "2021-07-15"
              },
              "callType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CallType2"
                  },
                  {
                    "description": "Type of next call. One of CALL, PUT, PREFUND, MATURITY"
                  }
                ]
              },
              "yieldToMaturity": {
                "type": "number",
                "description": "Yield to maturity"
              },
              "bondMaturityDate": {
                "type": "string",
                "description": "Bond maturity date",
                "format": "date",
                "example": "2021-07-15"
              }
            }
          }
        ],
        "description": "An investment in a debt security"
      },
      "DepositAccountentity": {
        "title": "DepositAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date of balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "currentBalance": {
                "type": "number",
                "description": "Balance of funds in account"
              },
              "openingDayBalance": {
                "type": "number",
                "description": "Day's opening fund balance"
              },
              "availableBalance": {
                "type": "number",
                "description": "Balance of funds available for use"
              },
              "annualPercentageYield": {
                "type": "number",
                "description": "Annual Percentage Yield"
              },
              "interestYtd": {
                "type": "number",
                "description": "YTD Interest"
              },
              "term": {
                "type": "integer",
                "description": "Term of CD in months",
                "format": "int32"
              },
              "maturityDate": {
                "type": "string",
                "description": "Maturity date for CDs",
                "format": "date",
                "example": "2021-07-15"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DepositTransactionentity"
                },
                "description": "Transactions on the deposit account"
              }
            }
          }
        ],
        "description": "Information for a deposit account type"
      },
      "DepositTransactionentity": {
        "title": "DepositTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "transactionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositTransactionType2"
                  },
                  {
                    "description": "CHECK, WITHDRAWAL, TRANSFER, POSDEBIT, ATMWITHDRAWAL, BILLPAYMENT, FEE, DEPOSIT, ADJUSTMENT, INTEREST, DIVIDEND, DIRECTDEPOSIT, ATMDEPOSIT, POSCREDIT"
                  }
                ]
              },
              "payee": {
                "maxLength": 255,
                "type": "string",
                "description": "Payee name"
              },
              "checkNumber": {
                "type": "integer",
                "description": "Check number",
                "format": "int32"
              }
            }
          }
        ],
        "description": "A transaction on a deposit account type"
      },
      "DigitalWalletaccountentity": {
        "title": "DigitalWalletaccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date of balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "currentBalance": {
                "type": "number",
                "description": "Balance of funds in account"
              },
              "openingDayBalance": {
                "type": "number",
                "description": "Day's opening fund balance"
              },
              "availableBalance": {
                "type": "number",
                "description": "Balance of funds available for use"
              },
              "annualPercentageYield": {
                "type": "number",
                "description": "Annual Percentage Yield"
              },
              "interestYtd": {
                "type": "number",
                "description": "YTD Interest"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DigitalWalletTransactionentity"
                },
                "description": "Transactions on the digital wallet"
              }
            }
          }
        ],
        "description": "Information for a digital wallet account"
      },
      "DigitalWalletTransactionentity": {
        "title": "DigitalWalletTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "transactionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DigitalWalletTransactionType2"
                  },
                  {
                    "description": "ADJUSTMENT, BILL_PAYMENT, CREDIT, DEBIT, DEPOSIT, DIRECT_DEPOSIT, DIVIDEND, FEE, INTEREST, MERCHANT_PAYMENT, MERCHANT_REFUND, TRANSFER_IN, TRANSFER_OUT, WITHDRAWAL"
                  }
                ]
              },
              "payee": {
                "maxLength": 255,
                "type": "string",
                "description": "Payee name"
              }
            }
          }
        ],
        "description": "A transaction on a digital wallet account"
      },
      "FIPortionentity": {
        "title": "FIPortionentity",
        "type": "object",
        "properties": {
          "assetClass": {
            "type": "string",
            "description": "Financial Institution-specific asset class"
          },
          "percent": {
            "type": "number",
            "description": "Percentage of asset class that falls under this asset"
          }
        },
        "description": "Financial Institution-specific asset allocation"
      },
      "Holdingentity": {
        "title": "Holdingentity",
        "type": "object",
        "properties": {
          "holdingId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the holding"
          },
          "securityIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityIDentity"
            },
            "description": "Unique identifiers for the security"
          },
          "holdingName": {
            "type": "string",
            "description": "Holding name or security name"
          },
          "holdingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HoldingType2"
              },
              {
                "description": "ANNUITY, BOND, CD, DIGITALASSET, MUTUALFUND, OPTION, OTHER, STOCK"
              }
            ]
          },
          "holdingSubType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HoldingSubType2"
              },
              {
                "description": "MONEYMARKET, CASH"
              }
            ]
          },
          "positionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PositionType1"
              },
              {
                "description": "LONG, SHORT"
              }
            ]
          },
          "heldInAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HeldInAccount2"
              },
              {
                "description": "Sub-account CASH, MARGIN, SHORT, OTHER"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "The description of the holding"
          },
          "symbol": {
            "type": "string",
            "description": "Ticker / Market symbol"
          },
          "originalPurchaseDate": {
            "type": "string",
            "description": "Date of original purchase",
            "format": "date",
            "example": "2021-07-15"
          },
          "purchasedPrice": {
            "type": "number",
            "description": "Price of holding at the time of purchase"
          },
          "currentAmortizationFactor": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number",
            "description": "Ranges from 0.0 - 1.0 indicates the adjustment to the calculation of the market value. 'currentUnitPrice * quantity * currentAmortizationFactor =  marketValue'",
            "default": 1
          },
          "currentUnitPrice": {
            "type": "number",
            "description": "Current unit price"
          },
          "changeInPrice": {
            "type": "number",
            "description": "Change in current price compared to previous day's close"
          },
          "currentUnitPriceDate": {
            "type": "string",
            "description": "Current unit price as of date",
            "format": "date",
            "example": "2021-07-15"
          },
          "units": {
            "type": "number",
            "description": "Required for stock, mutual funds. Number of shares (with decimals)"
          },
          "marketValue": {
            "type": "number",
            "description": "Market value at the time of data retrieved"
          },
          "faceValue": {
            "type": "number",
            "description": "Required for bonds. Face value at the time of data retrieved"
          },
          "averageCost": {
            "type": "boolean",
            "description": "Cost is average of all purchases for holding"
          },
          "cashAccount": {
            "type": "boolean",
            "description": "If true, indicates that this holding is used to maintain proceeds from sales, dividends, and other cash postings to the investment account"
          },
          "rate": {
            "type": "number",
            "description": "For CDs, bonds, and other rate based holdings"
          },
          "expirationDate": {
            "type": "string",
            "description": "For CDs, bonds, and other time-based holdings",
            "format": "date",
            "example": "2021-07-15"
          },
          "inv401kSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Investment401kSourceType4"
              },
              {
                "description": "Source for money for this security. One of PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST"
              }
            ]
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currencyentity1"
              },
              {
                "description": "Currency information if it is different from Account entity"
              }
            ]
          },
          "assetClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Portionentity"
            },
            "description": "Percent breakdown by asset class"
          },
          "fiAssetClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIPortionentity"
            },
            "description": "Percent breakdown by FI-specific asset class percentage breakdown"
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of FI-specific attributes"
          },
          "taxLots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxLotentity"
            },
            "description": "Breakdown by tax lot"
          },
          "digitalUnits": {
            "type": "string",
            "description": "Specify units to full precision with unlimited digits after decimal point"
          },
          "security": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DebtSecurityentity"
              },
              {
                "$ref": "#/components/schemas/MutualFundSecurityentity"
              },
              {
                "$ref": "#/components/schemas/OptionSecurityentity"
              },
              {
                "$ref": "#/components/schemas/OtherSecurityentity"
              },
              {
                "$ref": "#/components/schemas/StockSecurityentity"
              },
              {
                "$ref": "#/components/schemas/SweepSecurityentity"
              }
            ],
            "description": "The security of the Holding; one of DebtSecurity, MutualFundSecurity OptionSecurity, OtherSecurity, StockSecurity or SweepSecurity"
          }
        },
        "description": "A holding in an investment account"
      },
      "InsuranceAccountentity": {
        "title": "InsuranceAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "policyPremium": {
                "type": "number",
                "description": "The amount of the user's premium"
              },
              "policyPremiumTerm": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PolicyPremiumTermType2"
                  },
                  {
                    "description": "The payment term for the premium"
                  }
                ]
              },
              "policyStartDate": {
                "type": "string",
                "description": "The premium start date",
                "format": "date",
                "example": "2021-07-15"
              },
              "policyStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PolicyStatus2"
                  },
                  {
                    "description": "The status of an insurance policy account"
                  }
                ]
              },
              "policyEndDate": {
                "type": "string",
                "description": "The premium end date",
                "format": "date",
                "example": "2021-07-15"
              },
              "policyCoverageAmount": {
                "type": "number",
                "description": "Total amount of money the user is insured for"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InsuranceTransactionentity"
                },
                "description": "Transactions on the insurance account"
              },
              "bills": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Billsentity"
                },
                "description": "Payments due on the insurance account"
              }
            }
          }
        ],
        "description": "An insurance account type and properties such as category, premium, and payment term information"
      },
      "InsuranceTransactionentity": {
        "title": "InsuranceTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "transactionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InsuranceTransactionType"
                  },
                  {
                    "description": "The type of an insurance transaction"
                  }
                ]
              }
            }
          }
        ],
        "description": "An insurance transaction type"
      },
      "InvestmentAccountentity": {
        "title": "InvestmentAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date for balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "allowedCheckWriting": {
                "type": "boolean",
                "description": "Check writing privileges"
              },
              "allowedOptionTrade": {
                "type": "boolean",
                "description": "Allowed to trade options"
              },
              "currentValue": {
                "type": "number",
                "description": "Total current value of all investments"
              },
              "holdings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Holdingentity"
                },
                "description": "Holdings in the investment account"
              },
              "openOrders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpenOrderentity"
                },
                "description": "Open orders in the investment account"
              },
              "contribution": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contributionentity"
                },
                "description": "Describes how new contributions are distributed among the available securities"
              },
              "vesting": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Vestingentity"
                },
                "description": "Provides the past, present, and future vesting schedule and percentages"
              },
              "investmentLoans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvestmentLoanentity"
                },
                "description": "Investment loans in the account"
              },
              "availableCashBalance": {
                "type": "number",
                "description": "Cash balance across all sub-accounts. Should include sweep funds"
              },
              "margin": {
                "type": "boolean",
                "description": "Margin trading is allowed"
              },
              "marginBalance": {
                "type": "number",
                "description": "Margin balance"
              },
              "shortBalance": {
                "type": "number",
                "description": "Short balance"
              },
              "rolloverAmount": {
                "type": "number",
                "description": "Rollover amount"
              },
              "employerName": {
                "type": "string",
                "description": "Name of the employer in investment 401k Plan"
              },
              "brokerId": {
                "type": "string",
                "description": "Unique identifier FI"
              },
              "planId": {
                "type": "string",
                "description": "Plan number for Investment 401k plan"
              },
              "calendarYearFor401K": {
                "type": "integer",
                "description": "The calendar year for this 401k account",
                "format": "int32"
              },
              "balanceList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvestmentBalanceentity"
                },
                "description": "List of balances. Aggregate of name value pairs"
              },
              "dailyChange": {
                "type": "number",
                "description": "Daily change"
              },
              "percentageChange": {
                "type": "number",
                "description": "Percentage change"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvestmentTransactionentity"
                },
                "description": "Transactions on the investment account"
              },
              "pensionSource": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PensionSourceentity"
                },
                "description": "Pension sources in the investment account"
              }
            }
          }
        ],
        "description": "An investment account type and information such as balances, transactions, holdings and privileges"
      },
      "InvestmentBalanceentity": {
        "title": "InvestmentBalanceentity",
        "type": "object",
        "properties": {
          "balanceName": {
            "type": "string",
            "description": "Name of the balance"
          },
          "balanceDescription": {
            "type": "string",
            "description": "Description of balance"
          },
          "balanceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvestmentBalanceType2"
              },
              {
                "description": "AMOUNT, PERCENTAGE"
              }
            ]
          },
          "balanceValue": {
            "type": "number",
            "description": "Value of named balance"
          },
          "balanceDate": {
            "type": "string",
            "description": "Date as of this balance",
            "format": "date",
            "example": "2021-07-15"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currencyentity2"
              },
              {
                "description": "Currency if different from that of account"
              }
            ]
          }
        },
        "description": "A point-in-time balance of the investment account"
      },
      "InvestmentLoanentity": {
        "title": "InvestmentLoanentity",
        "type": "object",
        "properties": {
          "loanId": {
            "type": "string",
            "description": "Unique identifier for this loan"
          },
          "loanDescription": {
            "type": "string",
            "description": "Description of loan"
          },
          "initialLoanBalance": {
            "type": "number",
            "description": "Initial loan balance amount"
          },
          "loanStartDate": {
            "type": "string",
            "description": "Start date of the loan",
            "format": "date",
            "example": "2021-07-15"
          },
          "currentLoanBalance": {
            "type": "number",
            "description": "Current loan principal balance amount"
          },
          "dateAsOf": {
            "type": "string",
            "description": "Date and time of current loan balance",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "loanRate": {
            "type": "number",
            "description": "Loan annual interest rate for the loan"
          },
          "loanPaymentAmount": {
            "type": "number",
            "description": "Loan payment amount"
          },
          "loanPaymentFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LoanPaymentFrequency2"
              },
              {
                "description": "WEEKLY, BIWEEKLY, TWICEMONTHLY, MONTHLY, FOURWEEKS, BIMONTHLY, QUARTERLY, SEMIANNUALLY, ANNUALLY, OTHER"
              }
            ]
          },
          "loanPaymentInitial": {
            "type": "number",
            "description": "Initial number of loan payments"
          },
          "loanPaymentsRemaining": {
            "type": "integer",
            "description": "Remaining number of loan payments",
            "format": "int32"
          },
          "loanMaturityDate": {
            "type": "string",
            "description": "Expected loan end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "loanInterestToDate": {
            "type": "number",
            "description": "Total interest paid to date on this loan"
          },
          "loanTotalProjectedInterest": {
            "type": "number",
            "description": "Total projected interest to be paid on this loan"
          },
          "loanNextPaymentDate": {
            "type": "string",
            "description": "The next payment date for the loan",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Any loan information against an investment account"
      },
      "InvestmentTransactionentity": {
        "title": "InvestmentTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "transactionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvestmentTransactionType2"
                  },
                  {
                    "description": "PURCHASED, SOLD, PURCHASEDTOCOVER, ADJUSTMENT, PURCHASETOOPEN, PURCHASETOCLOSE, SOLDTOOPEN, SOLDTOCLOSE, INTEREST, MARGININTEREST, REINVESTOFINCOME, RETURNOFCAPITAL, TRANSFER, CONTRIBUTION, FEE, OPTIONEXERCISE, OPTIONEXPIRATION, DIVIDEND, DIVIDENDREINVEST, SPLIT, CLOSURE, INCOME, EXPENSE, CLOSUREOPT, INVEXPENSE, JRNLSEC, JRNLFUND, OTHER, DIV, SRVCHG, DEP, DEPOSIT, ATM, POS, XFER, CHECK, PAYMENT, CASH, DIRECTDEP, DIRECTDEBIT, REPEATPMT"
                  }
                ]
              },
              "shares": {
                "type": "number",
                "description": "Required for stock, mutual funds. Number of shares (with decimals). Negative numbers indicate securities are being removed from the account"
              },
              "faceValue": {
                "type": "number",
                "description": "Cash value for bonds"
              },
              "price": {
                "type": "number",
                "description": "Unit purchase price"
              },
              "securityId": {
                "type": "string",
                "description": "Unique identifier of security"
              },
              "securityIdType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SecurityIdType1"
                  },
                  {
                    "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN"
                  }
                ]
              },
              "securityType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SecurityType2"
                  },
                  {
                    "description": "BOND, DEBT, DIGITALASSET, MUTUALFUND, OPTION, OTHER, STOCK, SWEEP"
                  }
                ]
              },
              "symbol": {
                "type": "string",
                "description": "Ticker symbol"
              },
              "markup": {
                "type": "number",
                "description": "Portion of unit price that is attributed to the dealer markup"
              },
              "commission": {
                "type": "number",
                "description": "Transaction commission"
              },
              "taxes": {
                "type": "number",
                "description": "Taxes on the trade"
              },
              "fees": {
                "type": "number",
                "description": "Fees applied to the trade"
              },
              "load": {
                "type": "number",
                "description": "Load on the transaction"
              },
              "inv401kSource": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Investment401kSourceType2"
                  },
                  {
                    "description": "Source of money. One of PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST"
                  }
                ]
              },
              "confirmationNumber": {
                "type": "string",
                "description": "Confirmation number of the transaction"
              },
              "fractionalCash": {
                "type": "number",
                "description": "Cash for fractional units (used for stock splits)"
              },
              "incomeType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IncomeType2"
                  },
                  {
                    "description": "Type of investment income. One of CGLONG (capital gains-long term), CGSHORT (capital gains-short term), MISC"
                  }
                ]
              },
              "oldUnits": {
                "type": "number",
                "description": "Number of shares before split"
              },
              "splitRatioNumerator": {
                "type": "number",
                "description": "Split ratio numerator"
              },
              "splitRatioDenominator": {
                "type": "number",
                "description": "Split ratio denominator"
              },
              "newUnits": {
                "type": "number",
                "description": "Number of shares after split"
              },
              "subAccountSec": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubAccountType1"
                  },
                  {
                    "description": "Sub-account security Type. One of CASH, MARGIN, SHORT, OTHERS"
                  }
                ]
              },
              "subAccountFund": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubAccountType2"
                  },
                  {
                    "description": "From which account money came in. One of CASH, MARGIN, SHORT, OTHERS"
                  }
                ]
              },
              "loanId": {
                "type": "string",
                "description": "For 401k accounts only. This indicates the transaction was due to a loan or a loan repayment"
              },
              "loanPrincipal": {
                "type": "number",
                "description": "How much loan pre-payment is principal"
              },
              "loanInterest": {
                "type": "number",
                "description": "How much loan pre-payment is interest"
              },
              "payrollDate": {
                "type": "string",
                "description": "The date for the 401k transaction was obtained in payroll",
                "format": "date",
                "example": "2021-07-15"
              },
              "priorYearContrib": {
                "type": "boolean",
                "description": "Indicates this buy was made using prior year's contribution"
              },
              "withholding": {
                "type": "number",
                "description": "Federal tax withholding"
              },
              "taxExempt": {
                "type": "boolean",
                "description": "Tax-exempt transaction"
              },
              "gain": {
                "type": "number",
                "description": "For sales"
              },
              "stateWithholding": {
                "type": "number",
                "description": "State tax withholding"
              },
              "penalty": {
                "type": "number",
                "description": "Indicates amount withheld due to a penalty"
              },
              "runningBalance": {
                "type": "number",
                "description": "Running balance of the position"
              },
              "unitPrice": {
                "type": "number",
                "description": "Price per commonly-quoted unit. Does not include markup/markdown, unitprice. Share price for stocks, mutual funds, and others. Percentage of par for bonds. Per share (not contract) for options"
              },
              "units": {
                "type": "number",
                "description": "For security-based actions other than stock splits, quantity. Shares for stocks, mutual funds, and others. Face value for bonds. Contracts for options"
              },
              "unitType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitType1"
                  },
                  {
                    "description": "SHARES, CURRENCY"
                  }
                ]
              },
              "transactionReason": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionReason2"
                  },
                  {
                    "description": "Reason for this transaction; CALL (the debt was called), SELL (the debt was sold), MATURITY (the debt reached maturity)"
                  }
                ]
              },
              "accruedInterest": {
                "type": "number",
                "description": "Accrued interest"
              },
              "transferAction": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InvestmentTransferActionDirection2"
                  },
                  {
                    "description": "Transfer direction"
                  }
                ]
              },
              "positionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PositionType1"
                  },
                  {
                    "description": "LONG, SHORT"
                  }
                ]
              },
              "digitalUnits": {
                "type": "string",
                "description": "Full precision unit number, unlimited digits after decimal point"
              },
              "settlementTimestamp": {
                "type": "string",
                "description": "When the trade settled",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              }
            }
          }
        ],
        "description": "Specific transaction information"
      },
      "LineItementity": {
        "title": "LineItementity",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the line item"
          },
          "amount": {
            "type": "number",
            "description": "The amount of money attributable to this line item"
          },
          "checkNumber": {
            "type": "integer",
            "description": "Check number",
            "format": "int32"
          },
          "memo": {
            "maxLength": 255,
            "type": "string",
            "description": "Secondary item description"
          },
          "reference": {
            "type": "string",
            "description": "A reference number"
          },
          "imageIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs"
          }
        },
        "description": "A line item within a transaction"
      },
      "LineofCreditAccountentity": {
        "title": "LineofCreditAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date for balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "creditLine": {
                "type": "number",
                "description": "Credit limit"
              },
              "availableCredit": {
                "type": "number",
                "description": "Available credit"
              },
              "nextPaymentAmount": {
                "type": "number",
                "description": "Amount of next payment"
              },
              "nextPaymentDate": {
                "type": "string",
                "description": "Due date of next payment",
                "format": "date",
                "example": "2021-07-15"
              },
              "principalBalance": {
                "type": "number",
                "description": "Principal balance"
              },
              "currentBalance": {
                "type": "number",
                "description": "Current balance of the line of credit"
              },
              "minimumPaymentAmount": {
                "type": "number",
                "description": "Minimum payment amount, which is due at the date specified in `nextPaymentDate`"
              },
              "lastPaymentAmount": {
                "type": "number",
                "description": "Last payment amount"
              },
              "lastPaymentDate": {
                "type": "string",
                "description": "Last payment date",
                "format": "date",
                "example": "2021-07-15"
              },
              "pastDueAmount": {
                "type": "number",
                "description": "Past Due Amount"
              },
              "lastStmtBalance": {
                "type": "number",
                "description": "Last Statement Balance"
              },
              "lastStmtDate": {
                "type": "string",
                "description": "Last Statement Date",
                "format": "date",
                "example": "2021-07-15"
              },
              "purchasesApr": {
                "type": "number",
                "description": "Purchases APR"
              },
              "advancesApr": {
                "type": "number",
                "description": "Advances APR"
              },
              "cashAdvanceLimit": {
                "type": "number",
                "description": "Cash advance limit"
              },
              "availableCash": {
                "type": "number",
                "description": "Available cash"
              },
              "financeCharges": {
                "type": "number",
                "description": "Finance charges"
              },
              "cardNetwork": {
                "type": "string",
                "description": "Card network, e.g. \"VISA\", \"MASTERCARD\", \"AMERICAN_EXPRESS\", \"DISCOVER\", \"INTERLINK\", \"STAR\" etc."
              },
              "cardArt": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CardArtentity2"
                  },
                  {
                    "description": "Any Art associated to the Card related to the account"
                  }
                ]
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineofCreditTransactionentity"
                },
                "description": "Transactions on the line-of-credit account"
              }
            }
          }
        ],
        "description": "A line of credit account"
      },
      "LineofCreditTransactionentity": {
        "title": "LineofCreditTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "transactionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LineofCreditTransactionType2"
                  },
                  {
                    "description": "CHECK, WITHDRAWAL, PAYMENT, FEE, ADJUSTMENT, INTEREST, PURCHASE"
                  }
                ]
              },
              "checkNumber": {
                "type": "integer",
                "description": "Check number",
                "format": "int32"
              },
              "paymentDetails": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentDetailsentity"
                  },
                  {
                    "description": "Breakdown of payment details"
                  }
                ]
              }
            }
          }
        ],
        "description": "A line of credit transaction"
      },
      "LoanAccountentity": {
        "title": "LoanAccountentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Accountentity"
          },
          {
            "type": "object",
            "properties": {
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date for balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "principalBalance": {
                "type": "number",
                "description": "Principal balance of loan"
              },
              "escrowBalance": {
                "type": "number",
                "description": "Escrow balance of loan"
              },
              "originalPrincipal": {
                "type": "number",
                "description": "Original principal of loan"
              },
              "originatingDate": {
                "type": "string",
                "description": "Loan origination date",
                "format": "date",
                "example": "2021-07-15"
              },
              "loanTerm": {
                "type": "integer",
                "description": "Term of loan in months",
                "format": "int32"
              },
              "totalNumberOfPayments": {
                "type": "integer",
                "description": "Total number of payments",
                "format": "int32"
              },
              "nextPaymentAmount": {
                "type": "number",
                "description": "Amount of next payment"
              },
              "nextPaymentDate": {
                "type": "string",
                "description": "Date of next payment",
                "format": "date",
                "example": "2021-07-15"
              },
              "paymentFrequency": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentFrequency1"
                  },
                  {
                    "description": "DAILY, WEEKLY, BIWEEKLY, SEMIMONTHLY, MONTHLY, SEMIANNUALLY, ANNUALLY"
                  }
                ]
              },
              "compoundingPeriod": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CompoundingPeriod2"
                  },
                  {
                    "description": "DAILY, WEEKLY, BIWEEKLY, SEMIMONTHLY, MONTHLY, SEMIANNUALLY, ANNUALLY"
                  }
                ]
              },
              "payOffAmount": {
                "type": "number",
                "description": "Payoff amount"
              },
              "lastPaymentAmount": {
                "type": "number",
                "description": "Last payment amount"
              },
              "lastPaymentDate": {
                "type": "string",
                "description": "Last payment date",
                "format": "date",
                "example": "2021-07-15"
              },
              "maturityDate": {
                "type": "string",
                "description": "Maturity date",
                "format": "date",
                "example": "2021-07-15"
              },
              "interestPaidYearToDate": {
                "type": "number",
                "description": "Interest paid year to date"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoanTransactionentity"
                },
                "description": "Transactions on the loan account"
              }
            }
          }
        ],
        "description": "A loan account type"
      },
      "LoanTransactionentity": {
        "title": "LoanTransactionentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "type": "object",
            "properties": {
              "transactionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LoanTransactionType2"
                  },
                  {
                    "description": "PAYMENT, FEE, ADJUSTMENT, INTEREST"
                  }
                ]
              },
              "paymentDetails": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentDetailsentity"
                  },
                  {
                    "description": "Breakdown of payment details"
                  }
                ]
              }
            }
          }
        ],
        "description": "A transaction on a loan account"
      },
      "MutualFundSecurityentity": {
        "title": "MutualFundSecurityentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Securityentity"
          },
          {
            "type": "object",
            "properties": {
              "mutualFundType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MutualFundType2"
                  },
                  {
                    "description": "Mutual fund type. One of OPENEND, CLOSEEND, OTHER"
                  }
                ]
              },
              "unitsStreet": {
                "type": "number",
                "description": "Units in the FI's street name, positive quantity"
              },
              "unitsUser": {
                "type": "number",
                "description": "Units in user's name directly, positive  quantity"
              },
              "reinvestDividends": {
                "type": "boolean",
                "description": "Reinvest dividends"
              },
              "reinvestCapitalGains": {
                "type": "boolean",
                "description": "Reinvest capital gains"
              },
              "yield": {
                "type": "number",
                "description": "Current yield reported as portion of the fund's assets"
              },
              "yieldAsOfDate": {
                "type": "string",
                "description": "As-of date for yield value",
                "format": "date",
                "example": "2021-07-15"
              }
            }
          }
        ],
        "description": "A mutual fund"
      },
      "OpenOrderentity": {
        "title": "OpenOrderentity",
        "type": "object",
        "properties": {
          "orderId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the order. Id for this order transaction"
          },
          "securityId": {
            "type": "string",
            "description": "Unique identifier of security"
          },
          "securityIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SecurityIdType1"
              },
              {
                "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN"
              }
            ]
          },
          "symbol": {
            "type": "string",
            "description": "Market symbol"
          },
          "description": {
            "type": "string",
            "description": "Description of order"
          },
          "units": {
            "type": "number",
            "description": "Number of units (shares or bonds etc.)"
          },
          "orderType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderType2"
              },
              {
                "description": "Type of order. One of BUY, SELL, BUYTOCOVER, BUYTOOPEN, SELLTOCOVER, SELLTOOPEN,  SELLSHORT, SELLCLOSE"
              }
            ]
          },
          "orderDate": {
            "type": "string",
            "description": "Order date",
            "format": "date",
            "example": "2021-07-15"
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price"
          },
          "unitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitType3"
              },
              {
                "description": "Type of unit. One of SHARES, CURRENCY"
              }
            ]
          },
          "orderDuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderDuration2"
              },
              {
                "description": "This order is good for DAY, GOODTILLCANCEL, IMMEDIATE"
              }
            ]
          },
          "subAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubAccountType4"
              },
              {
                "description": "CASH, MARGIN, SHORT, OTHER"
              }
            ]
          },
          "limitPrice": {
            "type": "number",
            "description": "Limit price"
          },
          "stopPrice": {
            "type": "number",
            "description": "Stop price"
          },
          "inv401kSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Investment401kSourceType1"
              },
              {
                "description": "For 401(k) accounts, source of money for this order. PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST. Default if not present is OTHERNONVEST"
              }
            ]
          }
        },
        "description": "An open investment transaction order"
      },
      "OptionSecurityentity": {
        "title": "OptionSecurityentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Securityentity"
          },
          {
            "type": "object",
            "properties": {
              "secured": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Secured2"
                  },
                  {
                    "description": "How the option is secured. One of NAKED, COVERED"
                  }
                ]
              },
              "optionType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OptionType2"
                  },
                  {
                    "description": "Option type. One of PUT, CALL"
                  }
                ]
              },
              "strikePrice": {
                "type": "number",
                "description": "Strike price / Unit price"
              },
              "expireDate": {
                "type": "string",
                "description": "Expiration date of option",
                "format": "date",
                "example": "2021-07-15"
              },
              "sharesPerContract": {
                "type": "number",
                "description": "Shares per contract"
              }
            }
          }
        ],
        "description": "An option"
      },
      "OtherSecurityentity": {
        "title": "OtherSecurityentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Securityentity"
          },
          {
            "type": "object",
            "properties": {
              "typeDescription": {
                "type": "string",
                "description": "Description of other security"
              }
            }
          }
        ],
        "description": "Any other kind of security"
      },
      "OccurrencebasedlimitsforaPaymentNetwork": {
        "title": "OccurrencebasedlimitsforaPaymentNetwork",
        "type": "object",
        "properties": {
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account using the timeframe limits"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account using the timeframe limits"
          }
        },
        "description": "This provides the occurrence-based limits applied to the account within the payment network"
      },
      "TimeframebasedlimitsforaPaymentNetwork": {
        "title": "TimeframebasedlimitsforaPaymentNetwork",
        "type": "object",
        "properties": {
          "resetsOn": {
            "type": "string",
            "description": "Date/time at which this timeframe will reset next",
            "format": "date-time"
          },
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "maxOccurrence": {
            "type": "integer",
            "description": "Maximum number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          },
          "remainingOccurrence": {
            "type": "integer",
            "description": "Remaining number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          }
        },
        "description": "This provides the time-based limits applied to the account within the payment network"
      },
      "Timeandoccurrencebasedtransferlimits": {
        "title": "Timeandoccurrencebasedtransferlimits",
        "type": "object",
        "properties": {
          "day": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork5"
              },
              {
                "description": "The transfer limits for the current day"
              }
            ]
          },
          "week": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork1"
              },
              {
                "description": "The transfer limits for the current week"
              }
            ]
          },
          "month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork2"
              },
              {
                "description": "The transfer limits for the current month"
              }
            ]
          },
          "year": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork3"
              },
              {
                "description": "The transfer limits for the current year"
              }
            ]
          },
          "transaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OccurrencebasedlimitsforaPaymentNetwork2"
              },
              {
                "description": "The transfer limits taking effect from all the timeframe limits"
              }
            ]
          }
        },
        "description": "The transfer amount limits for each timeframe or occurrence"
      },
      "PensionSourceentity": {
        "title": "PensionSourceentity",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the source"
          },
          "amount": {
            "type": "number",
            "description": "Benefit Amount"
          },
          "paymentOption": {
            "type": "string",
            "description": "Form of payment"
          },
          "asOfDate": {
            "type": "string",
            "description": "Date benefit was calculated",
            "format": "date",
            "example": "2021-07-15"
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentFrequency3"
              },
              {
                "description": "ANNUALLY, BIWEEKLY, DAILY, MONTHLY, SEMIANNUALLY, SEMIMONTHLY, WEEKLY"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "description": "Assumed retirement date. As of date amount is payable",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "The source of pension funds"
      },
      "Portionentity": {
        "title": "Portionentity",
        "type": "object",
        "properties": {
          "assetClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetClass2"
              },
              {
                "description": "The asset class for this allocation"
              }
            ]
          },
          "percent": {
            "type": "number",
            "description": "The percentage of this allocation"
          }
        },
        "description": "An asset allocation with class and percentage"
      },
      "RewardBalanceentity": {
        "title": "RewardBalanceentity",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name used to denominate the balance"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RewardType2"
              },
              {
                "description": "The type of the reward balance - CASHBACK, MILES, POINTS"
              }
            ]
          },
          "balance": {
            "type": "number",
            "description": "Total units available for redemption at time of download"
          },
          "accruedYtd": {
            "minimum": 0.0,
            "type": "number",
            "description": "Total units accrued in the current program year at time of download"
          },
          "redeemedYtd": {
            "minimum": 0.0,
            "type": "number",
            "description": "Total units redeemed in the current program year at time of download"
          },
          "qualifying": {
            "type": "boolean",
            "description": "Balance used for qualifying purposes",
            "default": false
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of FI-specific attributes"
          }
        },
        "description": "Reward program balance"
      },
      "RewardCategoriesentity": {
        "title": "RewardCategoriesentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "rewardCategories": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardCategoryentity"
            },
            "description": "Array of reward categories"
          }
        },
        "description": "An optionally paginated array of reward categories"
      },
      "RewardCategoryentity": {
        "title": "RewardCategoryentity",
        "type": "object",
        "properties": {
          "rewardProgramId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the reward program"
          },
          "categoryName": {
            "type": "string",
            "description": "Reward category name"
          },
          "categoryId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the reward category"
          },
          "multiplier": {
            "minimum": 0.0,
            "type": "number",
            "description": "Factor used to calculate rewards accrued"
          },
          "description": {
            "type": "string",
            "description": "Description of the reward category"
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of FI-specific attributes"
          }
        },
        "description": "Reward category used to calculate rewards on a transaction"
      },
      "RewardProgramMembershipentity": {
        "title": "RewardProgramMembershipentity",
        "type": "object",
        "properties": {
          "accountIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 256,
              "type": "string"
            },
            "description": "accountIds associated to the reward program"
          },
          "customerId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the associated Customer"
          },
          "memberId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the program member"
          },
          "memberNumber": {
            "type": "string",
            "description": "Reward program membership number"
          },
          "memberTier": {
            "type": "string",
            "description": "If the reward program is tiered, member's current tier"
          },
          "businessOrConsumer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessorConsumerType1"
              },
              {
                "description": "BUSINESS or CONSUMER membership"
              }
            ]
          },
          "balances": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardBalanceentity"
            },
            "description": "Array of balances"
          }
        },
        "description": "Details of a single membership in a reward programs"
      },
      "RewardProgramentity": {
        "title": "RewardProgramentity",
        "type": "object",
        "properties": {
          "rewardProgramId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the reward program"
          },
          "programName": {
            "type": "string",
            "description": "Name of reward program"
          },
          "programUrl": {
            "type": "string",
            "description": "URL of reward program"
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardProgramMembershipentity"
            },
            "description": "Array of reward memberships"
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of FI-specific attributes"
          }
        },
        "description": "Reward program detail"
      },
      "RewardProgramsentity": {
        "title": "RewardProgramsentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "rewardPrograms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardProgramentity"
            },
            "description": "Array of reward programs"
          }
        },
        "description": "An optionally paginated array of reward programs"
      },
      "Securityentity": {
        "title": "Securityentity",
        "required": [
          "securityCategory"
        ],
        "type": "object",
        "properties": {
          "securityCategory": {
            "type": "string"
          }
        },
        "description": "A base Security entity which defines the type of this security",
        "discriminator": {
          "propertyName": "securityCategory",
          "mapping": {
            "Debt Security entity": "DebtSecurityentity",
            "Mutual Fund Security entity": "MutualFundSecurityentity",
            "Option Security entity": "OptionSecurityentity",
            "Other Security entity": "OtherSecurityentity",
            "Stock Security entity": "StockSecurityentity",
            "Sweep Security entity": "SweepSecurityentity"
          }
        }
      },
      "SecurityIDentity": {
        "title": "SecurityIDentity",
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 256,
            "type": "string",
            "description": "Security identifier"
          },
          "idType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SecurityIdType1"
              },
              {
                "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN"
              }
            ]
          }
        },
        "description": "Unique identifier for a security"
      },
      "Statemententity": {
        "title": "Statemententity",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Corresponds to accountId in Account entity"
          },
          "statementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the statement"
          },
          "statementDate": {
            "type": "string",
            "description": "Date of the statement",
            "format": "date",
            "example": "2021-07-15"
          },
          "description": {
            "type": "string",
            "description": "Description of statement"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "The links to retrieve this account statement, or to invoke other APIs"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentStatus2"
              },
              {
                "description": "Availability status of statement"
              }
            ]
          }
        },
        "description": "An account statement"
      },
      "Anarrayofstatements": {
        "title": "Anarrayofstatements",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Statemententity"
            },
            "description": "An array of Statement, each with its HATEOAS link to retrieve the account statement"
          }
        },
        "description": "A paginated array of account statements"
      },
      "StockSecurityentity": {
        "title": "StockSecurityentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Securityentity"
          },
          {
            "type": "object",
            "properties": {
              "unitsStreet": {
                "type": "number",
                "description": "The units in the FI's street name as a positive quantity"
              },
              "unitsUser": {
                "type": "number",
                "description": "The units in user's name directly as a positive quantity"
              },
              "reinvestDividends": {
                "type": "boolean",
                "description": "Selection to reinvest dividends"
              },
              "stockType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StockType2"
                  },
                  {
                    "description": "COMMON, PREFERRED, CONVERTIBLE, OTHER"
                  }
                ]
              },
              "yield": {
                "type": "number",
                "description": "The current yield"
              },
              "yieldAsOfDate": {
                "type": "string",
                "description": "Yield as-of date",
                "format": "date",
                "example": "2021-07-15"
              }
            }
          }
        ],
        "description": "A stock security"
      },
      "SweepSecurityentity": {
        "title": "SweepSecurityentity",
        "allOf": [
          {
            "$ref": "#/components/schemas/Securityentity"
          },
          {
            "type": "object",
            "properties": {
              "currentBalance": {
                "type": "number",
                "description": "Balance of funds in account"
              },
              "availableBalance": {
                "type": "number",
                "description": "Balance of funds available for use"
              },
              "balanceAsOf": {
                "type": "string",
                "description": "As-of date of balances",
                "format": "date-time",
                "example": "2021-07-15T14:46:41.375Z"
              },
              "checks": {
                "type": "boolean",
                "description": "Whether or not checks can be written on the account"
              }
            }
          }
        ],
        "description": "A sweep security"
      },
      "TaxLotentity": {
        "title": "TaxLotentity",
        "type": "object",
        "properties": {
          "originalPurchaseDate": {
            "type": "string",
            "description": "Lot acquired date",
            "format": "date",
            "example": "2021-07-15"
          },
          "quantity": {
            "type": "number",
            "description": "Lot quantity"
          },
          "purchasedPrice": {
            "type": "number",
            "description": "Original purchase price"
          },
          "costBasis": {
            "type": "number",
            "description": "Total amount of money spent acquiring this lot including any fees or commission expenses incurred"
          },
          "currentValue": {
            "type": "number",
            "description": "Lot market value"
          },
          "positionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PositionType1"
              },
              {
                "description": "LONG, SHORT"
              }
            ]
          }
        },
        "description": "Block of securities receiving the same tax treatment"
      },
      "Transaction": {
        "title": "Transaction",
        "required": [
          "accountCategory"
        ],
        "type": "object",
        "properties": {
          "accountCategory": {
            "type": "string"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Corresponds to AccountId in Account"
          },
          "transactionId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the transaction (unique to account)"
          },
          "referenceTransactionId": {
            "maxLength": 256,
            "type": "string",
            "description": "For reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction"
          },
          "postedTimestamp": {
            "type": "string",
            "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "transactionTimestamp": {
            "type": "string",
            "description": "The date and time that the transaction was added to the server backend systems",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction, such as information about a merchant's name or place of business in a manner that is user friendly and accessible to the customer"
          },
          "memo": {
            "maxLength": 255,
            "type": "string",
            "description": "Secondary transaction description"
          },
          "debitCreditMemo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DebitCreditMemo2"
              },
              {
                "description": "DEBIT, CREDIT, MEMO"
              }
            ]
          },
          "category": {
            "type": "string",
            "description": "Transaction category, preferably MCC or SIC."
          },
          "subCategory": {
            "type": "string",
            "description": "Transaction category detail specifying the standard of the transaction category. For example, \"MCC\""
          },
          "reference": {
            "type": "string",
            "description": "A tracking reference identifier"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionStatus2"
              },
              {
                "description": "PENDING, MEMO, POSTED, AUTHORIZATION"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "The amount of money in the account currency"
          },
          "foreignAmount": {
            "type": "number",
            "description": "The amount of money in the foreign currency"
          },
          "foreignCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode2"
              },
              {
                "description": "The ISO 4217 code of the foreign currency"
              }
            ]
          },
          "imageIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Image Identifiers (unique to this transaction) used to retrieve Images of check or transaction receipt"
          },
          "lineItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItementity"
            },
            "description": "Breakdown of the transaction details"
          },
          "reward": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionRewardentity2"
              },
              {
                "description": "Rewards earned with this transaction"
              }
            ]
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of FI-specific attributes"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links (unique to this transaction) used to retrieve images of checks or transaction receipts"
          }
        },
        "description": "Base entity for financial transactions",
        "discriminator": {
          "propertyName": "accountCategory",
          "mapping": {
            "Commercial Transaction entity": "CommercialTransactionentity",
            "Deposit Transaction entity": "DepositTransactionentity",
            "Digital Wallet Transaction entity": "DigitalWalletTransactionentity",
            "Insurance Transaction entity": "InsuranceTransactionentity",
            "Investment Transaction entity": "InvestmentTransactionentity",
            "Line of Credit Transaction entity": "LineofCreditTransactionentity",
            "Loan Transaction entity": "LoanTransactionentity"
          }
        }
      },
      "TransactionRewardentity": {
        "title": "TransactionRewardentity",
        "type": "object",
        "properties": {
          "categoryId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the reward category. This ID is mapped to a category definition returned by calling the getRewardProgramCategories operation"
          },
          "accrued": {
            "type": "number",
            "description": "Reward units accrued on this transaction"
          },
          "adjusted": {
            "type": "number",
            "description": "Reward units adjusted on this transaction"
          }
        },
        "description": "Rewards earned on a transaction"
      },
      "Transactionsentity": {
        "title": "Transactionsentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "transactions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CommercialTransactionentity"
                },
                {
                  "$ref": "#/components/schemas/DepositTransactionentity"
                },
                {
                  "$ref": "#/components/schemas/DigitalWalletTransactionentity"
                },
                {
                  "$ref": "#/components/schemas/InsuranceTransactionentity"
                },
                {
                  "$ref": "#/components/schemas/InvestmentTransactionentity"
                },
                {
                  "$ref": "#/components/schemas/LineofCreditTransactionentity"
                },
                {
                  "$ref": "#/components/schemas/LoanTransactionentity"
                }
              ]
            },
            "description": "An array of transactions with entity type dependent on the account type (commercial, deposit, insurance, investment, line of credit, loan or digital wallet)"
          }
        },
        "description": "Optionally paginated array of transactions"
      },
      "Incomingandoutgoingtransferlimits": {
        "title": "Incomingandoutgoingtransferlimits",
        "type": "object",
        "properties": {
          "out": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timeandoccurrencebasedtransferlimits3"
              },
              {
                "description": "Limits for outgoing transfers from the account"
              }
            ]
          },
          "in": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timeandoccurrencebasedtransferlimits1"
              },
              {
                "description": "Limits for incoming transfers to the account"
              }
            ]
          }
        },
        "description": "The amount limits for incoming and outgoing transfers"
      },
      "Vestingentity": {
        "title": "Vestingentity",
        "type": "object",
        "properties": {
          "vestingDate": {
            "type": "string",
            "description": "Vesting date",
            "format": "date",
            "example": "2021-07-15"
          },
          "symbol": {
            "type": "string",
            "description": "Security symbol"
          },
          "strikePrice": {
            "type": "number",
            "description": "Strike price"
          },
          "vestingPercentage": {
            "type": "number",
            "description": "Vesting percentage"
          },
          "otherVestAmount": {
            "type": "number",
            "description": "Other vested amount"
          },
          "otherVestPercentage": {
            "type": "number",
            "description": "Other vested percentage"
          },
          "vestedBalance": {
            "type": "number",
            "description": "Vested balance"
          },
          "unVestedBalance": {
            "type": "number",
            "description": "Unvested balance"
          },
          "vestedQuantity": {
            "type": "number",
            "description": "Vested quantity"
          },
          "unVestedQuantity": {
            "type": "number",
            "description": "Unvested quantity"
          }
        },
        "description": "Represents the vesting of ownership of an investment account"
      },
      "AccountBillPayStatus": {
        "title": "AccountBillPayStatus",
        "enum": [
          "ACTIVE",
          "AVAILABLE",
          "NOT_AVAILABLE",
          "PENDING"
        ],
        "type": "string",
        "description": "Indicates bill pay capabilities for an account.\n  * `ACTIVE`: Can be used for bill payment\n  * `AVAILABLE`: Account can be requested for bill payment\n  * `NOT_AVAILABLE`: Account cannot participate in bill payment\n  * `PENDING`: Account requested for bill payment, but not available yet"
      },
      "AccountCategorytype": {
        "title": "AccountCategorytype",
        "enum": [
          "ANNUITY_ACCOUNT",
          "COMMERCIAL_ACCOUNT",
          "DEPOSIT_ACCOUNT",
          "DIGITAL_WALLET",
          "INSURANCE_ACCOUNT",
          "INVESTMENT_ACCOUNT",
          "LOAN_ACCOUNT",
          "LOC_ACCOUNT"
        ],
        "type": "string",
        "description": "The category of account"
      },
      "AccountStatus": {
        "title": "AccountStatus",
        "enum": [
          "CLOSED",
          "DELINQUENT",
          "NEGATIVECURRENTBALANCE",
          "OPEN",
          "PAID",
          "PENDINGCLOSE",
          "PENDINGOPEN",
          "RESTRICTED"
        ],
        "type": "string",
        "description": "The status of an account"
      },
      "AssetClass": {
        "title": "AssetClass",
        "enum": [
          "DOMESTICBOND",
          "INTLBOND",
          "INTLSTOCK",
          "LARGESTOCK",
          "MONEYMARKET",
          "OTHER",
          "SMALLSTOCK"
        ],
        "type": "string",
        "description": "The class of an investment asset"
      },
      "AssetTransferType": {
        "title": "AssetTransferType",
        "enum": [
          "CA_ATON",
          "US_ACATS",
          "US_DTC"
        ],
        "type": "string",
        "description": "The possible values for type of asset transfer"
      },
      "BalanceType": {
        "title": "BalanceType",
        "enum": [
          "ASSET",
          "LIABILITY"
        ],
        "type": "string",
        "description": "Type of balance for the account.\n  * `ASSET`: Positive transaction amount increases balance\n  * `LIABILITY`: Positive transaction amount decreases balance"
      },
      "CallType": {
        "title": "CallType",
        "enum": [
          "CALL",
          "MATURITY",
          "PREFUND",
          "PUT"
        ],
        "type": "string",
        "description": "The call type for a stock option"
      },
      "CompoundingPeriod": {
        "title": "CompoundingPeriod",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "Interest compounding Period"
      },
      "CouponMatureFrequency": {
        "title": "CouponMatureFrequency",
        "enum": [
          "ANNUAL",
          "MONTHLY",
          "OTHER",
          "QUARTERLY",
          "SEMIANNUAL"
        ],
        "type": "string",
        "description": "The frequency of a bond's coupon maturity"
      },
      "DebitCreditMemo": {
        "title": "DebitCreditMemo",
        "enum": [
          "CREDIT",
          "DEBIT",
          "MEMO"
        ],
        "type": "string",
        "description": "The posting type of a transaction"
      },
      "DebtClass": {
        "title": "DebtClass",
        "enum": [
          "CORPORATE",
          "MUNICIPAL",
          "OTHER",
          "TREASURY"
        ],
        "type": "string",
        "description": "The classification of a debt instrument"
      },
      "DebtType": {
        "title": "DebtType",
        "enum": [
          "COUPON",
          "ZERO"
        ],
        "type": "string",
        "description": "The type of a debt instrument"
      },
      "DepositTransactionType": {
        "title": "DepositTransactionType",
        "enum": [
          "ADJUSTMENT",
          "ATMDEPOSIT",
          "ATMWITHDRAWAL",
          "BILLPAYMENT",
          "CHECK",
          "DEPOSIT",
          "DIRECTDEPOSIT",
          "DIVIDEND",
          "FEE",
          "INTEREST",
          "POSCREDIT",
          "POSDEBIT",
          "TRANSFER",
          "WITHDRAWAL"
        ],
        "type": "string",
        "description": "The type of a deposit transaction"
      },
      "DigitalWalletTransactionType": {
        "title": "DigitalWalletTransactionType",
        "enum": [
          "ADJUSTMENT",
          "BILL_PAYMENT",
          "CREDIT",
          "DEBIT",
          "DEPOSIT",
          "DIRECT_DEPOSIT",
          "DIVIDEND",
          "FEE",
          "INTEREST",
          "MERCHANT_PAYMENT",
          "MERCHANT_REFUND",
          "TRANSFER_IN",
          "TRANSFER_OUT",
          "WITHDRAWAL"
        ],
        "type": "string",
        "description": "The type of a digital wallet transaction"
      },
      "DocumentStatus": {
        "title": "DocumentStatus",
        "enum": [
          "AVAILABLE",
          "PROCESSING",
          "FAILED"
        ],
        "type": "string",
        "description": "Defines the status of a document"
      },
      "HeldInAccount": {
        "title": "HeldInAccount",
        "enum": [
          "CASH",
          "MARGIN",
          "OTHER",
          "SHORT"
        ],
        "type": "string",
        "description": "The type of holdings of an investment account"
      },
      "HoldingSubType": {
        "title": "HoldingSubType",
        "enum": [
          "CASH",
          "MONEYMARKET"
        ],
        "type": "string",
        "description": "The subtype of an investment holding"
      },
      "HoldingType": {
        "title": "HoldingType",
        "enum": [
          "ANNUITY",
          "BOND",
          "CD",
          "DIGITALASSET",
          "MUTUALFUND",
          "OPTION",
          "OTHER",
          "STOCK"
        ],
        "type": "string",
        "description": "The type of an investment holding\n\n  | Value | Description |\n  |-----|-----|\n  | ANNUITY | Financial product that pays out a fixed stream of payments |\n  | BOND | Debt security as a loan to a government, agency or company, repaid with interest |\n  | CD | Certificate of Deposit, a savings account with a fixed rate and term |\n  | DIGITALASSET | Digital representation of an asset or right that is stored and transferred on a digital network such as the internet or a blockchain |\n  | MUTUALFUND | Pooled collection of assets invested in stocks, bonds, and other securities |\n  | OPTION | The right to buy a specific number of stock shares at a pre-set price |\n  | OTHER | Another type of holding not listed here |\n  | STOCK | A share in the ownership of a company |"
      },
      "IncomeType": {
        "title": "IncomeType",
        "enum": [
          "CGLONG",
          "CGSHORT",
          "MISC"
        ],
        "type": "string",
        "description": "The type of income of an investment transaction"
      },
      "PolicyPremiumTermType": {
        "title": "PolicyPremiumTermType",
        "enum": [
          "ANNUAL",
          "MONTHLY"
        ],
        "type": "string",
        "description": "Payment terms for insurance premiums"
      },
      "InsuranceTransactionType": {
        "title": "InsuranceTransactionType",
        "enum": [
          "ADJUSTMENT",
          "FEE",
          "INTEREST",
          "PAYMENT"
        ],
        "type": "string",
        "description": "The type of an insurance transaction"
      },
      "InterestRateType": {
        "title": "InterestRateType",
        "enum": [
          "FIXED",
          "VARIABLE"
        ],
        "type": "string",
        "description": "The type of interest rate"
      },
      "Investment401kSourceType": {
        "title": "Investment401kSourceType",
        "enum": [
          "AFTERTAX",
          "MATCH",
          "OTHERNONVEST",
          "OTHERVEST",
          "PRETAX",
          "PROFITSHARING",
          "ROLLOVER"
        ],
        "type": "string",
        "description": "The source of a 401k investment"
      },
      "InvestmentBalanceType": {
        "title": "InvestmentBalanceType",
        "enum": [
          "AMOUNT",
          "PERCENTAGE"
        ],
        "type": "string",
        "description": "The type of an investment balance"
      },
      "InvestmentTransactionType": {
        "title": "InvestmentTransactionType",
        "enum": [
          "ADJUSTMENT",
          "AIRDROP",
          "ATM",
          "CASH",
          "CHECK",
          "CLOSURE",
          "CLOSUREOPT",
          "CONTRIBUTION",
          "DEP",
          "DEPOSIT",
          "DIRECTDEBIT",
          "DIRECTDEP",
          "DIV",
          "DIVIDEND",
          "DIVIDENDREINVEST",
          "EXPENSE",
          "FEE",
          "FORKED",
          "INCOME",
          "INTEREST",
          "INVEXPENSE",
          "JRNLFUND",
          "JRNLSEC",
          "MARGININTEREST",
          "MINED",
          "OPTIONEXERCISE",
          "OPTIONEXPIRATION",
          "OTHER",
          "PAYMENT",
          "POS",
          "PURCHASED",
          "PURCHASEDTOCOVER",
          "PURCHASETOCLOSE",
          "PURCHASETOOPEN",
          "REINVESTOFINCOME",
          "REPEATPMT",
          "RETURNOFCAPITAL",
          "SOLD",
          "SOLDTOCLOSE",
          "SOLDTOOPEN",
          "SPLIT",
          "SRVCHG",
          "STAKED",
          "TRANSFER",
          "WITHDRAWAL",
          "XFER"
        ],
        "type": "string",
        "description": "The type of an investment transaction"
      },
      "LoanPaymentFrequency": {
        "title": "LoanPaymentFrequency",
        "enum": [
          "ANNUALLY",
          "BIMONTHLY",
          "BIWEEKLY",
          "FOURWEEKS",
          "MONTHLY",
          "OTHER",
          "QUARTERLY",
          "SEMIANNUALLY",
          "TWICEMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "The frequency of payments on a loan"
      },
      "LoanTransactionType": {
        "title": "LoanTransactionType",
        "enum": [
          "ADJUSTMENT",
          "DOUBLE_UP_PAYMENT",
          "FEE",
          "INTEREST",
          "LUMP_SUM_PAYMENT",
          "PAYMENT",
          "PAYOFF",
          "SKIP_PAYMENT"
        ],
        "type": "string",
        "description": "Defines the type of a loan transaction:\n  * `ADJUSTMENT`: Adjustment or correction\n  * `DOUBLE_UP_PAYMENT`: Additional payment beyond the required payment to reduce the principal\n  * `FEE`: Fee charge. For example, a late payment fee\n  * `INTEREST`: Interest charge\n  * `LUMP_SUM_PAYMENT`: A single payment of money, as opposed to a series of payments made over time\n  * `PAYMENT`: Required payment that satisfies the minimum payment (e.g. principal + interest for mortgages)\n  * `PAYOFF`: Payment that satisfies the terms of the mortgage loan and completely pays off the debt\n  * `SKIP_PAYMENT`: Payment that satisfies deferral of a required payment"
      },
      "LineofCreditTransactionType": {
        "title": "LineofCreditTransactionType",
        "enum": [
          "ADJUSTMENT",
          "CHECK",
          "FEE",
          "INTEREST",
          "PAYMENT",
          "PURCHASE",
          "WITHDRAWAL"
        ],
        "type": "string",
        "description": "The type of a line of credit transaction"
      },
      "MutualFundType": {
        "title": "MutualFundType",
        "enum": [
          "CLOSEEND",
          "OPENEND",
          "OTHER"
        ],
        "type": "string",
        "description": "The type of a mutual fund"
      },
      "OptionType": {
        "title": "OptionType",
        "enum": [
          "CALL",
          "PUT"
        ],
        "type": "string",
        "description": "The type of a stock option"
      },
      "OrderDuration": {
        "title": "OrderDuration",
        "enum": [
          "DAY",
          "GOODTILLCANCEL",
          "IMMEDIATE"
        ],
        "type": "string",
        "description": "The duration of the order"
      },
      "OrderType": {
        "title": "OrderType",
        "enum": [
          "BUY",
          "BUYTOCOVER",
          "BUYTOOPEN",
          "SELL",
          "SELLCLOSE",
          "SELLSHORT",
          "SELLTOCOVER",
          "SELLTOOPEN"
        ],
        "type": "string",
        "description": "The type of the order"
      },
      "PaymentFrequency": {
        "title": "PaymentFrequency",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "The frequency of payments"
      },
      "PaymentNetworkIdentifierType": {
        "title": "PaymentNetworkIdentifierType",
        "enum": [
          "ACCOUNT_NUMBER",
          "TOKENIZED_ACCOUNT_NUMBER"
        ],
        "type": "string",
        "description": "Suggested values for Payment Initiation Identifier Type"
      },
      "PaymentNetworkType": {
        "title": "PaymentNetworkType",
        "enum": [
          "CA_ACSS",
          "CA_LVTS",
          "US_ACH",
          "US_CHIPS",
          "US_FEDNOW",
          "US_FEDWIRE",
          "US_RTP"
        ],
        "type": "string",
        "description": "Suggested values for Payment Network Type.\n\n  | Value | Description |\n  |-----|-----|\n  | CA_ACSS | Automated Clearing House Settlement System |\n  | CA_LVTS | Large-Value Transfer System |\n  | US_ACH | Automated Clearing House |\n  | US_CHIPS | Clearinghouse Interbank Payments System |\n  | US_FEDNOW | Federal Reserve Instant Payment System |\n  | US_FEDWIRE | Fedwire Funds Service |\n  | US_RTP | US Real Time Payments System |"
      },
      "PayoutMode": {
        "title": "PayoutMode",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "Frequency of annuity payments.\n\n  | Value | Description |\n  |-----|-----|\n  | ANNUALLY | Paid Annually |\n  | BIWEEKLY | Paid Bi-weekly |\n  | DAILY | Paid Daily |\n  | MONTHLY | Paid Monthly |\n  | SEMIANNUALLY | Paid Semi-annually |\n  | SEMIMONTHLY | Paid Semi-monthly |"
      },
      "PayoutType": {
        "title": "PayoutType",
        "enum": [
          "DEFERRED",
          "IMMEDIATE"
        ],
        "type": "string",
        "description": "Indicates a type of payout such as immediate or deferred.\n\n  | Value | Description |\n  |-----|-----|\n  | DEFERRED | Deferred payout starts at a predetermined date in the future |\n  | IMMEDIATE | Immediate payout begins paying out shortly after the annuity is purchased |"
      },
      "PeriodCertainType": {
        "title": "PeriodCertainType",
        "enum": [
          "5_YEAR",
          "10_YEAR",
          "20_YEAR",
          "30_YEAR",
          "NONE"
        ],
        "type": "string",
        "description": "The number of modal periods comprising the duration of the certain period of an annuity payout.\n\n  | Value | Description |\n  |-----|-----|\n  | 5_YEAR | Five year duration |\n  | 10_YEAR | Ten year duration |\n  | 20_YEAR | Twenty year duration |\n  | 30_YEAR | Thirty year duration |\n  | NONE | Not a Period Certain |"
      },
      "PolicyProductType": {
        "title": "PolicyProductType",
        "enum": [
          "FIXED",
          "VARIABLE"
        ],
        "type": "string",
        "description": "Distinguishes options in annuity payouts; values are defined by the carrier.\n\n  | Value | Description |\n  |-----|-----|\n  | FIXED | Payout is based on a guaranteed rate of return by the carrier |\n  | VARIABLE | Payout is based on the variable performance of the investments the buyer chooses |"
      },
      "PolicyStatus": {
        "title": "PolicyStatus",
        "enum": [
          "ACTIVE",
          "DEATH_CLAIM_PAID",
          "DEATH_CLAIM_PENDING",
          "EXPIRED",
          "GRACE_PERIOD",
          "LAPSE_PENDING",
          "TERMINATED",
          "WAIVER"
        ],
        "type": "string",
        "description": "The status of an insurance policy account.\n\n  | Value | Description |\n  |-----|-----|\n  | ACTIVE | At least one component of the insurance policy is in force |\n  | DEATH_CLAIM_PAID | Benefits for a death claim have been settled with the insured |\n  | DEATH_CLAIM_PENDING | A death claim has been submitted but not yet settled |\n  | EXPIRED | Nonpayment of premium has exhausted the policy's Grace Period |\n  | GRACE_PERIOD | A premium is due but before lapse in coverage begins |\n  | LAPSE_PENDING | After the Grace Period has been exhausted but before final expiration; during Lapse Pending, policy reinstatement may still be possible |\n  | TERMINATED | Either the insurance company or the insured cancel the coverage of a cancellable insurance policy |\n  | WAIVER | A premium payment is waived under certain conditions due to a payer benefit clause |"
      },
      "PositionType": {
        "title": "PositionType",
        "enum": [
          "LONG",
          "SHORT"
        ],
        "type": "string",
        "description": "The type of an investment position"
      },
      "RewardType": {
        "title": "RewardType",
        "enum": [
          "CASHBACK",
          "MILES",
          "POINTS"
        ],
        "type": "string",
        "description": "The type of the reward balance.  Example: a reward program awarding \"Stars\" for purchases would use the `POINTS` reward type.\n  * `CASHBACK`: Rewards balances enumerated using a monetary amount\n  * `MILES`: Rewards balances enumerated using distance\n  * `POINTS`: Default when a reward balance is not of type CASHBACK or MILES"
      },
      "Secured": {
        "title": "Secured",
        "enum": [
          "COVERED",
          "NAKED"
        ],
        "type": "string",
        "description": "How the option is secured"
      },
      "SecurityCategory": {
        "title": "SecurityCategory",
        "enum": [
          "DEBT_SECURITY",
          "MUTUAL_FUND_SECURITY",
          "OPTION_SECURITY",
          "OTHER_SECURITY",
          "STOCK_SECURITY",
          "SWEEP_SECURITY"
        ],
        "type": "string",
        "description": "The type of security"
      },
      "SecurityIdType": {
        "title": "SecurityIdType",
        "enum": [
          "CINS",
          "CMC",
          "CME",
          "CUSIP",
          "ISIN",
          "ITSA",
          "NASDAQ",
          "SEDOL",
          "SICC",
          "VALOR",
          "WKN"
        ],
        "type": "string",
        "description": "The source of the identifier for a security\n\n  | Value | Description |\n  |-----|-----|\n  | CINS | CUSIP International Numbering System) is a global securities identification numbering system that provides |\n  | CMC | Coin Market Cap |\n  | CME | Chicago Mercantile Exchange |\n  | CUSIP | Committee on Uniform Securities Identification Procedures |\n  | ISIN | International Securities Identification Number |\n  | ITSA | International Securities Identification Number Technical Committee |\n  | NASDAQ | National Association of Securities Dealers Automated Quotations |\n  | SEDOL | Stock Exchange Daily Official List |\n  | SICC | Standard Identification Code for Institutional Investment |\n  | VALOR | SIX Swiss Exchange |\n  | WKN | Wertpapierkennnummer |"
      },
      "SecurityType": {
        "title": "SecurityType",
        "enum": [
          "BOND",
          "DEBT",
          "DIGITALASSET",
          "MUTUALFUND",
          "OPTION",
          "OTHER",
          "STOCK",
          "SWEEP"
        ],
        "type": "string",
        "description": "The type of a security\n\n  | Value | Description |\n  |-----|-----|\n  | BOND | Debt security as a loan to a government, agency or company, repaid with interest |\n  | DEBT | Any type of security that must be paid back in full along with interest |\n  | DIGITALASSET | Digital representation of an asset or right that is stored and transferred on a digital network such as the internet or a blockchain |\n  | MUTUALFUND | Pooled collection of assets invested in stocks, bonds, and other securities |\n  | OPTION | The right to buy a specific number of stock shares at a pre-set price |\n  | OTHER | Another type of security not listed here |\n  | STOCK | A share in the ownership of a company |\n  | SWEEP | Interest-earning account used to collect low- or non-interest-earning cash at close of day |"
      },
      "StockType": {
        "title": "StockType",
        "enum": [
          "COMMON",
          "CONVERTIBLE",
          "OTHER",
          "PREFERRED"
        ],
        "type": "string",
        "description": "The type of a stock instrument"
      },
      "SubAccountType": {
        "title": "SubAccountType",
        "enum": [
          "CASH",
          "MARGIN",
          "OTHER",
          "SHORT"
        ],
        "type": "string",
        "description": "The subtype of an account"
      },
      "TransactionReason": {
        "title": "TransactionReason",
        "enum": [
          "CALL",
          "MATURITY",
          "SELL"
        ],
        "type": "string",
        "description": "The reason for an investment transaction"
      },
      "TransactionStatus": {
        "title": "TransactionStatus",
        "enum": [
          "AUTHORIZATION",
          "MEMO",
          "PENDING",
          "POSTED"
        ],
        "type": "string",
        "description": "The status of a transaction"
      },
      "InvestmentTransferActionDirection": {
        "title": "InvestmentTransferActionDirection",
        "enum": [
          "IN",
          "OUT"
        ],
        "type": "string",
        "description": "Transaction transfer direction"
      },
      "TreasuryManagementType": {
        "title": "TreasuryManagementType",
        "enum": [
          "BAI",
          "BTRS",
          "ISO",
          "SWIFT"
        ],
        "type": "string",
        "description": "The source of Treasury Management account definition; one of BAI, BTRS, ISO, SWIFT"
      },
      "UnitType": {
        "title": "UnitType",
        "enum": [
          "CURRENCY",
          "SHARES"
        ],
        "type": "string",
        "description": "The units of an investment transaction"
      },
      "AccountBillPayStatus2": {
        "title": "AccountBillPayStatus2",
        "enum": [
          "ACTIVE",
          "AVAILABLE",
          "NOT_AVAILABLE",
          "PENDING"
        ],
        "type": "string",
        "description": "Defines account's ability to participate in bill payments"
      },
      "AccountContactentity2": {
        "title": "AccountContactentity2",
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          },
          "holders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountHolderentity"
            },
            "description": "Owners of the account"
          }
        },
        "description": "Contact information associated with this account"
      },
      "AccountHolderRelationship": {
        "title": "AccountHolderRelationship",
        "enum": [
          "AUTHORIZED_USER",
          "BUSINESS",
          "FOR_BENEFIT_OF",
          "FOR_BENEFIT_OF_PRIMARY",
          "FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED",
          "FOR_BENEFIT_OF_SECONDARY",
          "FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED",
          "FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED",
          "POWER_OF_ATTORNEY",
          "PRIMARY",
          "PRIMARY_BORROWER",
          "PRIMARY_JOINT",
          "PRIMARY_JOINT_TENANTS",
          "SECONDARY",
          "SECONDARY_BORROWER",
          "SECONDARY_JOINT",
          "SECONDARY_JOINT_TENANTS",
          "SOLE_OWNER",
          "TRUSTEE",
          "UNIFORM_TRANSFER_TO_MINOR"
        ],
        "type": "string",
        "description": "Type of relationship to the account"
      },
      "AccountHolderRelationship1": {
        "title": "AccountHolderRelationship1",
        "enum": [
          "AUTHORIZED_USER",
          "BUSINESS",
          "FOR_BENEFIT_OF",
          "FOR_BENEFIT_OF_PRIMARY",
          "FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED",
          "FOR_BENEFIT_OF_SECONDARY",
          "FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED",
          "FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED",
          "POWER_OF_ATTORNEY",
          "PRIMARY",
          "PRIMARY_BORROWER",
          "PRIMARY_JOINT",
          "PRIMARY_JOINT_TENANTS",
          "SECONDARY",
          "SECONDARY_BORROWER",
          "SECONDARY_JOINT",
          "SECONDARY_JOINT_TENANTS",
          "SOLE_OWNER",
          "TRUSTEE",
          "UNIFORM_TRANSFER_TO_MINOR"
        ],
        "type": "string",
        "description": "Customer's relationship to the account"
      },
      "AccountStatus2": {
        "title": "AccountStatus2",
        "enum": [
          "CLOSED",
          "DELINQUENT",
          "NEGATIVECURRENTBALANCE",
          "OPEN",
          "PAID",
          "PENDINGCLOSE",
          "PENDINGOPEN",
          "RESTRICTED"
        ],
        "type": "string",
        "description": "Account status. Suggested values are: OPEN, CLOSED, PENDINGOPEN, PENDINGCLOSE, PAID, DELINQUENT, NEGATIVECURRENTBALANCE, RESTRICTED"
      },
      "AccountType": {
        "title": "AccountType",
        "enum": [
          "401A",
          "401K",
          "403B",
          "529",
          "ANNUITY",
          "AUTOLOAN",
          "BROKERAGEPRODUCT",
          "CD",
          "CHARGE",
          "CHECKING",
          "COMMERCIALDEPOSIT",
          "COMMERCIALINVESTMENT",
          "COMMERCIALLINEOFCREDIT",
          "COMMERCIALLOAN",
          "COVERDELL",
          "CREDITCARD",
          "DEFERREDPROFITSHARINGPLAN",
          "DEFINEDBENEFIT",
          "DIGITALASSET",
          "DIGITALWALLET",
          "ESCROW",
          "ESOP",
          "FIXEDANNUITY",
          "GUARDIAN",
          "HOMEEQUITYLOAN",
          "HOMELINEOFCREDIT",
          "INDIVIDUALPENSIONPLAN",
          "INSTALLMENT",
          "INSTITUTIONALTRUST",
          "INVESTMENTACCOUNT",
          "IRA",
          "KEOGH",
          "LIFEINCOMEFUND",
          "LINEOFCREDIT",
          "LOAN",
          "LOCKEDINRETIREMENTACCOUNT",
          "LOCKEDINRETIREMENTINCOMEFUND",
          "LOCKEDINRETIREMENTSAVINGSPLAN",
          "LONGTERMDISABILITY",
          "MILITARYLOAN",
          "MONEYMARKET",
          "MORTGAGE",
          "NONQUALIFIEDPLAN",
          "OTHERDEPOSIT",
          "OTHERINVESTMENT",
          "PERSONALLOAN",
          "POOLEDREGISTEREDPENSIONPLAN",
          "PREPAID",
          "PRESCRIBEDREGISTEREDRETIREMENTINCOMEFUND",
          "REGISTEREDDISABILITYSAVINGSPLAN",
          "REGISTEREDEDUCATIONSAVINGSPLAN",
          "REGISTEREDPENSIONPLAN",
          "REGISTEREDRETIREMENTINCOMEFUND",
          "REGISTEREDRETIREMENTSAVINGSPLAN",
          "RESTRICTEDLIFEINCOMEFUND",
          "RESTRICTEDLOCKEDINSAVINGSPLAN",
          "ROLLOVER",
          "ROTH",
          "SARSEP",
          "SAVINGS",
          "SHORTTERMDISABILITY",
          "SMBLOAN",
          "SPECIFIEDPENSIONPLAN",
          "STUDENTLOAN",
          "TAXABLE",
          "TAXFREESAVINGSACCOUNT",
          "TDA",
          "TERM",
          "TRUST",
          "UGMA",
          "UNIVERSALLIFE",
          "UTMA",
          "VARIABLEANNUITY",
          "WHOLELIFE"
        ],
        "type": "string",
        "description": "Account type"
      },
      "AssetClass2": {
        "title": "AssetClass2",
        "enum": [
          "DOMESTICBOND",
          "INTLBOND",
          "INTLSTOCK",
          "LARGESTOCK",
          "MONEYMARKET",
          "OTHER",
          "SMALLSTOCK"
        ],
        "type": "string",
        "description": "The asset class for this allocation"
      },
      "AssetTransferType2": {
        "title": "AssetTransferType2",
        "enum": [
          "CA_ATON",
          "US_ACATS",
          "US_DTC"
        ],
        "type": "string",
        "description": "Type of asset transfer"
      },
      "BalanceType2": {
        "title": "BalanceType2",
        "enum": [
          "ASSET",
          "LIABILITY"
        ],
        "type": "string",
        "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)"
      },
      "BusinessCustomerentity": {
        "title": "BusinessCustomerentity",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of business customer"
          },
          "registeredAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerNameentity1"
            },
            "description": "A list of registered agents who act on behalf of the business customer"
          },
          "registeredId": {
            "type": "string",
            "description": "The registered tax identification number (TIN) or other identifier of business customer"
          },
          "industryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Industrycode"
              },
              {
                "description": "Industry code and type"
              }
            ]
          },
          "domicile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Domicileentity"
              },
              {
                "description": "The country and region of the business customer's location"
              }
            ]
          }
        },
        "description": "The business customer information, only used if 'type' is 'BUSINESS'."
      },
      "BusinessorConsumerType": {
        "title": "BusinessorConsumerType",
        "enum": [
          "BUSINESS",
          "CONSUMER"
        ],
        "type": "string",
        "description": "Type of entity. One of BUSINESS or CONSUMER"
      },
      "BusinessorConsumerType1": {
        "title": "BusinessorConsumerType1",
        "enum": [
          "BUSINESS",
          "CONSUMER"
        ],
        "type": "string",
        "description": "BUSINESS or CONSUMER membership"
      },
      "CallType2": {
        "title": "CallType2",
        "enum": [
          "CALL",
          "MATURITY",
          "PREFUND",
          "PUT"
        ],
        "type": "string",
        "description": "Type of next call. One of CALL, PUT, PREFUND, MATURITY"
      },
      "CardArtentity2": {
        "title": "CardArtentity2",
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Display label for the specific image"
          },
          "imageUri": {
            "type": "string",
            "description": "The [URI](https://datatracker.ietf.org/doc/html/rfc2397) link of a PNG, JPG or GIF image with proportions defined by [ISO 8710 ID-1](https://en.wikipedia.org/wiki/ISO/IEC_7810) with 340x210 ratio and width no greater than 512 pixels. The image at this URI must be accessible at all times, with no additional authentication headers. Typically this is an image resource located in the data provider's public web site or Content Delivery Network"
          }
        },
        "description": "Any Art associated to the Card related to the account"
      },
      "CommercialCodeentity1": {
        "title": "CommercialCodeentity1",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TreasuryManagementType"
              },
              {
                "description": "The source of Treasury Management account definition; one of BAI, BTRS, ISO, SWIFT"
              }
            ]
          },
          "code": {
            "type": "string",
            "description": "The code of the Treasury Management defined field"
          }
        },
        "description": "The code for a specific treasury management defined field"
      },
      "CompoundingPeriod2": {
        "title": "CompoundingPeriod2",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "DAILY, WEEKLY, BIWEEKLY, SEMIMONTHLY, MONTHLY, SEMIANNUALLY, ANNUALLY"
      },
      "CouponMatureFrequency2": {
        "title": "CouponMatureFrequency2",
        "enum": [
          "ANNUAL",
          "MONTHLY",
          "OTHER",
          "QUARTERLY",
          "SEMIANNUAL"
        ],
        "type": "string",
        "description": "When coupons mature. One of MONTHLY, QUARTERLY,  SEMIANNUAL, ANNUAL, OTHER"
      },
      "Currencyentity1": {
        "title": "Currencyentity1",
        "type": "object",
        "properties": {
          "currencyRate": {
            "type": "number",
            "description": "Currency rate between original and converted currency"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "originalCurrencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode1"
              },
              {
                "description": "Original ISO 4217 currency code"
              }
            ]
          }
        },
        "description": "Currency information if it is different from Account entity"
      },
      "Currencyentity2": {
        "title": "Currencyentity2",
        "type": "object",
        "properties": {
          "currencyRate": {
            "type": "number",
            "description": "Currency rate between original and converted currency"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "originalCurrencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode1"
              },
              {
                "description": "Original ISO 4217 currency code"
              }
            ]
          }
        },
        "description": "Currency if different from that of account"
      },
      "Currencyentity4": {
        "title": "Currencyentity4",
        "type": "object",
        "properties": {
          "currencyRate": {
            "type": "number",
            "description": "Currency rate between original and converted currency"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "originalCurrencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode1"
              },
              {
                "description": "Original ISO 4217 currency code"
              }
            ]
          }
        },
        "description": "Account currency"
      },
      "CustomerNameentity": {
        "title": "CustomerNameentity",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "description": "First name"
          },
          "middle": {
            "type": "string",
            "description": "Middle initial"
          },
          "last": {
            "type": "string",
            "description": "Last name"
          },
          "suffix": {
            "type": "string",
            "description": "Generational or academic suffix"
          },
          "prefix": {
            "type": "string",
            "description": "Name prefix, e.g. Mr."
          },
          "company": {
            "type": "string",
            "description": "Company name"
          }
        },
        "description": "The customer's name"
      },
      "CustomerNameentity1": {
        "title": "CustomerNameentity1",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "description": "First name"
          },
          "middle": {
            "type": "string",
            "description": "Middle initial"
          },
          "last": {
            "type": "string",
            "description": "Last name"
          },
          "suffix": {
            "type": "string",
            "description": "Generational or academic suffix"
          },
          "prefix": {
            "type": "string",
            "description": "Name prefix, e.g. Mr."
          },
          "company": {
            "type": "string",
            "description": "Company name"
          }
        },
        "description": "The name of an individual in their role as a customer"
      },
      "CustomertoAccountRelationshipentity": {
        "title": "CustomertoAccountRelationshipentity",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Account ID of the related account"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to the account, or to invoke other APIs"
          },
          "relationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountHolderRelationship"
              },
              {
                "description": "Type of relationship to the account"
              }
            ]
          }
        },
        "description": "Describes an account related to a customer"
      },
      "DebitCreditMemo2": {
        "title": "DebitCreditMemo2",
        "enum": [
          "CREDIT",
          "DEBIT",
          "MEMO"
        ],
        "type": "string",
        "description": "DEBIT, CREDIT, MEMO"
      },
      "DebtClass2": {
        "title": "DebtClass2",
        "enum": [
          "CORPORATE",
          "MUNICIPAL",
          "OTHER",
          "TREASURY"
        ],
        "type": "string",
        "description": "Classification of debt. One of TREASURY, MUNICIPAL, CORPORATE, OTHER"
      },
      "DebtType2": {
        "title": "DebtType2",
        "enum": [
          "COUPON",
          "ZERO"
        ],
        "type": "string",
        "description": "Debt type. One of COUPON, ZERO"
      },
      "DeliveryAddress": {
        "title": "DeliveryAddress",
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 1"
          },
          "line2": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 2"
          },
          "line3": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 3"
          },
          "city": {
            "maxLength": 64,
            "type": "string",
            "description": "City"
          },
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
          },
          "postalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country code"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddressType"
              },
              {
                "description": "Type of address location. One of BUSINESS, DELIVERY, HOME, MAILING"
              }
            ]
          }
        },
        "description": "A delivery address and its location type"
      },
      "DeliveryAddressType": {
        "title": "DeliveryAddressType",
        "enum": [
          "BUSINESS",
          "DELIVERY",
          "HOME",
          "MAILING"
        ],
        "type": "string",
        "description": "Type of address location. One of BUSINESS, DELIVERY, HOME, MAILING"
      },
      "DepositTransactionType2": {
        "title": "DepositTransactionType2",
        "enum": [
          "ADJUSTMENT",
          "ATMDEPOSIT",
          "ATMWITHDRAWAL",
          "BILLPAYMENT",
          "CHECK",
          "DEPOSIT",
          "DIRECTDEPOSIT",
          "DIVIDEND",
          "FEE",
          "INTEREST",
          "POSCREDIT",
          "POSDEBIT",
          "TRANSFER",
          "WITHDRAWAL"
        ],
        "type": "string",
        "description": "CHECK, WITHDRAWAL, TRANSFER, POSDEBIT, ATMWITHDRAWAL, BILLPAYMENT, FEE, DEPOSIT, ADJUSTMENT, INTEREST, DIVIDEND, DIRECTDEPOSIT, ATMDEPOSIT, POSCREDIT"
      },
      "DigitalWalletTransactionType2": {
        "title": "DigitalWalletTransactionType2",
        "enum": [
          "ADJUSTMENT",
          "BILL_PAYMENT",
          "CREDIT",
          "DEBIT",
          "DEPOSIT",
          "DIRECT_DEPOSIT",
          "DIVIDEND",
          "FEE",
          "INTEREST",
          "MERCHANT_PAYMENT",
          "MERCHANT_REFUND",
          "TRANSFER_IN",
          "TRANSFER_OUT",
          "WITHDRAWAL"
        ],
        "type": "string",
        "description": "ADJUSTMENT, BILL_PAYMENT, CREDIT, DEBIT, DEPOSIT, DIRECT_DEPOSIT, DIVIDEND, FEE, INTEREST, MERCHANT_PAYMENT, MERCHANT_REFUND, TRANSFER_IN, TRANSFER_OUT, WITHDRAWAL"
      },
      "DocumentStatus2": {
        "title": "DocumentStatus2",
        "enum": [
          "AVAILABLE",
          "PROCESSING",
          "FAILED"
        ],
        "type": "string",
        "description": "Availability status of statement"
      },
      "Domicileentity": {
        "title": "Domicileentity",
        "type": "object",
        "properties": {
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "Country sub-division; state or province or territory"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode2"
              },
              {
                "description": "ISO 3166 Country Code"
              }
            ]
          }
        },
        "description": "The country and region of the business customer's location"
      },
      "Domicileentity1": {
        "title": "Domicileentity1",
        "type": "object",
        "properties": {
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "Country sub-division; state or province or territory"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode2"
              },
              {
                "description": "ISO 3166 Country Code"
              }
            ]
          }
        },
        "description": "The country and region of the account's legal jurisdiction"
      },
      "FIAttributeentity": {
        "title": "FIAttributeentity",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of attribute"
          },
          "value": {
            "type": "string",
            "description": "Value of attribute"
          }
        },
        "description": "Financial Institution provider-specific attribute"
      },
      "HeldInAccount2": {
        "title": "HeldInAccount2",
        "enum": [
          "CASH",
          "MARGIN",
          "OTHER",
          "SHORT"
        ],
        "type": "string",
        "description": "Sub-account CASH, MARGIN, SHORT, OTHER"
      },
      "HoldingSubType2": {
        "title": "HoldingSubType2",
        "enum": [
          "CASH",
          "MONEYMARKET"
        ],
        "type": "string",
        "description": "MONEYMARKET, CASH"
      },
      "HoldingType2": {
        "title": "HoldingType2",
        "enum": [
          "ANNUITY",
          "BOND",
          "CD",
          "DIGITALASSET",
          "MUTUALFUND",
          "OPTION",
          "OTHER",
          "STOCK"
        ],
        "type": "string",
        "description": "ANNUITY, BOND, CD, DIGITALASSET, MUTUALFUND, OPTION, OTHER, STOCK"
      },
      "IncomeType2": {
        "title": "IncomeType2",
        "enum": [
          "CGLONG",
          "CGSHORT",
          "MISC"
        ],
        "type": "string",
        "description": "Type of investment income. One of CGLONG (capital gains-long term), CGSHORT (capital gains-short term), MISC"
      },
      "Incomingandoutgoingtransferlimits2": {
        "title": "Incomingandoutgoingtransferlimits2",
        "type": "object",
        "properties": {
          "out": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timeandoccurrencebasedtransferlimits3"
              },
              {
                "description": "Limits for outgoing transfers from the account"
              }
            ]
          },
          "in": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Timeandoccurrencebasedtransferlimits1"
              },
              {
                "description": "Limits for incoming transfers to the account"
              }
            ]
          }
        },
        "description": "The amount limits for transfers"
      },
      "IndustryClassificationSystem": {
        "title": "IndustryClassificationSystem",
        "enum": [
          "BCLASS",
          "BICS",
          "GICS",
          "MOODYS",
          "NAICS",
          "OTHER",
          "SIC"
        ],
        "type": "string",
        "description": "Code type"
      },
      "Industrycode": {
        "title": "Industrycode",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IndustryClassificationSystem"
              },
              {
                "description": "Code type"
              }
            ]
          },
          "code": {
            "type": "string",
            "description": "Code value"
          }
        },
        "description": "Industry code and type"
      },
      "InterestRateType2": {
        "title": "InterestRateType2",
        "enum": [
          "FIXED",
          "VARIABLE"
        ],
        "type": "string",
        "description": "FIXED or VARIABLE"
      },
      "Investment401kSourceType1": {
        "title": "Investment401kSourceType1",
        "enum": [
          "AFTERTAX",
          "MATCH",
          "OTHERNONVEST",
          "OTHERVEST",
          "PRETAX",
          "PROFITSHARING",
          "ROLLOVER"
        ],
        "type": "string",
        "description": "For 401(k) accounts, source of money for this order. PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST. Default if not present is OTHERNONVEST"
      },
      "Investment401kSourceType2": {
        "title": "Investment401kSourceType2",
        "enum": [
          "AFTERTAX",
          "MATCH",
          "OTHERNONVEST",
          "OTHERVEST",
          "PRETAX",
          "PROFITSHARING",
          "ROLLOVER"
        ],
        "type": "string",
        "description": "Source of money. One of PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST"
      },
      "Investment401kSourceType4": {
        "title": "Investment401kSourceType4",
        "enum": [
          "AFTERTAX",
          "MATCH",
          "OTHERNONVEST",
          "OTHERVEST",
          "PRETAX",
          "PROFITSHARING",
          "ROLLOVER"
        ],
        "type": "string",
        "description": "Source for money for this security. One of PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST"
      },
      "InvestmentBalanceType2": {
        "title": "InvestmentBalanceType2",
        "enum": [
          "AMOUNT",
          "PERCENTAGE"
        ],
        "type": "string",
        "description": "AMOUNT, PERCENTAGE"
      },
      "InvestmentTransactionType2": {
        "title": "InvestmentTransactionType2",
        "enum": [
          "ADJUSTMENT",
          "AIRDROP",
          "ATM",
          "CASH",
          "CHECK",
          "CLOSURE",
          "CLOSUREOPT",
          "CONTRIBUTION",
          "DEP",
          "DEPOSIT",
          "DIRECTDEBIT",
          "DIRECTDEP",
          "DIV",
          "DIVIDEND",
          "DIVIDENDREINVEST",
          "EXPENSE",
          "FEE",
          "FORKED",
          "INCOME",
          "INTEREST",
          "INVEXPENSE",
          "JRNLFUND",
          "JRNLSEC",
          "MARGININTEREST",
          "MINED",
          "OPTIONEXERCISE",
          "OPTIONEXPIRATION",
          "OTHER",
          "PAYMENT",
          "POS",
          "PURCHASED",
          "PURCHASEDTOCOVER",
          "PURCHASETOCLOSE",
          "PURCHASETOOPEN",
          "REINVESTOFINCOME",
          "REPEATPMT",
          "RETURNOFCAPITAL",
          "SOLD",
          "SOLDTOCLOSE",
          "SOLDTOOPEN",
          "SPLIT",
          "SRVCHG",
          "STAKED",
          "TRANSFER",
          "WITHDRAWAL",
          "XFER"
        ],
        "type": "string",
        "description": "PURCHASED, SOLD, PURCHASEDTOCOVER, ADJUSTMENT, PURCHASETOOPEN, PURCHASETOCLOSE, SOLDTOOPEN, SOLDTOCLOSE, INTEREST, MARGININTEREST, REINVESTOFINCOME, RETURNOFCAPITAL, TRANSFER, CONTRIBUTION, FEE, OPTIONEXERCISE, OPTIONEXPIRATION, DIVIDEND, DIVIDENDREINVEST, SPLIT, CLOSURE, INCOME, EXPENSE, CLOSUREOPT, INVEXPENSE, JRNLSEC, JRNLFUND, OTHER, DIV, SRVCHG, DEP, DEPOSIT, ATM, POS, XFER, CHECK, PAYMENT, CASH, DIRECTDEP, DIRECTDEBIT, REPEATPMT"
      },
      "InvestmentTransferActionDirection2": {
        "title": "InvestmentTransferActionDirection2",
        "enum": [
          "IN",
          "OUT"
        ],
        "type": "string",
        "description": "Transfer direction"
      },
      "ISO3166CountryCode": {
        "title": "ISO3166CountryCode",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ],
        "type": "string",
        "description": "Country code"
      },
      "ISO4217CurrencyCode": {
        "title": "ISO4217CurrencyCode",
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UYW",
          "UZS",
          "VED",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XSU",
          "XTS",
          "XUA",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWG",
          "ZWL"
        ],
        "type": "string",
        "description": "ISO 4217 currency code"
      },
      "ISO4217CurrencyCode1": {
        "title": "ISO4217CurrencyCode1",
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UYW",
          "UZS",
          "VED",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XSU",
          "XTS",
          "XUA",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWG",
          "ZWL"
        ],
        "type": "string",
        "description": "Original ISO 4217 currency code"
      },
      "ISO3166CountryCode1": {
        "title": "ISO3166CountryCode1",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ],
        "type": "string",
        "description": "Country originating the Customer's taxId element"
      },
      "ISO3166CountryCode2": {
        "title": "ISO3166CountryCode2",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ],
        "type": "string",
        "description": "ISO 3166 Country Code"
      },
      "ISO4217CurrencyCode2": {
        "title": "ISO4217CurrencyCode2",
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UYW",
          "UZS",
          "VED",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XSU",
          "XTS",
          "XUA",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWG",
          "ZWL"
        ],
        "type": "string",
        "description": "The ISO 4217 code of the foreign currency"
      },
      "LineofCreditTransactionType2": {
        "title": "LineofCreditTransactionType2",
        "enum": [
          "ADJUSTMENT",
          "CHECK",
          "FEE",
          "INTEREST",
          "PAYMENT",
          "PURCHASE",
          "WITHDRAWAL"
        ],
        "type": "string",
        "description": "CHECK, WITHDRAWAL, PAYMENT, FEE, ADJUSTMENT, INTEREST, PURCHASE"
      },
      "LoanPaymentFrequency2": {
        "title": "LoanPaymentFrequency2",
        "enum": [
          "ANNUALLY",
          "BIMONTHLY",
          "BIWEEKLY",
          "FOURWEEKS",
          "MONTHLY",
          "OTHER",
          "QUARTERLY",
          "SEMIANNUALLY",
          "TWICEMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "WEEKLY, BIWEEKLY, TWICEMONTHLY, MONTHLY, FOURWEEKS, BIMONTHLY, QUARTERLY, SEMIANNUALLY, ANNUALLY, OTHER"
      },
      "LoanTransactionType2": {
        "title": "LoanTransactionType2",
        "enum": [
          "ADJUSTMENT",
          "DOUBLE_UP_PAYMENT",
          "FEE",
          "INTEREST",
          "LUMP_SUM_PAYMENT",
          "PAYMENT",
          "PAYOFF",
          "SKIP_PAYMENT"
        ],
        "type": "string",
        "description": "PAYMENT, FEE, ADJUSTMENT, INTEREST"
      },
      "MutualFundType2": {
        "title": "MutualFundType2",
        "enum": [
          "CLOSEEND",
          "OPENEND",
          "OTHER"
        ],
        "type": "string",
        "description": "Mutual fund type. One of OPENEND, CLOSEEND, OTHER"
      },
      "OccurrencebasedlimitsforaPaymentNetwork2": {
        "title": "OccurrencebasedlimitsforaPaymentNetwork2",
        "type": "object",
        "properties": {
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account using the timeframe limits"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account using the timeframe limits"
          }
        },
        "description": "The transfer limits taking effect from all the timeframe limits"
      },
      "OptionType2": {
        "title": "OptionType2",
        "enum": [
          "CALL",
          "PUT"
        ],
        "type": "string",
        "description": "Option type. One of PUT, CALL"
      },
      "OrderDuration2": {
        "title": "OrderDuration2",
        "enum": [
          "DAY",
          "GOODTILLCANCEL",
          "IMMEDIATE"
        ],
        "type": "string",
        "description": "This order is good for DAY, GOODTILLCANCEL, IMMEDIATE"
      },
      "OrderType2": {
        "title": "OrderType2",
        "enum": [
          "BUY",
          "BUYTOCOVER",
          "BUYTOOPEN",
          "SELL",
          "SELLCLOSE",
          "SELLSHORT",
          "SELLTOCOVER",
          "SELLTOOPEN"
        ],
        "type": "string",
        "description": "Type of order. One of BUY, SELL, BUYTOCOVER, BUYTOOPEN, SELLTOCOVER, SELLTOOPEN,  SELLSHORT, SELLCLOSE"
      },
      "PageMetadata": {
        "title": "PageMetadata",
        "type": "object",
        "properties": {
          "nextOffset": {
            "type": "string",
            "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific",
            "example": "2"
          },
          "prevOffset": {
            "type": "string",
            "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific",
            "example": "1"
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of elements",
            "format": "int32",
            "example": 3
          }
        },
        "description": "Offset IDs for navigating result sets"
      },
      "PageMetadataLinks": {
        "title": "PageMetadataLinks",
        "type": "object",
        "properties": {
          "next": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving next dataset"
              }
            ]
          },
          "prev": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving previous dataset"
              }
            ]
          }
        },
        "description": "Resource URLs for navigating result sets"
      },
      "PaymentDetailsentity": {
        "title": "PaymentDetailsentity",
        "type": "object",
        "properties": {
          "principalAmount": {
            "type": "number",
            "description": "The amount of payment applied to principal"
          },
          "interestAmount": {
            "type": "number",
            "description": "The amount of payment applied to interest"
          },
          "insuranceAmount": {
            "type": "number",
            "description": "The amount of payment applied to life/health/accident insurance on the loan"
          },
          "escrowAmount": {
            "type": "number",
            "description": "The amount of payment applied to escrow"
          },
          "pmiAmount": {
            "type": "number",
            "description": "The amount of payment applied to PMI"
          },
          "feesAmount": {
            "type": "number",
            "description": "The amount of payment applied to fees"
          }
        },
        "description": "Breakdown of payment details"
      },
      "PaymentFrequency1": {
        "title": "PaymentFrequency1",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "DAILY, WEEKLY, BIWEEKLY, SEMIMONTHLY, MONTHLY, SEMIANNUALLY, ANNUALLY"
      },
      "PaymentFrequency3": {
        "title": "PaymentFrequency3",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "ANNUALLY, BIWEEKLY, DAILY, MONTHLY, SEMIANNUALLY, SEMIMONTHLY, WEEKLY"
      },
      "PaymentNetworkIdentifierType1": {
        "title": "PaymentNetworkIdentifierType1",
        "enum": [
          "ACCOUNT_NUMBER",
          "TOKENIZED_ACCOUNT_NUMBER"
        ],
        "type": "string",
        "description": "Type of identifier"
      },
      "PaymentNetworkIdentifierType3": {
        "title": "PaymentNetworkIdentifierType3",
        "enum": [
          "ACCOUNT_NUMBER",
          "TOKENIZED_ACCOUNT_NUMBER"
        ],
        "type": "string",
        "description": "Type of identifier, ACCOUNT_NUMBER or TOKENIZED_ACCOUNT_NUMBER"
      },
      "PaymentNetworkType2": {
        "title": "PaymentNetworkType2",
        "enum": [
          "CA_ACSS",
          "CA_LVTS",
          "US_ACH",
          "US_CHIPS",
          "US_FEDNOW",
          "US_FEDWIRE",
          "US_RTP"
        ],
        "type": "string",
        "description": "Type of Canadian or U.S. payment network, CA_ACSS, CA_LVTS, US_ACH, US_CHIPS, US_FEDWIRE, US_RTP"
      },
      "PayoutMode2": {
        "title": "PayoutMode2",
        "enum": [
          "ANNUALLY",
          "BIWEEKLY",
          "DAILY",
          "MONTHLY",
          "SEMIANNUALLY",
          "SEMIMONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "Frequency of annuity payments"
      },
      "PayoutType2": {
        "title": "PayoutType2",
        "enum": [
          "DEFERRED",
          "IMMEDIATE"
        ],
        "type": "string",
        "description": "Indicates type of payout such as immediate or deferred"
      },
      "PeriodCertainType2": {
        "title": "PeriodCertainType2",
        "enum": [
          "5_YEAR",
          "10_YEAR",
          "20_YEAR",
          "30_YEAR",
          "NONE"
        ],
        "type": "string",
        "description": "The number of modal periods comprising the duration of the certain period of an annuity payout"
      },
      "PolicyPremiumTermType2": {
        "title": "PolicyPremiumTermType2",
        "enum": [
          "ANNUAL",
          "MONTHLY"
        ],
        "type": "string",
        "description": "The payment term for the premium"
      },
      "PolicyProductType2": {
        "title": "PolicyProductType2",
        "enum": [
          "FIXED",
          "VARIABLE"
        ],
        "type": "string",
        "description": "The type of annuity product, e.g. Fixed or Variable"
      },
      "PolicyStatus2": {
        "title": "PolicyStatus2",
        "enum": [
          "ACTIVE",
          "DEATH_CLAIM_PAID",
          "DEATH_CLAIM_PENDING",
          "EXPIRED",
          "GRACE_PERIOD",
          "LAPSE_PENDING",
          "TERMINATED",
          "WAIVER"
        ],
        "type": "string",
        "description": "The status of an insurance policy account"
      },
      "PositionType1": {
        "title": "PositionType1",
        "enum": [
          "LONG",
          "SHORT"
        ],
        "type": "string",
        "description": "LONG, SHORT"
      },
      "ResultType": {
        "title": "ResultType",
        "enum": [
          "details",
          "lightweight"
        ],
        "type": "string",
        "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity."
      },
      "RewardType2": {
        "title": "RewardType2",
        "enum": [
          "CASHBACK",
          "MILES",
          "POINTS"
        ],
        "type": "string",
        "description": "The type of the reward balance - CASHBACK, MILES, POINTS"
      },
      "Secured2": {
        "title": "Secured2",
        "enum": [
          "COVERED",
          "NAKED"
        ],
        "type": "string",
        "description": "How the option is secured. One of NAKED, COVERED"
      },
      "SecurityIdType1": {
        "title": "SecurityIdType1",
        "enum": [
          "CINS",
          "CMC",
          "CME",
          "CUSIP",
          "ISIN",
          "ITSA",
          "NASDAQ",
          "SEDOL",
          "SICC",
          "VALOR",
          "WKN"
        ],
        "type": "string",
        "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN"
      },
      "SecurityType2": {
        "title": "SecurityType2",
        "enum": [
          "BOND",
          "DEBT",
          "DIGITALASSET",
          "MUTUALFUND",
          "OPTION",
          "OTHER",
          "STOCK",
          "SWEEP"
        ],
        "type": "string",
        "description": "BOND, DEBT, DIGITALASSET, MUTUALFUND, OPTION, OTHER, STOCK, SWEEP"
      },
      "StockType2": {
        "title": "StockType2",
        "enum": [
          "COMMON",
          "CONVERTIBLE",
          "OTHER",
          "PREFERRED"
        ],
        "type": "string",
        "description": "COMMON, PREFERRED, CONVERTIBLE, OTHER"
      },
      "SubAccountType1": {
        "title": "SubAccountType1",
        "enum": [
          "CASH",
          "MARGIN",
          "OTHER",
          "SHORT"
        ],
        "type": "string",
        "description": "Sub-account security Type. One of CASH, MARGIN, SHORT, OTHERS"
      },
      "SubAccountType2": {
        "title": "SubAccountType2",
        "enum": [
          "CASH",
          "MARGIN",
          "OTHER",
          "SHORT"
        ],
        "type": "string",
        "description": "From which account money came in. One of CASH, MARGIN, SHORT, OTHERS"
      },
      "SubAccountType4": {
        "title": "SubAccountType4",
        "enum": [
          "CASH",
          "MARGIN",
          "OTHER",
          "SHORT"
        ],
        "type": "string",
        "description": "CASH, MARGIN, SHORT, OTHER"
      },
      "TelephoneNumber": {
        "title": "TelephoneNumber",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberType"
              },
              {
                "description": "Type of phone number: HOME, BUSINESS, CELL, FAX"
              }
            ]
          },
          "country": {
            "maxLength": 3,
            "type": "string",
            "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164"
          },
          "number": {
            "maxLength": 15,
            "pattern": "\\d+",
            "type": "string",
            "description": "Telephone subscriber number defined by ITU-T recommendation E.164"
          }
        },
        "description": "Standard for international phone numbers"
      },
      "TelephoneNumberType": {
        "title": "TelephoneNumberType",
        "enum": [
          "BUSINESS",
          "CELL",
          "FAX",
          "HOME"
        ],
        "type": "string",
        "description": "Type of phone number: HOME, BUSINESS, CELL, FAX"
      },
      "Timeandoccurrencebasedtransferlimits1": {
        "title": "Timeandoccurrencebasedtransferlimits1",
        "type": "object",
        "properties": {
          "day": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork5"
              },
              {
                "description": "The transfer limits for the current day"
              }
            ]
          },
          "week": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork1"
              },
              {
                "description": "The transfer limits for the current week"
              }
            ]
          },
          "month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork2"
              },
              {
                "description": "The transfer limits for the current month"
              }
            ]
          },
          "year": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork3"
              },
              {
                "description": "The transfer limits for the current year"
              }
            ]
          },
          "transaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OccurrencebasedlimitsforaPaymentNetwork2"
              },
              {
                "description": "The transfer limits taking effect from all the timeframe limits"
              }
            ]
          }
        },
        "description": "Limits for incoming transfers to the account"
      },
      "Timeandoccurrencebasedtransferlimits3": {
        "title": "Timeandoccurrencebasedtransferlimits3",
        "type": "object",
        "properties": {
          "day": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork5"
              },
              {
                "description": "The transfer limits for the current day"
              }
            ]
          },
          "week": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork1"
              },
              {
                "description": "The transfer limits for the current week"
              }
            ]
          },
          "month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork2"
              },
              {
                "description": "The transfer limits for the current month"
              }
            ]
          },
          "year": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeframebasedlimitsforaPaymentNetwork3"
              },
              {
                "description": "The transfer limits for the current year"
              }
            ]
          },
          "transaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OccurrencebasedlimitsforaPaymentNetwork2"
              },
              {
                "description": "The transfer limits taking effect from all the timeframe limits"
              }
            ]
          }
        },
        "description": "Limits for outgoing transfers from the account"
      },
      "TimeframebasedlimitsforaPaymentNetwork1": {
        "title": "TimeframebasedlimitsforaPaymentNetwork1",
        "type": "object",
        "properties": {
          "resetsOn": {
            "type": "string",
            "description": "Date/time at which this timeframe will reset next",
            "format": "date-time"
          },
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "maxOccurrence": {
            "type": "integer",
            "description": "Maximum number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          },
          "remainingOccurrence": {
            "type": "integer",
            "description": "Remaining number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          }
        },
        "description": "The transfer limits for the current week"
      },
      "TimeframebasedlimitsforaPaymentNetwork2": {
        "title": "TimeframebasedlimitsforaPaymentNetwork2",
        "type": "object",
        "properties": {
          "resetsOn": {
            "type": "string",
            "description": "Date/time at which this timeframe will reset next",
            "format": "date-time"
          },
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "maxOccurrence": {
            "type": "integer",
            "description": "Maximum number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          },
          "remainingOccurrence": {
            "type": "integer",
            "description": "Remaining number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          }
        },
        "description": "The transfer limits for the current month"
      },
      "TimeframebasedlimitsforaPaymentNetwork3": {
        "title": "TimeframebasedlimitsforaPaymentNetwork3",
        "type": "object",
        "properties": {
          "resetsOn": {
            "type": "string",
            "description": "Date/time at which this timeframe will reset next",
            "format": "date-time"
          },
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "maxOccurrence": {
            "type": "integer",
            "description": "Maximum number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          },
          "remainingOccurrence": {
            "type": "integer",
            "description": "Remaining number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          }
        },
        "description": "The transfer limits for the current year"
      },
      "TimeframebasedlimitsforaPaymentNetwork5": {
        "title": "TimeframebasedlimitsforaPaymentNetwork5",
        "type": "object",
        "properties": {
          "resetsOn": {
            "type": "string",
            "description": "Date/time at which this timeframe will reset next",
            "format": "date-time"
          },
          "transferMaxAmount": {
            "type": "number",
            "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "transferRemainingAmount": {
            "type": "number",
            "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe"
          },
          "maxOccurrence": {
            "type": "integer",
            "description": "Maximum number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          },
          "remainingOccurrence": {
            "type": "integer",
            "description": "Remaining number of transfers that can be made in this direction for this timeframe",
            "format": "int32"
          }
        },
        "description": "The transfer limits for the current day"
      },
      "TransactionReason2": {
        "title": "TransactionReason2",
        "enum": [
          "CALL",
          "MATURITY",
          "SELL"
        ],
        "type": "string",
        "description": "Reason for this transaction; CALL (the debt was called), SELL (the debt was sold), MATURITY (the debt reached maturity)"
      },
      "TransactionRewardentity2": {
        "title": "TransactionRewardentity2",
        "type": "object",
        "properties": {
          "categoryId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long term persistent identity of the reward category. This ID is mapped to a category definition returned by calling the getRewardProgramCategories operation"
          },
          "accrued": {
            "type": "number",
            "description": "Reward units accrued on this transaction"
          },
          "adjusted": {
            "type": "number",
            "description": "Reward units adjusted on this transaction"
          }
        },
        "description": "Rewards earned with this transaction"
      },
      "TransactionStatus2": {
        "title": "TransactionStatus2",
        "enum": [
          "AUTHORIZATION",
          "MEMO",
          "PENDING",
          "POSTED"
        ],
        "type": "string",
        "description": "PENDING, MEMO, POSTED, AUTHORIZATION"
      },
      "UnitType1": {
        "title": "UnitType1",
        "enum": [
          "CURRENCY",
          "SHARES"
        ],
        "type": "string",
        "description": "SHARES, CURRENCY"
      },
      "UnitType3": {
        "title": "UnitType3",
        "enum": [
          "CURRENCY",
          "SHARES"
        ],
        "type": "string",
        "description": "Type of unit. One of SHARES, CURRENCY"
      },
      "CustomersEntity": {
        "title": "CustomersEntity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Information required to paginate results"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks1"
              },
              {
                "description": "Links used to paginate results"
              }
            ]
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customerentity"
            },
            "description": "Array of customers"
          }
        },
        "description": "List of customers"
      },
      "Customerentity": {
        "title": "Customerentity",
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The person's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "taxId": {
            "type": "string",
            "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)"
          },
          "taxIdCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country originating the Customer's taxId element"
              }
            ]
          },
          "governmentId": {
            "type": "string",
            "description": "A federal (such as passport) or state (such as driver's license) issued identifier"
          },
          "customerId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the customer. This identity must be unique to the owning institution"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessorConsumerType"
              },
              {
                "description": "Type of entity. One of BUSINESS or CONSUMER"
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerNameentity"
              },
              {
                "description": "The customer's name"
              }
            ]
          },
          "businessCustomer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessCustomerentity"
              },
              {
                "description": "The business customer information, only used if 'type' is 'BUSINESS'."
              }
            ]
          },
          "customerStartDate": {
            "type": "string",
            "description": "The customer's start date at the financial institution",
            "format": "date",
            "example": "2021-07-15"
          },
          "lastActivityDate": {
            "type": "string",
            "description": "The customer's date of last account activity at the financial institution",
            "format": "date",
            "example": "2021-07-15"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomertoAccountRelationshipentity"
            },
            "description": "List of accounts related to this customer"
          }
        },
        "description": "Represents a customer"
      },
      "PageMetadataLinks1": {
        "title": "PageMetadataLinks1",
        "type": "object",
        "properties": {
          "next": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving next dataset"
              }
            ]
          },
          "prev": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving previous dataset"
              }
            ]
          }
        },
        "description": "Links used to paginate results"
      },
      "Notificationentity": {
        "title": "Notificationentity",
        "required": [
          "notificationId",
          "type",
          "sentOn",
          "category",
          "publisher",
          "notificationPayload"
        ],
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "string",
            "description": "Id of notification"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              },
              {
                "description": "Type of notification"
              }
            ]
          },
          "sentOn": {
            "type": "string",
            "description": "Time notification was sent",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationCategory1"
              },
              {
                "description": "Category of notification"
              }
            ]
          },
          "severity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationSeverity2"
              },
              {
                "description": "Notification severity"
              }
            ]
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationPriority2"
              },
              {
                "description": "Notification priority"
              }
            ]
          },
          "publisher": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Partyentity"
              },
              {
                "description": "Publisher of notification"
              }
            ]
          },
          "subscriber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Partyentity"
              },
              {
                "description": "Subscriber to this notification"
              }
            ]
          },
          "notificationPayload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationPayloadentity2"
              },
              {
                "description": "Notification-specific key-value paired data"
              }
            ]
          },
          "url": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "URL to retrieve further details related to notification"
              }
            ]
          }
        },
        "description": "Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload"
      },
      "NotificationPayloadentity": {
        "title": "NotificationPayloadentity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID for the origination entity related to the notification"
          },
          "idType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationPayloadIdType2"
              },
              {
                "description": "Type of entity causing origination of the notification with the given ID"
              }
            ]
          },
          "customFields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FIAttributeentity"
              },
              {
                "description": "Custom key-value pairs for a notification"
              }
            ]
          }
        },
        "description": "Custom key-value pairs payload for a notification"
      },
      "Notificationsentity": {
        "title": "Notificationsentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notificationentity"
            },
            "description": "An array of Notifications"
          }
        },
        "description": "A paginated array of Notifications"
      },
      "NotificationSubscriptionentity": {
        "title": "NotificationSubscriptionentity",
        "required": [
          "type",
          "category",
          "callbackUrl",
          "subscriber"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              },
              {
                "description": "Type of notification"
              }
            ]
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationCategory1"
              },
              {
                "description": "Category of notification"
              }
            ]
          },
          "callbackUrl": {
            "type": "string",
            "description": "Callback URL. Previous callback URL will be updated with latest."
          },
          "subscriber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Partyentity"
              },
              {
                "description": "The Party who is subscribing to the notification"
              }
            ]
          },
          "effectiveDate": {
            "type": "string",
            "description": "Effective date of notification",
            "format": "date",
            "example": "2021-07-15"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Subscription id of notification"
          }
        },
        "description": "Provides the fields of a notification subscription"
      },
      "NotificationCategory": {
        "title": "NotificationCategory",
        "enum": [
          "CONSENT",
          "FRAUD",
          "MAINTENANCE",
          "NEW_DATA",
          "SECURITY"
        ],
        "type": "string",
        "description": "Category of Notification"
      },
      "NotificationPayloadIdType": {
        "title": "NotificationPayloadIdType",
        "enum": [
          "ACCOUNT",
          "CONSENT",
          "CUSTOMER",
          "MAINTENANCE",
          "PARTY"
        ],
        "type": "string",
        "description": "Type of entity causing origination of a notification"
      },
      "NotificationPriority": {
        "title": "NotificationPriority",
        "enum": [
          "HIGH",
          "MEDIUM",
          "LOW"
        ],
        "type": "string",
        "description": "Priority of notification"
      },
      "NotificationSeverity": {
        "title": "NotificationSeverity",
        "enum": [
          "EMERGENCY",
          "ALERT",
          "WARNING",
          "NOTICE",
          "INFO"
        ],
        "type": "string",
        "description": "Severity level of notification"
      },
      "NotificationType": {
        "title": "NotificationType",
        "enum": [
          "BALANCE",
          "CONSENT_REVOKED",
          "CONSENT_UPDATED",
          "CUSTOM",
          "PLANNED_OUTAGE",
          "RISK",
          "SERVICE"
        ],
        "type": "string",
        "description": "Type of notification"
      },
      "NotificationCategory1": {
        "title": "NotificationCategory1",
        "enum": [
          "CONSENT",
          "FRAUD",
          "MAINTENANCE",
          "NEW_DATA",
          "SECURITY"
        ],
        "type": "string",
        "description": "Category of notification"
      },
      "NotificationPayloadentity2": {
        "title": "NotificationPayloadentity2",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID for the origination entity related to the notification"
          },
          "idType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationPayloadIdType2"
              },
              {
                "description": "Type of entity causing origination of the notification with the given ID"
              }
            ]
          },
          "customFields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FIAttributeentity"
              },
              {
                "description": "Custom key-value pairs for a notification"
              }
            ]
          }
        },
        "description": "Notification-specific key-value paired data"
      },
      "NotificationPayloadIdType2": {
        "title": "NotificationPayloadIdType2",
        "enum": [
          "ACCOUNT",
          "CONSENT",
          "CUSTOMER",
          "MAINTENANCE",
          "PARTY"
        ],
        "type": "string",
        "description": "Type of entity causing origination of the notification with the given ID"
      },
      "NotificationPriority2": {
        "title": "NotificationPriority2",
        "enum": [
          "HIGH",
          "MEDIUM",
          "LOW"
        ],
        "type": "string",
        "description": "Notification priority"
      },
      "NotificationSeverity2": {
        "title": "NotificationSeverity2",
        "enum": [
          "EMERGENCY",
          "ALERT",
          "WARNING",
          "NOTICE",
          "INFO"
        ],
        "type": "string",
        "description": "Notification severity"
      },
      "SuspectedFraudIncidententity": {
        "title": "SuspectedFraudIncidententity",
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Extensible string enum identifying the type of suspected fraud. Initially this will always be set to \"ACCOUNT_TAKEOVER\". Additional values may be defined in the future",
            "example": "ACCOUNT_TAKEOVER"
          },
          "suspectedIncidentId": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the suspected fraud incident",
            "example": "0a318518-ca16-4e66-be76-865a632ea771"
          },
          "reason": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Free text justification for suspecting fraud",
            "example": "User-submitted identity data did not match account"
          },
          "fiAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Array of financial institution-specific attributes. Can be used to provide additional structured context on the suspected fraud for the FI to use in determining a resolution"
          },
          "reporter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Partyentity"
              },
              {
                "description": "Identity of the party responsible for identifying and reporting the suspected fraud. This might be the DP, DAP, a vendor, a payment network, or other entity"
              }
            ]
          }
        },
        "description": "Notification of suspected fraud"
      },
      "Availabilityentity": {
        "title": "Availabilityentity",
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailabilityStatus3"
              },
              {
                "description": "Status of API availability"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of availability status"
          },
          "operationId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FDXResourceOperationID3"
              },
              {
                "description": "Operation ID (e.g. name) for this Availability"
              }
            ]
          },
          "plannedAvailability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannedAvailabilityentity"
            },
            "description": "Provider's plan for API availability"
          }
        },
        "description": "Response object for /availability API"
      },
      "AvailabilityListentity": {
        "title": "AvailabilityListentity",
        "type": "object",
        "properties": {
          "availability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Availabilityentity"
            },
            "description": "Zero or more API availability metrics"
          }
        },
        "description": "Response object for /availability API"
      },
      "Capabilityentity": {
        "title": "Capabilityentity",
        "type": "object",
        "properties": {
          "fdxVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FDXVersion"
            },
            "description": "The FDX schema versions supported by one or more operations"
          },
          "allowedConnections": {
            "type": "integer",
            "description": "The number of concurrent connections allowed for this client",
            "format": "int32"
          },
          "activeConnections": {
            "type": "integer",
            "description": "The current number of active connections for this client",
            "format": "int32"
          },
          "messageFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageFormat2"
              },
              {
                "description": "Defaults to JSON"
              }
            ]
          },
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operationentity"
            },
            "description": "The FDX API endpoints supported"
          },
          "jwksUrl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "The URL to retrieve the JWKS public keys from the data provider, needed to enable payload level encryption above the TLS layer"
              }
            ]
          }
        },
        "description": "The response object for the API /capability request"
      },
      "CertificationMetricentity": {
        "title": "CertificationMetricentity",
        "type": "object",
        "properties": {
          "reportStartTimestamp": {
            "type": "string",
            "description": "When the reported metrics period began",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "reportEndTimestamp": {
            "type": "string",
            "description": "When the reported metrics period ended",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "metricsName": {
            "type": "string",
            "description": "Any provider descriptive name for the measurement. Optional, can be omitted if operationIds are returned"
          },
          "operationIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FDXResourceOperationID"
            },
            "description": "One or more Operation IDs for which these metrics apply. Optional, can be omitted if metricsName is returned"
          },
          "responseTimeAverage": {
            "type": "number",
            "description": "The self-reported average response time in milliseconds for all combined data responses"
          },
          "averageUpTime": {
            "type": "number",
            "description": "See the Certification Performance section that describes how this measurement will be calculated, defines the % of availability during the measurement"
          },
          "reportTimestamp": {
            "type": "string",
            "description": "Time when these performance and availability metrics were created",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          }
        },
        "description": "A single certification performance metric"
      },
      "CertificationMetricsentity": {
        "title": "CertificationMetricsentity",
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificationMetricentity"
            },
            "description": "Zero or more certification performance metrics"
          }
        },
        "description": "Response object for /certification-metrics API"
      },
      "Operationentity": {
        "title": "Operationentity",
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FDXResourceOperationID1"
              },
              {
                "description": "Operation ID (e.g. name) of this API"
              }
            ]
          },
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Availabilityentity1"
              },
              {
                "description": "Whether and how this API is currently supported"
              }
            ]
          },
          "alsoSupported": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FDXResourceOperationID"
            },
            "description": "Additional FDX API endpoints supported at this API, e.g. Transactions within Accounts, or TxImages within Transactions"
          },
          "version": {
            "type": "string",
            "description": "Data provider's implementation version number for this operation, which is unrelated to the FDX API version"
          },
          "fdxVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FDXVersion"
            },
            "description": "FDX schema versions supported at this endpoint"
          },
          "cutOffTime": {
            "type": "string",
            "description": "Cut off time for same-day execution of activity request submitted to this API. Alternatively, the as-of time when EOD account balances are typically set",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "link": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "General HATEOAS link for this API, specifying supported action (GET, POST, etc) and contentTypes (application/json, image/png, etc), but without any path parameter values"
              }
            ]
          }
        },
        "description": "Definition of a supported API for the /capability response object"
      },
      "PlannedAvailabilityentity": {
        "title": "PlannedAvailabilityentity",
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailabilityStatus1"
              },
              {
                "description": "API availability status for this time period"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of API availability status"
          },
          "startTime": {
            "type": "string",
            "description": "Start time for this status period",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "endTime": {
            "type": "string",
            "description": "End time for this status period",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          }
        },
        "description": "Provider's plan for API availability"
      },
      "AvailabilityStatus": {
        "title": "AvailabilityStatus",
        "enum": [
          "ALIVE",
          "PARTIAL",
          "MAINTENANCE",
          "DOWN"
        ],
        "type": "string",
        "description": "Statuses for reporting API availability"
      },
      "MessageFormat": {
        "title": "MessageFormat",
        "enum": [
          "JSON"
        ],
        "type": "string",
        "description": "Message format used in /capability API"
      },
      "FDXResourceOperationID": {
        "title": "FDXResourceOperationID",
        "enum": [
          "getConsentGrant",
          "getConsentRevocation",
          "revokeConsentGrant",
          "getAccount",
          "getAccountAssetTransferNetworks",
          "getAccountContact",
          "getAccountPaymentNetworks",
          "getAccountStatement",
          "getAccountTransactionImages",
          "getRewardProgram",
          "getRewardProgramCategories",
          "searchForAccounts",
          "searchForAccountStatements",
          "searchForAccountTransactions",
          "searchRewardPrograms",
          "getCustomer",
          "getCustomerInfo",
          "getCustomers",
          "createNotificationSubscription",
          "deleteNotificationSubscription",
          "getNotifications",
          "getNotificationSubscription",
          "publishNotification",
          "reportSuspectedFraudIncident",
          "getAvailability",
          "getCapability",
          "getCertificationMetrics",
          "cancelPayment",
          "cancelRecurringPayment",
          "cancelTransfer",
          "createPayee",
          "createPaymentInitiationParty",
          "createPaymentMethod",
          "deletePayee",
          "deletePaymentInitiationParty",
          "deletePaymentMethodRegistration",
          "getPayee",
          "getPayment",
          "getPaymentInitiationParty",
          "getPaymentMethodRegistration",
          "getPaymentsForRecurringPayment",
          "getRecurringPayment",
          "getTransfer",
          "listPaymentInitiationParties",
          "requestAccountTransfer",
          "schedulePayment",
          "scheduleRecurringPayment",
          "searchForPayees",
          "searchForPayments",
          "searchForRecurringPayments",
          "searchForTransfers",
          "updatePayee",
          "updatePayment",
          "updatePaymentInitiationParty",
          "updatePaymentMethodRegistration",
          "updateRecurringPayment",
          "getPayrollReport",
          "getPayrollReports",
          "createRecipient",
          "deleteRecipient",
          "getRecipient",
          "updateRecipient",
          "getRegistryRecipient",
          "getRegistryRecipients",
          "createTaxForm",
          "getTaxForm",
          "searchForTaxForms",
          "updateTaxForm",
          "getResource",
          "getResources"
        ],
        "type": "string",
        "description": "The operationIds for all FDX APIs"
      },
      "Availabilityentity1": {
        "title": "Availabilityentity1",
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailabilityStatus3"
              },
              {
                "description": "Status of API availability"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of availability status"
          },
          "operationId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FDXResourceOperationID3"
              },
              {
                "description": "Operation ID (e.g. name) for this Availability"
              }
            ]
          },
          "plannedAvailability": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlannedAvailabilityentity"
            },
            "description": "Provider's plan for API availability"
          }
        },
        "description": "Whether and how this API is currently supported"
      },
      "AvailabilityStatus1": {
        "title": "AvailabilityStatus1",
        "enum": [
          "ALIVE",
          "PARTIAL",
          "MAINTENANCE",
          "DOWN"
        ],
        "type": "string",
        "description": "API availability status for this time period"
      },
      "AvailabilityStatus3": {
        "title": "AvailabilityStatus3",
        "enum": [
          "ALIVE",
          "PARTIAL",
          "MAINTENANCE",
          "DOWN"
        ],
        "type": "string",
        "description": "Status of API availability"
      },
      "FDXResourceOperationID1": {
        "title": "FDXResourceOperationID1",
        "enum": [
          "getConsentGrant",
          "getConsentRevocation",
          "revokeConsentGrant",
          "getAccount",
          "getAccountAssetTransferNetworks",
          "getAccountContact",
          "getAccountPaymentNetworks",
          "getAccountStatement",
          "getAccountTransactionImages",
          "getRewardProgram",
          "getRewardProgramCategories",
          "searchForAccounts",
          "searchForAccountStatements",
          "searchForAccountTransactions",
          "searchRewardPrograms",
          "getCustomer",
          "getCustomerInfo",
          "getCustomers",
          "createNotificationSubscription",
          "deleteNotificationSubscription",
          "getNotifications",
          "getNotificationSubscription",
          "publishNotification",
          "reportSuspectedFraudIncident",
          "getAvailability",
          "getCapability",
          "getCertificationMetrics",
          "cancelPayment",
          "cancelRecurringPayment",
          "cancelTransfer",
          "createPayee",
          "createPaymentInitiationParty",
          "createPaymentMethod",
          "deletePayee",
          "deletePaymentInitiationParty",
          "deletePaymentMethodRegistration",
          "getPayee",
          "getPayment",
          "getPaymentInitiationParty",
          "getPaymentMethodRegistration",
          "getPaymentsForRecurringPayment",
          "getRecurringPayment",
          "getTransfer",
          "listPaymentInitiationParties",
          "requestAccountTransfer",
          "schedulePayment",
          "scheduleRecurringPayment",
          "searchForPayees",
          "searchForPayments",
          "searchForRecurringPayments",
          "searchForTransfers",
          "updatePayee",
          "updatePayment",
          "updatePaymentInitiationParty",
          "updatePaymentMethodRegistration",
          "updateRecurringPayment",
          "getPayrollReport",
          "getPayrollReports",
          "createRecipient",
          "deleteRecipient",
          "getRecipient",
          "updateRecipient",
          "getRegistryRecipient",
          "getRegistryRecipients",
          "createTaxForm",
          "getTaxForm",
          "searchForTaxForms",
          "updateTaxForm",
          "getResource",
          "getResources"
        ],
        "type": "string",
        "description": "Operation ID (e.g. name) of this API"
      },
      "FDXResourceOperationID3": {
        "title": "FDXResourceOperationID3",
        "enum": [
          "getConsentGrant",
          "getConsentRevocation",
          "revokeConsentGrant",
          "getAccount",
          "getAccountAssetTransferNetworks",
          "getAccountContact",
          "getAccountPaymentNetworks",
          "getAccountStatement",
          "getAccountTransactionImages",
          "getRewardProgram",
          "getRewardProgramCategories",
          "searchForAccounts",
          "searchForAccountStatements",
          "searchForAccountTransactions",
          "searchRewardPrograms",
          "getCustomer",
          "getCustomerInfo",
          "getCustomers",
          "createNotificationSubscription",
          "deleteNotificationSubscription",
          "getNotifications",
          "getNotificationSubscription",
          "publishNotification",
          "reportSuspectedFraudIncident",
          "getAvailability",
          "getCapability",
          "getCertificationMetrics",
          "cancelPayment",
          "cancelRecurringPayment",
          "cancelTransfer",
          "createPayee",
          "createPaymentInitiationParty",
          "createPaymentMethod",
          "deletePayee",
          "deletePaymentInitiationParty",
          "deletePaymentMethodRegistration",
          "getPayee",
          "getPayment",
          "getPaymentInitiationParty",
          "getPaymentMethodRegistration",
          "getPaymentsForRecurringPayment",
          "getRecurringPayment",
          "getTransfer",
          "listPaymentInitiationParties",
          "requestAccountTransfer",
          "schedulePayment",
          "scheduleRecurringPayment",
          "searchForPayees",
          "searchForPayments",
          "searchForRecurringPayments",
          "searchForTransfers",
          "updatePayee",
          "updatePayment",
          "updatePaymentInitiationParty",
          "updatePaymentMethodRegistration",
          "updateRecurringPayment",
          "getPayrollReport",
          "getPayrollReports",
          "createRecipient",
          "deleteRecipient",
          "getRecipient",
          "updateRecipient",
          "getRegistryRecipient",
          "getRegistryRecipients",
          "createTaxForm",
          "getTaxForm",
          "searchForTaxForms",
          "updateTaxForm",
          "getResource",
          "getResources"
        ],
        "type": "string",
        "description": "Operation ID (e.g. name) for this Availability"
      },
      "FDXVersion": {
        "title": "FDXVersion",
        "enum": [
          "V1.0",
          "V2.0",
          "V2.1",
          "V3.0",
          "V4.0",
          "V4.1",
          "V4.2",
          "V4.5",
          "V4.6",
          "V4.6.1",
          "V4.6.2",
          "V5.0",
          "V5.0.0",
          "V5.0.1",
          "V5.0.2",
          "V5.0.3",
          "V5.1",
          "V5.1.0",
          "V5.1.1",
          "V5.1.2",
          "V5.2",
          "V5.2.0",
          "V5.2.1",
          "V5.2.2",
          "V5.2.3",
          "V5.2.4",
          "V5.3",
          "V5.3.0",
          "V5.3.1",
          "V5.3.2",
          "V5.3.3",
          "V6.0.0",
          "V6.1.0",
          "V6.2.0"
        ],
        "type": "string",
        "description": "The list of prior and current FDX major and minor versions."
      },
      "MessageFormat2": {
        "title": "MessageFormat2",
        "enum": [
          "JSON"
        ],
        "type": "string",
        "description": "Defaults to JSON"
      },
      "ISO93622014BusinessIdentifierCodeentity": {
        "title": "ISO93622014BusinessIdentifierCodeentity",
        "type": "object",
        "properties": {
          "bicFIDec2014Id": {
            "type": "string",
            "description": "Business identifier code of the financial institution"
          }
        },
        "description": "[ISO 9362:2014](https://www.swift.com/standards/data-standards/bic-business-identifier-code)\nBusiness Identifier Code for Financial Institutions\n(see [whitepaper](https://www.swift.com/swift-resource/14256/download))\nDeprecated and superceded by `Iso9362BusinessIdCode2022` (ISO 9362:2022). BICFIDec2014Identifier will be\nremoved after multi-year transition from 9362:2014",
        "deprecated": true
      },
      "Branchentity": {
        "title": "Branchentity",
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string",
            "description": "Branch number"
          },
          "name": {
            "type": "string",
            "description": "Name of the branch"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDeliveryAddressentity"
            },
            "description": "Location of the branch"
          },
          "financialInstitution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialInstitutionentity2"
              },
              {
                "description": "Financial institution associated with the branch"
              }
            ]
          }
        },
        "description": "Details on the Branch that is owning the destination account"
      },
      "DirectDepositentity": {
        "title": "DirectDepositentity",
        "type": "object",
        "properties": {
          "directDepositId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of the direct deposit configuration"
          },
          "registrationTypeCode": {
            "type": "string",
            "description": "Type code of a registration for a direct deposit account"
          }
        },
        "description": "Direct deposit details"
      },
      "ElectronicAddressentity": {
        "title": "ElectronicAddressentity",
        "type": "object",
        "properties": {
          "emailAddressText": {
            "type": "string",
            "description": "Value of the email address"
          }
        },
        "description": "Electronic address details"
      },
      "ExternalAccountIdSchemeentity": {
        "title": "ExternalAccountIdSchemeentity",
        "type": "object",
        "properties": {
          "idCode": {
            "maxLength": 256,
            "type": "string",
            "description": "Identification code"
          }
        },
        "description": "External account identification scheme"
      },
      "ExternalFinancialInstitutionIdSchemeentity": {
        "title": "ExternalFinancialInstitutionIdSchemeentity",
        "type": "object",
        "properties": {
          "idCode": {
            "maxLength": 256,
            "type": "string",
            "description": "Identification code"
          }
        },
        "description": "External financial institution identification scheme"
      },
      "FinancialInstitutionentity": {
        "title": "FinancialInstitutionentity",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the financial institution"
          },
          "fiId": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ISO93622014BusinessIdentifierCodeentity"
              },
              {
                "$ref": "#/components/schemas/ISO93622022BusinessIdentifierCodeentity"
              },
              {
                "$ref": "#/components/schemas/GenericFinancialInstitutionIdentity"
              }
            ],
            "description": "Financial institution identifier"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDeliveryAddressentity"
            },
            "description": "Location of the financial institution"
          }
        },
        "description": "Details of the Financial Institution that is owning the destination account"
      },
      "GenericAccountIdentificationentity": {
        "title": "GenericAccountIdentificationentity",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Account identifier"
          },
          "issuerName": {
            "type": "string",
            "description": "Name of the issuer"
          },
          "idScheme": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExternalAccountIdSchemeentity"
              },
              {
                "$ref": "#/components/schemas/ProprietaryAccountIdSchemeentity"
              }
            ],
            "description": "Identification scheme associated with the generic account"
          }
        },
        "description": "Generic account identifier entity"
      },
      "GenericFinancialInstitutionIdentity": {
        "title": "GenericFinancialInstitutionIdentity",
        "type": "object",
        "properties": {
          "fiId": {
            "maxLength": 256,
            "type": "string",
            "description": "Financial institution identifier"
          },
          "issuerName": {
            "type": "string",
            "description": "Issuer name"
          },
          "idScheme": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExternalFinancialInstitutionIdSchemeentity"
              },
              {
                "$ref": "#/components/schemas/ProprietaryFinancialInstitutionIdSchemeentity"
              }
            ],
            "description": "Identification scheme associated with the generic financial institution"
          }
        },
        "description": "Generic financial institution identifier entity"
      },
      "GovernmentIssuedPartyIdentificationentity": {
        "title": "GovernmentIssuedPartyIdentificationentity",
        "type": "object",
        "properties": {
          "idNumber": {
            "maxLength": 256,
            "type": "string",
            "description": "Identification number"
          },
          "issuedDate": {
            "type": "string",
            "description": "Issued date"
          },
          "expiryDate": {
            "type": "string",
            "description": "Expiry date"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GovernmentIssuedIDType2"
              },
              {
                "description": "Type of the identification"
              }
            ]
          },
          "issuingCountryName": {
            "type": "string",
            "description": "Name of the issuing country"
          }
        },
        "description": "Government issued identification document that is used to uniquely\nidentify a person or business"
      },
      "IBAN2007Identifierentity": {
        "title": "IBAN2007Identifierentity",
        "type": "object",
        "properties": {
          "iban2007Id": {
            "maxLength": 256,
            "type": "string",
            "description": "Value of the account identifier"
          }
        },
        "description": "IBAN 2007 account identifier"
      },
      "ISO93622022BusinessIdentifierCodeentity": {
        "title": "ISO93622022BusinessIdentifierCodeentity",
        "type": "object",
        "properties": {
          "businessIdCode2022": {
            "maxLength": 11,
            "type": "string",
            "description": "ISO 9362:2022 business identifier code of the financial institution"
          }
        },
        "description": "[ISO 9362:2022](https://www.swift.com/standards/data-standards/bic-business-identifier-code)\nBusiness Identifier Code for Financial Institutions\n(see [whitepaper](https://www.swift.com/swift-resource/14256/download)), supercedes ISO 9362:2014"
      },
      "Merchantentity": {
        "title": "Merchantentity",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerNameentity"
              },
              {
                "description": "Name of the merchant used to execute the payment"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddress1"
              },
              {
                "description": "Address of the merchant used to execute the payment"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumber"
              },
              {
                "description": "Phone number of the merchant used to execute the payment"
              }
            ]
          },
          "merchantAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account identifier(s) the customer has with the merchant"
          },
          "payeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "Persistent unique identifier for a merchant payee"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyStatus3"
              },
              {
                "description": "Defines the Merchant's lifecycle"
              }
            ]
          },
          "expiresTimestamp": {
            "type": "string",
            "description": "Describes when the entity will be automatically deleted. The entity will not go into the \"DELETED\" state. If this value is null or not provided, the entity will not expire automatically",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          }
        },
        "description": "Business or person to whom bill payments can be sent for products or services"
      },
      "MerchantForUpdateentity": {
        "title": "MerchantForUpdateentity",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerNameentity"
              },
              {
                "description": "Name of the merchant used to execute the payment"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddress1"
              },
              {
                "description": "Address of the merchant used to execute the payment"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumber"
              },
              {
                "description": "Phone number of the merchant used to execute the payment"
              }
            ]
          },
          "merchantAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account identifier(s) the customer has with the merchant"
          }
        },
        "description": "Merchant's fields to be updated. Describes the fields that can be updated by the client. Supported fields could be server dependent"
      },
      "OrganizationNameentity": {
        "title": "OrganizationNameentity",
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Name value of the organization"
          }
        },
        "description": "Logical grouping of name attributes that are particular to\nan Organization type of payment initiation party"
      },
      "PartyGroupentity": {
        "title": "PartyGroupentity",
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of a group of payment initiation parties"
          },
          "name": {
            "type": "string",
            "description": "Associated name with the group of payment initiation parties"
          }
        },
        "description": "Entity that allows payment initiation parties to be grouped using\nspecific business rules. Each payment initiation party can belong to\nmany groups."
      },
      "Payeeentity": {
        "title": "Payeeentity",
        "required": [
          "merchant"
        ],
        "type": "object",
        "properties": {
          "merchant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Merchantentity1"
              },
              {
                "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated"
              }
            ]
          }
        },
        "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees"
      },
      "PayeeForUpdateentity": {
        "title": "PayeeForUpdateentity",
        "required": [
          "merchant"
        ],
        "type": "object",
        "properties": {
          "merchant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantForUpdateentity1"
              },
              {
                "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated"
              }
            ]
          }
        },
        "description": "Payee's fields to be updated"
      },
      "Payeesentity": {
        "title": "Payeesentity",
        "required": [
          "payees"
        ],
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatesMetadataentity2"
              },
              {
                "description": "Update IDs for retrieving updates since query"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SynchronizableArrayLinksentity2"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "payees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payeeentity"
            },
            "description": "Payees retrieved by the operation"
          }
        },
        "description": "A list of payees"
      },
      "Paymententity": {
        "title": "Paymententity",
        "required": [
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate",
          "paymentId",
          "status"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          },
          "paymentId": {
            "maxLength": 256,
            "type": "string",
            "description": "Uniquely identifies a payment. Used within the API to reference a payment"
          },
          "recurringPaymentId": {
            "maxLength": 256,
            "type": "string",
            "description": "The recurring payment that spawned this payment. Null if payment is not associated with a recurring payment"
          },
          "scheduledTimestamp": {
            "type": "string",
            "description": "When the payment was scheduled",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "processedTimestamp": {
            "type": "string",
            "description": "When the payment was processed",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "failedTimestamp": {
            "type": "string",
            "description": "When the payment failed. Includes when the payment was determined to lack sufficient funds",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "cancelledTimestamp": {
            "type": "string",
            "description": "When the payment was cancelled",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "startedProcessingTimestamp": {
            "type": "string",
            "description": "When the payment execution started",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentStatus3"
              },
              {
                "description": "Defines the status of the payment"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to related payment entities"
          }
        },
        "description": "Represents a payment"
      },
      "PaymentDeliveryAddressentity": {
        "title": "PaymentDeliveryAddressentity",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddressType"
              },
              {
                "description": "Type of delivery address"
              }
            ]
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ElectronicAddressentity"
              },
              {
                "$ref": "#/components/schemas/TelephoneNumber"
              },
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "Value of the address"
          }
        },
        "description": "A single location for a party. A party (e.g. Branch) can have multiple registered\nlocations; street addresses, email addresses and/or telephone numbers"
      },
      "PaymentForUpdateentity": {
        "title": "PaymentForUpdateentity",
        "required": [
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Payment entity used for creation and update of a payment"
      },
      "PaymentGenericAccountentity": {
        "title": "PaymentGenericAccountentity",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of the account number"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {
                "description": "Account type"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Account name"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IBAN2007Identifierentity"
              },
              {
                "$ref": "#/components/schemas/GenericAccountIdentificationentity"
              }
            ],
            "description": "Identifier of the payment generic account"
          },
          "branch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Branchentity1"
              },
              {
                "description": "Branch details associated with this account"
              }
            ]
          }
        },
        "description": "Payment Generic Account information"
      },
      "PaymentInitiationPartiesentity": {
        "title": "PaymentInitiationPartiesentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "paymentInitiationParties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInitiationPartySummaryentity"
            },
            "description": "Payment initiation party summaries"
          }
        },
        "description": "Payment initiation party summaries"
      },
      "PaymentInitiationPartyentity": {
        "title": "PaymentInitiationPartyentity",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human recognizable common name"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyType"
              },
              {
                "description": "Extensible string enum identifying the type of the party"
              }
            ]
          },
          "homeUri": {
            "type": "string",
            "description": "URI for party, where an end user could learn more about the company or application involved in the data sharing chain"
          },
          "logoUri": {
            "type": "string",
            "description": "URI for a logo asset to be displayed to the end user"
          },
          "registry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Registry"
              },
              {
                "description": "The registry containing the party's registration with name and id: FDX, GLEIF, ICANN, PRIVATE"
              }
            ]
          },
          "registeredEntityName": {
            "type": "string",
            "description": "Registered name of party"
          },
          "registeredEntityId": {
            "type": "string",
            "description": "Registered id of party"
          },
          "partyGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyGroupentity"
            },
            "description": "The PartyGroups to which this initiation party belongs.\nOptional, can be omitted if party belongs to no groups."
          },
          "paymentInitiationPartyName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentInitiationPartyNameentity1"
              },
              {
                "description": "Name entity associated with the payment initiation party"
              }
            ]
          },
          "governmentIssuedPartyIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GovernmentIssuedPartyIdentificationentity"
            },
            "description": "Government-issued identification documents that are\nused to uniquely identify this payment initiation party"
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInitiationPartyToPaymentMethodentity"
            },
            "description": "Registrations between this payment initiation party and its payment methods"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDeliveryAddressentity"
            },
            "description": "Delivery addresses associated with this payment initiation party"
          },
          "expiresTimestamp": {
            "type": "string",
            "description": "Describes when the entity will be automatically deleted. The entity\nwill not go into the \"DELETED\" state. If this value is null or not\nprovided, the entity will not expire automatically",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyStatus1"
              },
              {
                "description": "Current status of the payment initiation party entry"
              }
            ]
          },
          "contactPreferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInitiationPartyContactMethodentity"
            },
            "description": "Contact methods for this payment initiation party"
          }
        },
        "description": "Party details for FI payment initiation. Each payment initiation party\nwill have a separate entry per FI customer, for example we\nmight have multiple payment initiation parties that represent the same\nphysical person; since they are registered for separate\ncustomers they will have separate entries."
      },
      "PaymentInitiationPartyContactMethodentity": {
        "title": "PaymentInitiationPartyContactMethodentity",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactPreferencesType2"
              },
              {
                "description": "Type of the contact preference"
              }
            ]
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ElectronicAddressentity"
              },
              {
                "$ref": "#/components/schemas/TelephoneNumber"
              },
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "Address details associated with this contact preference"
          }
        },
        "description": "A contact method for a payment initiation party."
      },
      "PaymentInitiationPartyCreateResponseentity": {
        "title": "PaymentInitiationPartyCreateResponseentity",
        "type": "object",
        "properties": {
          "paymentInitiationPartyId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of a payment initiation party"
          }
        },
        "description": "Entity that stores FI payment initiation party details. Each payment\ninitiation party  will have a separate entry per FI customer, e.g. we\nmight have multiple payment initiation parties that represent the same\nphysical person, nevertheless since they are registered for separate\ncustomers then they will have separate entries."
      },
      "PaymentInitiationPartyMethodCreateResponseentity": {
        "title": "PaymentInitiationPartyMethodCreateResponseentity",
        "type": "object",
        "properties": {
          "registrationId": {
            "maxLength": 256,
            "type": "string",
            "description": "Registration identifier between a payment initiation party and a payment method"
          }
        },
        "description": "Registration between a payment initiation party and a Payment Method"
      },
      "PaymentInitiationPartyNameentity": {
        "title": "PaymentInitiationPartyNameentity",
        "type": "object",
        "properties": {
          "aliasName": {
            "type": "string",
            "description": "Alias name"
          },
          "detail": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationNameentity"
              },
              {
                "$ref": "#/components/schemas/Individualname"
              }
            ],
            "description": "Details of the name"
          }
        },
        "description": "Generic entity that stores various names associated with a payment initiation party"
      },
      "PaymentInitiationPartySummaryentity": {
        "title": "PaymentInitiationPartySummaryentity",
        "type": "object",
        "properties": {
          "paymentInitiationPartyId": {
            "type": "string",
            "description": "Unique identifier of a payment initiation party"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentInitiationPartyNameentity3"
              },
              {
                "description": "Details of the name"
              }
            ]
          }
        },
        "description": "Summary of a payment initiation party"
      },
      "PaymentInitiationPartyToPaymentMethodentity": {
        "title": "PaymentInitiationPartyToPaymentMethodentity",
        "type": "object",
        "properties": {
          "registrationId": {
            "maxLength": 256,
            "type": "string",
            "description": "Registration ID"
          },
          "paymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodentity2"
              },
              {
                "description": "Payment method details"
              }
            ]
          },
          "account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodCreditAccountentity"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodDebitAccountentity"
              }
            ],
            "description": "Account details"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDeliveryAddressentity"
            },
            "description": "Address associated with the payment method registration of a payment initiation party"
          }
        },
        "description": "Registration between a payment initiation party and a Payment Method"
      },
      "PaymentMethodentity": {
        "title": "PaymentMethodentity",
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "string",
            "description": "Unique identifier of the payment method"
          },
          "externalLocalInstrument1Code": {
            "type": "string",
            "description": "Unique identifier code of the payment method rail as documented\ninternally to the FI. This is aligned with ISO 20022 pain.001,\ntransaction level"
          },
          "externalClearingSystemIdentification1Code": {
            "type": "string",
            "description": "Unique identifier code of the external clearing system.\nThis is aligned with ISO 20022 pacs.008 group level. It can be\nused to send the payment rail for the payment. ISO has already\nlisted codes in the fields which indicates the payment rail like\n\"ACH\" for ACH, \"ACS\" for EFT Payments, \"LVT\" for Canada LVTS,\n\"LYX\" for Lynx Canada, etc."
          },
          "externalClearingSystemIdentification1Proprietary": {
            "type": "string",
            "description": "For few examples where the payment rail is not part of the ISO 20022 scope"
          }
        },
        "description": "A method of payment, also known as a payment type or payment rail"
      },
      "PaymentMethodCreditAccountentity": {
        "title": "PaymentMethodCreditAccountentity",
        "type": "object",
        "properties": {
          "accountRegistrationId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of the registration of the destination account to the\npayment method associated with a particular payment initiation party"
          },
          "directDeposit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DirectDepositentity"
              },
              {
                "description": "Direct deposit details"
              }
            ]
          },
          "destinationAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentGenericAccountentity1"
              },
              {
                "description": "Destination account details"
              }
            ]
          }
        },
        "description": "A payment initiation party's payment method that credits an account"
      },
      "PaymentMethodDebitAccountentity": {
        "title": "PaymentMethodDebitAccountentity",
        "type": "object",
        "properties": {
          "accountRegistrationId": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of the registration of the sending account to the\npayment method associated with a particular payment initiation party"
          },
          "sendingAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentGenericAccountentity2"
              },
              {
                "description": "Sending account details"
              }
            ]
          }
        },
        "description": "A payment initiation party's payment method that debits an account"
      },
      "PaymentMethodId": {
        "title": "PaymentMethodId",
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "string",
            "description": "Unique identifier of the payment method"
          },
          "externalLocalInstrument1Code": {
            "type": "string",
            "description": "Unique identifier code of the payment method rail as documented\ninternally to the FI. This is aligned with ISO 20022 pain.001,\ntransaction level"
          }
        },
        "description": "FI's unique identifier for the method of payment"
      },
      "PaymentMethodSystemCode": {
        "title": "PaymentMethodSystemCode",
        "type": "object",
        "properties": {
          "externalClearingSystemIdentification1Code": {
            "type": "string",
            "description": "Unique identifier code of the external clearing system.\nThis is aligned with ISO 20022 pacs.008 group level. It can be\nused to send the payment rail for the payment. ISO has already\nlisted codes in the fields which indicates the payment rail like\n\"ACH\" for ACH, \"ACS\" for EFT Payments, \"LVT\" for Canada LVTS,\n\"LYX\" for Lynx Canada, etc."
          }
        },
        "description": "Unique identifier code of the external clearing system. Aligned with ISO 20022 pacs.008 group level"
      },
      "PaymentMethodSystemProprietary": {
        "title": "PaymentMethodSystemProprietary",
        "type": "object",
        "properties": {
          "externalClearingSystemIdentification1Proprietary": {
            "type": "string",
            "description": "For few examples where the payment rail is not part of the ISO 20022 scope"
          }
        },
        "description": "Proprietary identifier of the external clearing system when the payment rail is not part of the ISO 20022 scope"
      },
      "Paymentsentity": {
        "title": "Paymentsentity",
        "required": [
          "payments"
        ],
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatesMetadataentity2"
              },
              {
                "description": "Update IDs for retrieving updates since query"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SynchronizableArrayLinksentity2"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Paymententity"
            },
            "description": "Payments retrieved by the operation"
          }
        },
        "description": "A list of payments"
      },
      "ProprietaryAccountIdSchemeentity": {
        "title": "ProprietaryAccountIdSchemeentity",
        "type": "object",
        "properties": {
          "proprietaryName": {
            "type": "string",
            "description": "This property is related to the name of the identification scheme,\nin the proprietary system, as per ISO 20022 v1."
          }
        },
        "description": "Proprietary account identification scheme, as per ISO 20022 v1."
      },
      "ProprietaryFinancialInstitutionIdSchemeentity": {
        "title": "ProprietaryFinancialInstitutionIdSchemeentity",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "This property is related to the name of the identification scheme,\nin the proprietary system, as per ISO 20022 v1"
          }
        },
        "description": "Proprietary financial institution identification scheme, as per ISO 20022 v1."
      },
      "RecurringPaymententity": {
        "title": "RecurringPaymententity",
        "required": [
          "frequency",
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentFrequency2"
              },
              {
                "description": "Defines how often the payment repeats"
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentDurationentity2"
              },
              {
                "description": "Defines how long the payment repeats for"
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          },
          "recurringPaymentId": {
            "maxLength": 256,
            "type": "string",
            "description": "Uniquely identifies a recurring payment. Used within the API to reference a recurring payment"
          },
          "scheduledTimestamp": {
            "type": "string",
            "description": "When the recurring payment was scheduled",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "cancelledTimestamp": {
            "type": "string",
            "description": "When the recurring payment was cancelled",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "processedTimestamp": {
            "type": "string",
            "description": "When the last payment executed",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "failedTimestamp": {
            "type": "string",
            "description": "When the recurring payment failed",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentStatus2"
              },
              {
                "description": "Defines the status of the recurring payment"
              }
            ]
          }
        },
        "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays"
      },
      "RecurringPaymentDurationentity": {
        "title": "RecurringPaymentDurationentity",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentDurationType2"
              },
              {
                "description": "Type of duration"
              }
            ]
          },
          "numberOfTimes": {
            "type": "number",
            "description": "Maximum number of times a payment is to be sent. Required if type is set to NUMBEROFTIMES"
          }
        },
        "description": "Describes a payment's duration"
      },
      "RecurringPaymentforUpdateentity": {
        "title": "RecurringPaymentforUpdateentity",
        "required": [
          "frequency",
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentFrequency2"
              },
              {
                "description": "Defines how often the payment repeats"
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentDurationentity2"
              },
              {
                "description": "Defines how long the payment repeats for"
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Used to create or update a recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays"
      },
      "RecurringPaymentsentity": {
        "title": "RecurringPaymentsentity",
        "required": [
          "recurringPayments"
        ],
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatesMetadataentity2"
              },
              {
                "description": "Update IDs for retrieving updates since query"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SynchronizableArrayLinksentity2"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "recurringPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPaymententity"
            },
            "description": "Recurring payments retrieved by the operation"
          }
        },
        "description": "A list of recurring payments"
      },
      "SynchronizableArrayentity": {
        "title": "SynchronizableArrayentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatesMetadataentity2"
              },
              {
                "description": "Update IDs for retrieving updates since query"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SynchronizableArrayLinksentity2"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          }
        },
        "description": "Base class for results that can be synchronized over time. A synchronizable array is also paginated"
      },
      "SynchronizableArrayLinksentity": {
        "title": "SynchronizableArrayLinksentity",
        "type": "object",
        "properties": {
          "next": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving next dataset"
              }
            ]
          },
          "prev": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving previous dataset"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving updates since last request"
              }
            ]
          }
        },
        "description": "Resource URLs for retrieving changes, next or previous datasets"
      },
      "Transferentity": {
        "title": "Transferentity",
        "type": "object",
        "properties": {
          "transferId": {
            "maxLength": 256,
            "type": "string",
            "description": "Client generated, long-term persistent identity of the transfer action. This ID should be maintained and returned by institution"
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account"
          },
          "toAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the destination account"
          },
          "amount": {
            "type": "number",
            "description": "Positive amount of money to be transferred"
          },
          "memo": {
            "maxLength": 255,
            "type": "string",
            "description": "User-entered reason for transfer"
          },
          "paymentDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentDetailsentity"
              },
              {
                "description": "Payment details"
              }
            ]
          },
          "referenceId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identifier for transfer attempt"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentStatus1"
              },
              {
                "description": "CANCELLED, FAILED, NOFUNDS, PROCESSED, PROCESSING, SCHEDULED"
              }
            ]
          },
          "transferTime": {
            "type": "string",
            "description": "Date of transfer attempt",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          }
        },
        "description": "A single transfer of money. Refer to Transfers for a list of multiple transfers."
      },
      "TransferforCreateentity": {
        "title": "TransferforCreateentity",
        "type": "object",
        "properties": {
          "transferId": {
            "maxLength": 256,
            "type": "string",
            "description": "Client generated, long-term persistent identity of the transfer action. This ID should be maintained and returned by institution"
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account"
          },
          "toAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the destination account"
          },
          "amount": {
            "type": "number",
            "description": "Positive amount of money to be transferred"
          },
          "memo": {
            "maxLength": 255,
            "type": "string",
            "description": "User-entered reason for transfer"
          },
          "paymentDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentDetailsentity"
              },
              {
                "description": "Payment details"
              }
            ]
          }
        },
        "description": "Used to request a transfer"
      },
      "Transfersentity": {
        "title": "Transfersentity",
        "required": [
          "transfers"
        ],
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatesMetadataentity2"
              },
              {
                "description": "Update IDs for retrieving updates since query"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SynchronizableArrayLinksentity2"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transferentity"
            },
            "description": "Transfers retrieved by the operation"
          }
        },
        "description": "A list of transfers"
      },
      "UpdatesMetadataentity": {
        "title": "UpdatesMetadataentity",
        "type": "object",
        "properties": {
          "nextUpdateId": {
            "maxLength": 256,
            "type": "string",
            "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific"
          }
        },
        "description": "Change IDs for synchronizable result sets"
      },
      "ContactPreferencesType": {
        "title": "ContactPreferencesType",
        "enum": [
          "CELL",
          "EMAIL",
          "FAX",
          "LETTER",
          "PHONE"
        ],
        "type": "string",
        "description": "Contact Preferences Type"
      },
      "GovernmentIssuedIDType": {
        "title": "GovernmentIssuedIDType",
        "enum": [
          "DRIVERLICENSE",
          "PASSPORT"
        ],
        "type": "string",
        "description": "Government Issued ID Type"
      },
      "PartyStatus": {
        "title": "PartyStatus",
        "enum": [
          "ACTIVE",
          "DELETED",
          "PENDING",
          "REJECTED"
        ],
        "type": "string",
        "description": "Defines the party lifecycle.\n  * `ACTIVE`: Party is ready to participate in money movement\n  * `DELETED`: Party has been deleted and will not move into any other state\n  * `PENDING`: Party is not yet ready to participate in money movement\n  * `REJECTED`: Party was found to be invalid and cannot participate in money movement"
      },
      "PaymentStatus": {
        "title": "PaymentStatus",
        "enum": [
          "CANCELLED",
          "FAILED",
          "NOFUNDS",
          "PROCESSED",
          "PROCESSING",
          "SCHEDULED"
        ],
        "type": "string",
        "description": "Defines the payment lifecycle.\n  * `CANCELLED`: Payment was cancelled by the user\n  * `FAILED`: Payment failed for reasons other than \"No Funds\"\nFor example: fraud, invalid payee, source account was closed etc.\n  * `NOFUNDS`: Payment failed because of the lack of funds\n  * `PROCESSED`: The payment has been executed by the payment service provider\n  * `PROCESSING`: Payment is in the process of being executed by the payment service provider\n  * `SCHEDULED`: Payment has been scheduled"
      },
      "RecurringPaymentDurationType": {
        "title": "RecurringPaymentDurationType",
        "enum": [
          "NOEND",
          "NUMBEROFTIMES"
        ],
        "type": "string",
        "description": "Describes if the recurring payment has an end or will occur a fixed number of times"
      },
      "RecurringPaymentFrequency": {
        "title": "RecurringPaymentFrequency",
        "enum": [
          "WEEKLY",
          "BIWEEKLY",
          "TWICEMONTHLY",
          "MONTHLY",
          "FOURWEEKS",
          "BIMONTHLY",
          "QUARTERLY",
          "SEMIANNUALLY",
          "ANNUALLY"
        ],
        "type": "string",
        "description": "Defines how often a payment is made relative to the starting day.\n  * `BIWEEKLY`: Every 14 days\n  * `TWICEMONTHLY`: Every 15 days\n  * `WEEKLY`: Every 7 days"
      },
      "RecurringPaymentStatus": {
        "title": "RecurringPaymentStatus",
        "enum": [
          "CANCELLED",
          "FAILED",
          "PROCESSED",
          "SCHEDULED"
        ],
        "type": "string",
        "description": "Defines the recurring payment lifecycle\n  * `CANCELLED`: Recurring Payment was cancelled by the user\n  * `FAILED`: Recurring Payment failed. For example: fraud, invalid payee, source account was closed etc.\n  * `PROCESSED`: The scheduled duration of the recurrence has completed\n  * `SCHEDULED`: Recurring Payment has been scheduled"
      },
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 1"
          },
          "line2": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 2"
          },
          "line3": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 3"
          },
          "city": {
            "maxLength": 64,
            "type": "string",
            "description": "City"
          },
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
          },
          "postalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country code"
              }
            ]
          }
        },
        "description": "U.S. domestic address or a foreign address with country other than 'US'"
      },
      "Branchentity1": {
        "title": "Branchentity1",
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string",
            "description": "Branch number"
          },
          "name": {
            "type": "string",
            "description": "Name of the branch"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDeliveryAddressentity"
            },
            "description": "Location of the branch"
          },
          "financialInstitution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialInstitutionentity2"
              },
              {
                "description": "Financial institution associated with the branch"
              }
            ]
          }
        },
        "description": "Branch details associated with this account"
      },
      "ContactPreferencesType2": {
        "title": "ContactPreferencesType2",
        "enum": [
          "CELL",
          "EMAIL",
          "FAX",
          "LETTER",
          "PHONE"
        ],
        "type": "string",
        "description": "Type of the contact preference"
      },
      "DeliveryAddress1": {
        "title": "DeliveryAddress1",
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 1"
          },
          "line2": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 2"
          },
          "line3": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 3"
          },
          "city": {
            "maxLength": 64,
            "type": "string",
            "description": "City"
          },
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
          },
          "postalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country code"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddressType"
              },
              {
                "description": "Type of address location. One of BUSINESS, DELIVERY, HOME, MAILING"
              }
            ]
          }
        },
        "description": "Address of the merchant used to execute the payment"
      },
      "FinancialInstitutionentity2": {
        "title": "FinancialInstitutionentity2",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the financial institution"
          },
          "fiId": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ISO93622014BusinessIdentifierCodeentity"
              },
              {
                "$ref": "#/components/schemas/ISO93622022BusinessIdentifierCodeentity"
              },
              {
                "$ref": "#/components/schemas/GenericFinancialInstitutionIdentity"
              }
            ],
            "description": "Financial institution identifier"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDeliveryAddressentity"
            },
            "description": "Location of the financial institution"
          }
        },
        "description": "Financial institution associated with the branch"
      },
      "GovernmentIssuedIDType2": {
        "title": "GovernmentIssuedIDType2",
        "enum": [
          "DRIVERLICENSE",
          "PASSPORT"
        ],
        "type": "string",
        "description": "Type of the identification"
      },
      "Individualname": {
        "title": "Individualname",
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "description": "First name"
          },
          "middle": {
            "type": "string",
            "description": "Middle initial"
          },
          "last": {
            "type": "string",
            "description": "Last name"
          },
          "suffix": {
            "type": "string",
            "description": "Generational or academic suffix"
          }
        },
        "description": "First name, middle initial, last name, suffix fields"
      },
      "Merchantentity1": {
        "title": "Merchantentity1",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerNameentity"
              },
              {
                "description": "Name of the merchant used to execute the payment"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddress1"
              },
              {
                "description": "Address of the merchant used to execute the payment"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumber"
              },
              {
                "description": "Phone number of the merchant used to execute the payment"
              }
            ]
          },
          "merchantAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account identifier(s) the customer has with the merchant"
          },
          "payeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "Persistent unique identifier for a merchant payee"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyStatus3"
              },
              {
                "description": "Defines the Merchant's lifecycle"
              }
            ]
          },
          "expiresTimestamp": {
            "type": "string",
            "description": "Describes when the entity will be automatically deleted. The entity will not go into the \"DELETED\" state. If this value is null or not provided, the entity will not expire automatically",
            "format": "date-time",
            "example": "2021-07-15T14:46:41.375Z"
          }
        },
        "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated"
      },
      "MerchantForUpdateentity1": {
        "title": "MerchantForUpdateentity1",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerNameentity"
              },
              {
                "description": "Name of the merchant used to execute the payment"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddress1"
              },
              {
                "description": "Address of the merchant used to execute the payment"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumber"
              },
              {
                "description": "Phone number of the merchant used to execute the payment"
              }
            ]
          },
          "merchantAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account identifier(s) the customer has with the merchant"
          }
        },
        "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated"
      },
      "PartyStatus1": {
        "title": "PartyStatus1",
        "enum": [
          "ACTIVE",
          "DELETED",
          "PENDING",
          "REJECTED"
        ],
        "type": "string",
        "description": "Current status of the payment initiation party entry"
      },
      "PartyStatus3": {
        "title": "PartyStatus3",
        "enum": [
          "ACTIVE",
          "DELETED",
          "PENDING",
          "REJECTED"
        ],
        "type": "string",
        "description": "Defines the Merchant's lifecycle"
      },
      "PayeeForUpdateentity1": {
        "title": "PayeeForUpdateentity1",
        "required": [
          "merchant"
        ],
        "type": "object",
        "properties": {
          "merchant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantForUpdateentity1"
              },
              {
                "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated"
              }
            ]
          }
        },
        "description": "The data of the Payee to be updated"
      },
      "PaymentForUpdateentity1": {
        "title": "PaymentForUpdateentity1",
        "required": [
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "The data of the Payment to be scheduled"
      },
      "PaymentForUpdateentity2": {
        "title": "PaymentForUpdateentity2",
        "required": [
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "The data of the Payment to be updated"
      },
      "PaymentGenericAccountentity1": {
        "title": "PaymentGenericAccountentity1",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of the account number"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {
                "description": "Account type"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Account name"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IBAN2007Identifierentity"
              },
              {
                "$ref": "#/components/schemas/GenericAccountIdentificationentity"
              }
            ],
            "description": "Identifier of the payment generic account"
          },
          "branch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Branchentity1"
              },
              {
                "description": "Branch details associated with this account"
              }
            ]
          }
        },
        "description": "Destination account details"
      },
      "PaymentGenericAccountentity2": {
        "title": "PaymentGenericAccountentity2",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique identifier of the account number"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              },
              {
                "description": "Account type"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Account name"
          },
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "ISO 4217 currency code"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IBAN2007Identifierentity"
              },
              {
                "$ref": "#/components/schemas/GenericAccountIdentificationentity"
              }
            ],
            "description": "Identifier of the payment generic account"
          },
          "branch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Branchentity1"
              },
              {
                "description": "Branch details associated with this account"
              }
            ]
          }
        },
        "description": "Sending account details"
      },
      "PaymentInitiationPartyNameentity1": {
        "title": "PaymentInitiationPartyNameentity1",
        "type": "object",
        "properties": {
          "aliasName": {
            "type": "string",
            "description": "Alias name"
          },
          "detail": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationNameentity"
              },
              {
                "$ref": "#/components/schemas/Individualname"
              }
            ],
            "description": "Details of the name"
          }
        },
        "description": "Name entity associated with the payment initiation party"
      },
      "PaymentInitiationPartyNameentity3": {
        "title": "PaymentInitiationPartyNameentity3",
        "type": "object",
        "properties": {
          "aliasName": {
            "type": "string",
            "description": "Alias name"
          },
          "detail": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationNameentity"
              },
              {
                "$ref": "#/components/schemas/Individualname"
              }
            ],
            "description": "Details of the name"
          }
        },
        "description": "Details of the name"
      },
      "PaymentMethodentity2": {
        "title": "PaymentMethodentity2",
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "string",
            "description": "Unique identifier of the payment method"
          },
          "externalLocalInstrument1Code": {
            "type": "string",
            "description": "Unique identifier code of the payment method rail as documented\ninternally to the FI. This is aligned with ISO 20022 pain.001,\ntransaction level"
          },
          "externalClearingSystemIdentification1Code": {
            "type": "string",
            "description": "Unique identifier code of the external clearing system.\nThis is aligned with ISO 20022 pacs.008 group level. It can be\nused to send the payment rail for the payment. ISO has already\nlisted codes in the fields which indicates the payment rail like\n\"ACH\" for ACH, \"ACS\" for EFT Payments, \"LVT\" for Canada LVTS,\n\"LYX\" for Lynx Canada, etc."
          },
          "externalClearingSystemIdentification1Proprietary": {
            "type": "string",
            "description": "For few examples where the payment rail is not part of the ISO 20022 scope"
          }
        },
        "description": "Payment method details"
      },
      "PaymentStatus1": {
        "title": "PaymentStatus1",
        "enum": [
          "CANCELLED",
          "FAILED",
          "NOFUNDS",
          "PROCESSED",
          "PROCESSING",
          "SCHEDULED"
        ],
        "type": "string",
        "description": "CANCELLED, FAILED, NOFUNDS, PROCESSED, PROCESSING, SCHEDULED"
      },
      "PaymentStatus3": {
        "title": "PaymentStatus3",
        "enum": [
          "CANCELLED",
          "FAILED",
          "NOFUNDS",
          "PROCESSED",
          "PROCESSING",
          "SCHEDULED"
        ],
        "type": "string",
        "description": "Defines the status of the payment"
      },
      "RecurringPaymentDurationentity2": {
        "title": "RecurringPaymentDurationentity2",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentDurationType2"
              },
              {
                "description": "Type of duration"
              }
            ]
          },
          "numberOfTimes": {
            "type": "number",
            "description": "Maximum number of times a payment is to be sent. Required if type is set to NUMBEROFTIMES"
          }
        },
        "description": "Defines how long the payment repeats for"
      },
      "RecurringPaymentDurationType2": {
        "title": "RecurringPaymentDurationType2",
        "enum": [
          "NOEND",
          "NUMBEROFTIMES"
        ],
        "type": "string",
        "description": "Type of duration"
      },
      "RecurringPaymentforUpdateentity1": {
        "title": "RecurringPaymentforUpdateentity1",
        "required": [
          "frequency",
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentFrequency2"
              },
              {
                "description": "Defines how often the payment repeats"
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentDurationentity2"
              },
              {
                "description": "Defines how long the payment repeats for"
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "The data of the Recurring Payment to be scheduled"
      },
      "RecurringPaymentforUpdateentity2": {
        "title": "RecurringPaymentforUpdateentity2",
        "required": [
          "frequency",
          "fromAccountId",
          "toPayeeId",
          "amount",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentFrequency2"
              },
              {
                "description": "Defines how often the payment repeats"
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPaymentDurationentity2"
              },
              {
                "description": "Defines how long the payment repeats for"
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the account used to source funds for payment"
          },
          "toPayeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "ID of the payee to receive funds for the payment"
          },
          "amount": {
            "minimum": 0.0,
            "type": "number",
            "description": "Amount for the payment. Must be positive"
          },
          "merchantAccountId": {
            "type": "string",
            "description": "User's account identifier with the merchant"
          },
          "dueDate": {
            "type": "string",
            "description": "Date that the funds are scheduled to be delivered",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "The data of the Recurring Payment to be updated"
      },
      "RecurringPaymentFrequency2": {
        "title": "RecurringPaymentFrequency2",
        "enum": [
          "WEEKLY",
          "BIWEEKLY",
          "TWICEMONTHLY",
          "MONTHLY",
          "FOURWEEKS",
          "BIMONTHLY",
          "QUARTERLY",
          "SEMIANNUALLY",
          "ANNUALLY"
        ],
        "type": "string",
        "description": "Defines how often the payment repeats"
      },
      "RecurringPaymentStatus2": {
        "title": "RecurringPaymentStatus2",
        "enum": [
          "CANCELLED",
          "FAILED",
          "PROCESSED",
          "SCHEDULED"
        ],
        "type": "string",
        "description": "Defines the status of the recurring payment"
      },
      "SynchronizableArrayLinksentity2": {
        "title": "SynchronizableArrayLinksentity2",
        "type": "object",
        "properties": {
          "next": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving next dataset"
              }
            ]
          },
          "prev": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving previous dataset"
              }
            ]
          },
          "updates": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HATEOASLink"
              },
              {
                "description": "Resource URL for retrieving updates since last request"
              }
            ]
          }
        },
        "description": "Resource URLs for navigating result sets"
      },
      "TransferforCreateentity1": {
        "title": "TransferforCreateentity1",
        "type": "object",
        "properties": {
          "transferId": {
            "maxLength": 256,
            "type": "string",
            "description": "Client generated, long-term persistent identity of the transfer action. This ID should be maintained and returned by institution"
          },
          "fromAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account"
          },
          "toAccountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the destination account"
          },
          "amount": {
            "type": "number",
            "description": "Positive amount of money to be transferred"
          },
          "memo": {
            "maxLength": 255,
            "type": "string",
            "description": "User-entered reason for transfer"
          },
          "paymentDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentDetailsentity"
              },
              {
                "description": "Payment details"
              }
            ]
          }
        },
        "description": "Data of the transfer request"
      },
      "UpdatesMetadataentity2": {
        "title": "UpdatesMetadataentity2",
        "type": "object",
        "properties": {
          "nextUpdateId": {
            "maxLength": 256,
            "type": "string",
            "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific"
          }
        },
        "description": "Update IDs for retrieving updates since query"
      },
      "BasePayrollRate": {
        "title": "BasePayrollRate",
        "required": [
          "rate",
          "rateType"
        ],
        "type": "object",
        "properties": {
          "rate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount"
              },
              {
                "description": "The amount and currency of the base pay rate of employee"
              }
            ]
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PayrollRateType2"
              },
              {
                "description": "Whether the worker's rate is ANNUAL, DAILY, HOURLY, OTHER"
              }
            ]
          }
        },
        "description": "Provides a person's base pay rate"
      },
      "Employeeentity": {
        "title": "Employeeentity",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The person's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "taxId": {
            "type": "string",
            "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)"
          },
          "taxIdCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country originating the Customer's taxId element"
              }
            ]
          },
          "governmentId": {
            "type": "string",
            "description": "A federal (such as passport) or state (such as driver's license) issued identifier"
          },
          "employeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "Provider's long-term persistent id for the employee"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Employee's full name"
              }
            ]
          }
        },
        "description": "Represents an employee"
      },
      "Employerentity": {
        "title": "Employerentity",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "employerId": {
            "maxLength": 256,
            "type": "string",
            "description": "Provider's long-term persistent id for the employer"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "The employer's name"
              }
            ]
          },
          "dbas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Doing Business As names for this employer"
          },
          "taxId": {
            "type": "string",
            "description": "Country specific Tax Id associated with this employer (FEIN in USA or BN in Canada)"
          },
          "taxIdCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country originating the employer's taxId element"
              }
            ]
          },
          "contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Contactsentity"
              },
              {
                "description": "Employer's various contact information"
              }
            ]
          }
        },
        "description": "Represents an employer"
      },
      "Employment": {
        "title": "Employment",
        "required": [
          "employer",
          "status"
        ],
        "type": "object",
        "properties": {
          "employer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Employerentity1"
              },
              {
                "description": "The employer for the job/position"
              }
            ]
          },
          "jobTitle": {
            "type": "string",
            "description": "The title of the job/position"
          },
          "originalHireDate": {
            "type": "string",
            "description": "The date when employee joined for the first time.",
            "format": "date",
            "example": "2021-07-15"
          },
          "mostRecentHireDate": {
            "type": "string",
            "description": "The date when employee re-joined most recently.",
            "format": "date",
            "example": "2021-07-15"
          },
          "endDate": {
            "type": "string",
            "description": "The employment end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActiveInactiveStatus2"
              },
              {
                "description": "The employee's employment status, ACTIVE or INACTIVE"
              }
            ]
          },
          "supplementalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplementalStatus2"
              },
              {
                "description": "Supplemental detail of employee's employment status"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Employmenttype2"
              },
              {
                "description": "The employee's employment type, CONTRACTED, FULL-TIME, OTHER, PART-TIME, SEASONAL, TEMPORARY"
              }
            ]
          }
        },
        "description": "Provides a person's employment details"
      },
      "PaymentAmounts": {
        "title": "PaymentAmounts",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount1"
              },
              {
                "description": "Total gross pay for covered period"
              }
            ]
          },
          "base": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount2"
              },
              {
                "description": "Base pay part of Gross pay for covered period"
              }
            ]
          },
          "bonus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount3"
              },
              {
                "description": "Bonus pay for covered period"
              }
            ]
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount4"
              },
              {
                "description": "Commission for covered period"
              }
            ]
          },
          "overtime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount5"
              },
              {
                "description": "Overtime pay for covered period"
              }
            ]
          },
          "otherEarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtherMonetaryAmount"
            },
            "description": "Other earnings received in covered period"
          }
        },
        "description": "Year to date amounts for current and previous years"
      },
      "Income": {
        "title": "Income",
        "required": [
          "payrollFrequency"
        ],
        "type": "object",
        "properties": {
          "baseRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasePayrollRate1"
              },
              {
                "description": "The employee's base payroll rate"
              }
            ]
          },
          "payrollFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PayrollFrequencytype2"
              },
              {
                "description": "The frequency of payments"
              }
            ]
          },
          "latestPayDate": {
            "type": "string",
            "description": "The date of employee's most recent pay",
            "format": "date",
            "example": "2021-07-15"
          },
          "latestPayPeriodEndDate": {
            "type": "string",
            "description": "The end date of employee's most recent pay period",
            "format": "date",
            "example": "2021-07-15"
          },
          "annualPay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAmounts1"
              },
              {
                "description": "Year-to-date pay for current year and total annual pay for previous years"
              }
            ]
          }
        },
        "description": "Provides a person's employment income details. Applicable only for VOIE (Verification of Income and Employment) data retrieval"
      },
      "OtherMonetaryAmount": {
        "title": "OtherMonetaryAmount",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The source name of this monetary amount"
          }
        },
        "description": "A monetary amount with its source name and its currency code"
      },
      "PaymentAmounts3": {
        "title": "PaymentAmounts3",
        "required": [
          "year",
          "grossPay"
        ],
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "The year in which this income was earned",
            "format": "int32"
          },
          "grossPay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAmounts2"
              },
              {
                "description": "Gross pay for covered period"
              }
            ]
          },
          "netPay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount6"
              },
              {
                "description": "Net pay for covered period"
              }
            ]
          }
        },
        "description": "Year to date amounts for current and previous years"
      },
      "PayrollReportentity": {
        "title": "PayrollReportentity",
        "required": [
          "reportId",
          "reportType",
          "generationDate",
          "employee",
          "employment"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "maxLength": 256,
            "type": "string",
            "description": "The report identification number"
          },
          "reportType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PayrollReportType1"
              },
              {
                "description": "The type of report"
              }
            ]
          },
          "generationDate": {
            "type": "string",
            "description": "The generation date of the report",
            "format": "date",
            "example": "2021-07-15"
          },
          "dataAsOf": {
            "type": "string",
            "description": "The data in the report is as of this date.",
            "format": "date",
            "example": "2021-07-15"
          },
          "employee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Employeeentity1"
              },
              {
                "description": "The employee"
              }
            ]
          },
          "employment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Employment1"
              },
              {
                "description": "The employee's employment"
              }
            ]
          },
          "incomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Income"
            },
            "description": "The employee's year to date income amounts for current and previous years omitted for Verification of Employment requests (VOE), included for Verification of Income and Employment requests (VOI / VOIE)"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this payroll report, or to invoke related APIs"
          }
        },
        "description": "An employee's Payroll Report"
      },
      "PayrollReportListentity": {
        "title": "PayrollReportListentity",
        "type": "object",
        "properties": {
          "summaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayrollReportSummaryentity"
            },
            "description": "Zero or more PayrollReportSummaries for lightweight response"
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayrollReportentity"
            },
            "description": "Zero or more PayrollReports, for details response"
          }
        },
        "description": "Response object for /payroll/report API with list of reports available"
      },
      "PayrollReportSummaryentity": {
        "title": "PayrollReportSummaryentity",
        "required": [
          "reportId",
          "reportType",
          "generationDate",
          "employeeName",
          "employerName"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "maxLength": 256,
            "type": "string",
            "description": "The report identification number"
          },
          "reportType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PayrollReportType1"
              },
              {
                "description": "The type of report"
              }
            ]
          },
          "generationDate": {
            "type": "string",
            "description": "The generation date of the report",
            "format": "date",
            "example": "2021-07-15"
          },
          "dataAsOf": {
            "type": "string",
            "description": "The data in the report is as of this date.",
            "format": "date",
            "example": "2021-07-15"
          },
          "employeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "Provider's long-term persistent id for the employee"
          },
          "employeeName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Employee's full name"
              }
            ]
          },
          "employerId": {
            "maxLength": 256,
            "type": "string",
            "description": "The employer for this report"
          },
          "employerName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "The employer's name"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this payroll report, or to invoke related APIs"
          }
        },
        "description": "The list of payroll reports for an employee"
      },
      "ActiveInactiveStatus": {
        "title": "ActiveInactiveStatus",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "type": "string",
        "description": "Specifies the employment status of ACTIVE or INACTIVE"
      },
      "Employmenttype": {
        "title": "Employmenttype",
        "enum": [
          "CONTRACTED",
          "FULL_TIME",
          "OTHER",
          "PART_TIME",
          "SEASONAL",
          "TEMPORARY"
        ],
        "type": "string",
        "description": "Specifies the employment type, such as CONTRACTED, FULL-TIME, OTHER, PART-TIME, SEASONAL, TEMPORARY"
      },
      "PayrollFrequencytype": {
        "title": "PayrollFrequencytype",
        "enum": [
          "ANNUALLY",
          "BI_WEEKLY",
          "DAILY",
          "EVERY_2_6_WEEKS",
          "EVERY_4_WEEKS",
          "EVERY_5_2_WEEKS",
          "MONTHLY",
          "QUARTERLY",
          "SEMI_ANNUALLY",
          "SEMI_MONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "The frequency of employee payments"
      },
      "PayrollRateType": {
        "title": "PayrollRateType",
        "enum": [
          "ANNUAL",
          "DAILY",
          "HOURLY",
          "OTHER"
        ],
        "type": "string",
        "description": "Specifies whether the employee's pay is ANNUAL, DAILY, HOURLY, OTHER"
      },
      "PayrollReportType": {
        "title": "PayrollReportType",
        "enum": [
          "VOE",
          "VOIE"
        ],
        "type": "string",
        "description": "The type of payroll report, VOE - for Verification of Employment, VOIE - for Verification of Income and Employment"
      },
      "SupplementalStatus": {
        "title": "SupplementalStatus",
        "enum": [
          "FURLOUGHED",
          "LEAVE",
          "MEDICAL_LEAVE",
          "MILITARY_LEAVE",
          "PATERNITY_LEAVE",
          "QUIT",
          "RETIRED",
          "TERMINATED",
          "VACATION"
        ],
        "type": "string",
        "description": "Additional information about ACTIVE/INACTIVE employment status"
      },
      "ActiveInactiveStatus2": {
        "title": "ActiveInactiveStatus2",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "type": "string",
        "description": "The employee's employment status, ACTIVE or INACTIVE"
      },
      "BasePayrollRate1": {
        "title": "BasePayrollRate1",
        "required": [
          "rate",
          "rateType"
        ],
        "type": "object",
        "properties": {
          "rate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount"
              },
              {
                "description": "The amount and currency of the base pay rate of employee"
              }
            ]
          },
          "rateType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PayrollRateType2"
              },
              {
                "description": "Whether the worker's rate is ANNUAL, DAILY, HOURLY, OTHER"
              }
            ]
          }
        },
        "description": "The employee's base payroll rate"
      },
      "Businessname": {
        "title": "Businessname",
        "type": "object",
        "properties": {
          "name1": {
            "type": "string",
            "description": "Name line 1"
          },
          "name2": {
            "type": "string",
            "description": "Name line 2"
          }
        },
        "description": "The employer's name"
      },
      "Contactsentity": {
        "title": "Contactsentity",
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          }
        },
        "description": "Employer's various contact information"
      },
      "Employeeentity1": {
        "title": "Employeeentity1",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the contact email addresses"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryAddress"
            },
            "description": "Array of the contact physical addresses"
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            },
            "description": "Array of the contact telephone numbers"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The person's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "taxId": {
            "type": "string",
            "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)"
          },
          "taxIdCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country originating the Customer's taxId element"
              }
            ]
          },
          "governmentId": {
            "type": "string",
            "description": "A federal (such as passport) or state (such as driver's license) issued identifier"
          },
          "employeeId": {
            "maxLength": 256,
            "type": "string",
            "description": "Provider's long-term persistent id for the employee"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Employee's full name"
              }
            ]
          }
        },
        "description": "The employee"
      },
      "Employerentity1": {
        "title": "Employerentity1",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "employerId": {
            "maxLength": 256,
            "type": "string",
            "description": "Provider's long-term persistent id for the employer"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "The employer's name"
              }
            ]
          },
          "dbas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Doing Business As names for this employer"
          },
          "taxId": {
            "type": "string",
            "description": "Country specific Tax Id associated with this employer (FEIN in USA or BN in Canada)"
          },
          "taxIdCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country originating the employer's taxId element"
              }
            ]
          },
          "contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Contactsentity"
              },
              {
                "description": "Employer's various contact information"
              }
            ]
          }
        },
        "description": "The employer for the job/position"
      },
      "Employmenttype2": {
        "title": "Employmenttype2",
        "enum": [
          "CONTRACTED",
          "FULL_TIME",
          "OTHER",
          "PART_TIME",
          "SEASONAL",
          "TEMPORARY"
        ],
        "type": "string",
        "description": "The employee's employment type, CONTRACTED, FULL-TIME, OTHER, PART-TIME, SEASONAL, TEMPORARY"
      },
      "Employment1": {
        "title": "Employment1",
        "required": [
          "employer",
          "status"
        ],
        "type": "object",
        "properties": {
          "employer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Employerentity1"
              },
              {
                "description": "The employer for the job/position"
              }
            ]
          },
          "jobTitle": {
            "type": "string",
            "description": "The title of the job/position"
          },
          "originalHireDate": {
            "type": "string",
            "description": "The date when employee joined for the first time.",
            "format": "date",
            "example": "2021-07-15"
          },
          "mostRecentHireDate": {
            "type": "string",
            "description": "The date when employee re-joined most recently.",
            "format": "date",
            "example": "2021-07-15"
          },
          "endDate": {
            "type": "string",
            "description": "The employment end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActiveInactiveStatus2"
              },
              {
                "description": "The employee's employment status, ACTIVE or INACTIVE"
              }
            ]
          },
          "supplementalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplementalStatus2"
              },
              {
                "description": "Supplemental detail of employee's employment status"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Employmenttype2"
              },
              {
                "description": "The employee's employment type, CONTRACTED, FULL-TIME, OTHER, PART-TIME, SEASONAL, TEMPORARY"
              }
            ]
          }
        },
        "description": "The employee's employment"
      },
      "MonetaryAmount": {
        "title": "MonetaryAmount",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "The amount and currency of the base pay rate of employee"
      },
      "MonetaryAmount1": {
        "title": "MonetaryAmount1",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "Total gross pay for covered period"
      },
      "MonetaryAmount2": {
        "title": "MonetaryAmount2",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "Base pay part of Gross pay for covered period"
      },
      "MonetaryAmount3": {
        "title": "MonetaryAmount3",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "Bonus pay for covered period"
      },
      "MonetaryAmount4": {
        "title": "MonetaryAmount4",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "Commission for covered period"
      },
      "MonetaryAmount5": {
        "title": "MonetaryAmount5",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "Overtime pay for covered period"
      },
      "MonetaryAmount6": {
        "title": "MonetaryAmount6",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The monetary amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO4217CurrencyCode"
              },
              {
                "description": "Currency code of the monetary amount"
              }
            ]
          }
        },
        "description": "Net pay for covered period"
      },
      "PaymentAmounts1": {
        "title": "PaymentAmounts1",
        "required": [
          "year",
          "grossPay"
        ],
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "The year in which this income was earned",
            "format": "int32"
          },
          "grossPay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAmounts2"
              },
              {
                "description": "Gross pay for covered period"
              }
            ]
          },
          "netPay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount6"
              },
              {
                "description": "Net pay for covered period"
              }
            ]
          }
        },
        "description": "Year-to-date pay for current year and total annual pay for previous years"
      },
      "PaymentAmounts2": {
        "title": "PaymentAmounts2",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount1"
              },
              {
                "description": "Total gross pay for covered period"
              }
            ]
          },
          "base": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount2"
              },
              {
                "description": "Base pay part of Gross pay for covered period"
              }
            ]
          },
          "bonus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount3"
              },
              {
                "description": "Bonus pay for covered period"
              }
            ]
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount4"
              },
              {
                "description": "Commission for covered period"
              }
            ]
          },
          "overtime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonetaryAmount5"
              },
              {
                "description": "Overtime pay for covered period"
              }
            ]
          },
          "otherEarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtherMonetaryAmount"
            },
            "description": "Other earnings received in covered period"
          }
        },
        "description": "Gross pay for covered period"
      },
      "PayrollFrequencytype2": {
        "title": "PayrollFrequencytype2",
        "enum": [
          "ANNUALLY",
          "BI_WEEKLY",
          "DAILY",
          "EVERY_2_6_WEEKS",
          "EVERY_4_WEEKS",
          "EVERY_5_2_WEEKS",
          "MONTHLY",
          "QUARTERLY",
          "SEMI_ANNUALLY",
          "SEMI_MONTHLY",
          "WEEKLY"
        ],
        "type": "string",
        "description": "The frequency of payments"
      },
      "PayrollRateType2": {
        "title": "PayrollRateType2",
        "enum": [
          "ANNUAL",
          "DAILY",
          "HOURLY",
          "OTHER"
        ],
        "type": "string",
        "description": "Whether the worker's rate is ANNUAL, DAILY, HOURLY, OTHER"
      },
      "PayrollReportType1": {
        "title": "PayrollReportType1",
        "enum": [
          "VOE",
          "VOIE"
        ],
        "type": "string",
        "description": "The type of report"
      },
      "SupplementalStatus2": {
        "title": "SupplementalStatus2",
        "enum": [
          "FURLOUGHED",
          "LEAVE",
          "MEDICAL_LEAVE",
          "MILITARY_LEAVE",
          "PATERNITY_LEAVE",
          "QUIT",
          "RETIRED",
          "TERMINATED",
          "VACATION"
        ],
        "type": "string",
        "description": "Supplemental detail of employee's employment status"
      },
      "RecipientProvider": {
        "title": "RecipientProvider",
        "required": [
          "client_name",
          "redirect_uris",
          "client_id",
          "grant_types",
          "token_endpoint_auth_method",
          "status"
        ],
        "type": "object",
        "properties": {
          "client_name": {
            "maxLength": 256,
            "type": "string",
            "description": "The Data Recipient or Data Recipient Application name displayed by Data Provider during the consent Flow as well as in the Consent Dashboard"
          },
          "description": {
            "type": "string",
            "description": "A short description of the Data Recipient application"
          },
          "redirect_uris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of eligible Redirect URI targets"
          },
          "logo_uri": {
            "type": "string",
            "description": "Data Recipient Logo URL location"
          },
          "client_uri": {
            "type": "string",
            "description": "The URI which provides additional information about the Data Recipient"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of strings representing ways to contact individuals responsible for the Data Recipient application"
          },
          "scope": {
            "type": "string",
            "description": "String form field with a list of data clusters"
          },
          "duration_type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentDurationType"
            },
            "description": "The duration of consent for the Data Recipient consumers"
          },
          "duration_period": {
            "type": "integer",
            "description": "The maximum consent duration in days for duration_type TIME_BOUND for the Data Recipient, effective from the date of consent",
            "format": "int32"
          },
          "lookback_period": {
            "type": "integer",
            "description": "The maximum number of days allowed for Data Recipient to obtain in transaction history, effective from the current date",
            "format": "int32"
          },
          "registry_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryReference"
            },
            "description": "An array of external registries containing registered entity name, registered entity id and registry fields for the registries where the data recipient is registered"
          },
          "intermediaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Intermediary"
            },
            "description": "An array of the intermediaries for this data recipient"
          },
          "client_id": {
            "type": "string",
            "description": "OAuth 2.0 client identifier.  Unique ID representing Data Recipient and Identity Chain combination"
          },
          "client_secret": {
            "type": "string",
            "description": "OAuth 2.0 client secret string"
          },
          "grant_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of OAuth 2.0 grants made available to the Data Recipient"
          },
          "token_endpoint_auth_method": {
            "type": "string",
            "description": "Requested Authentication method for Authorization Server"
          },
          "registration_client_uri": {
            "type": "string",
            "description": "Fully qualified URI for subsequent DCR calls (GET, PUT, DELETE) for managing the Data Recipient registration"
          },
          "status": {
            "type": "string",
            "description": "Status of FDX OAuth 2.0 extension"
          },
          "registration_access_token": {
            "type": "string",
            "description": "String containing a unique DCR access token to be used in subsequent operations to manage the Data Recipient"
          }
        },
        "description": "Record of Recipient at the Provider. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)"
      },
      "Intermediary": {
        "title": "Intermediary",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of intermediary party"
          },
          "description": {
            "type": "string",
            "description": "A short description of the intermediary"
          },
          "uri": {
            "type": "string",
            "description": "A URL string of a web page providing information about the intermediary"
          },
          "logo_uri": {
            "type": "string",
            "description": "A URL string that references a logo for this intermediary"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of strings representing ways to contact people responsible for this intermediary"
          },
          "registry_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryReference"
            },
            "description": "Registry references for this intermediary"
          }
        },
        "description": "Data Access Platform, Service Provider, or any other entity in the data sharing chain between a Data Provider to a Data Recipient. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)"
      },
      "RecipientRequest": {
        "title": "RecipientRequest",
        "required": [
          "client_name",
          "redirect_uris"
        ],
        "type": "object",
        "properties": {
          "client_name": {
            "maxLength": 256,
            "type": "string",
            "description": "The Data Recipient or Data Recipient Application name displayed by Data Provider during the consent Flow as well as in the Consent Dashboard"
          },
          "description": {
            "type": "string",
            "description": "A short description of the Data Recipient application"
          },
          "redirect_uris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of eligible Redirect URI targets"
          },
          "logo_uri": {
            "type": "string",
            "description": "Data Recipient Logo URL location"
          },
          "client_uri": {
            "type": "string",
            "description": "The URI which provides additional information about the Data Recipient"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of strings representing ways to contact individuals responsible for the Data Recipient application"
          },
          "scope": {
            "type": "string",
            "description": "String form field with a list of data clusters"
          },
          "duration_type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentDurationType"
            },
            "description": "The duration of consent for the Data Recipient consumers"
          },
          "duration_period": {
            "type": "integer",
            "description": "The maximum consent duration in days for duration_type TIME_BOUND for the Data Recipient, effective from the date of consent",
            "format": "int32"
          },
          "lookback_period": {
            "type": "integer",
            "description": "The maximum number of days allowed for Data Recipient to obtain in transaction history, effective from the current date",
            "format": "int32"
          },
          "registry_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryReference"
            },
            "description": "An array of external registries containing registered entity name, registered entity id and registry fields for the registries where the data recipient is registered"
          },
          "intermediaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Intermediary"
            },
            "description": "An array of the intermediaries for this data recipient"
          }
        },
        "description": "Used to request a recipient registration. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)"
      },
      "RegistryReference": {
        "title": "RegistryReference",
        "type": "object",
        "properties": {
          "registered_entity_name": {
            "type": "string",
            "description": "The legal company name for the intermediary"
          },
          "registered_entity_id": {
            "type": "string",
            "description": "An ID representing the intermediary that can be looked up from a legal identity registry source"
          },
          "registry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Registry"
              },
              {
                "description": "The Registry source"
              }
            ]
          }
        },
        "description": "Used for registry references. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)"
      },
      "Recipientrecordatecosystemregistry": {
        "title": "Recipientrecordatecosystemregistry",
        "required": [
          "client_name",
          "redirect_uris",
          "recipient_id"
        ],
        "type": "object",
        "properties": {
          "client_name": {
            "maxLength": 256,
            "type": "string",
            "description": "The Data Recipient or Data Recipient Application name displayed by Data Provider during the consent Flow as well as in the Consent Dashboard"
          },
          "description": {
            "type": "string",
            "description": "A short description of the Data Recipient application"
          },
          "redirect_uris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of eligible Redirect URI targets"
          },
          "logo_uri": {
            "type": "string",
            "description": "Data Recipient Logo URL location"
          },
          "client_uri": {
            "type": "string",
            "description": "The URI which provides additional information about the Data Recipient"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of strings representing ways to contact individuals responsible for the Data Recipient application"
          },
          "scope": {
            "type": "string",
            "description": "String form field with a list of data clusters"
          },
          "duration_type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentDurationType"
            },
            "description": "The duration of consent for the Data Recipient consumers"
          },
          "duration_period": {
            "type": "integer",
            "description": "The maximum consent duration in days for duration_type TIME_BOUND for the Data Recipient, effective from the date of consent",
            "format": "int32"
          },
          "lookback_period": {
            "type": "integer",
            "description": "The maximum number of days allowed for Data Recipient to obtain in transaction history, effective from the current date",
            "format": "int32"
          },
          "registry_references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistryReference"
            },
            "description": "An array of external registries containing registered entity name, registered entity id and registry fields for the registries where the data recipient is registered"
          },
          "intermediaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Intermediary"
            },
            "description": "An array of the intermediaries for this data recipient"
          },
          "recipient_id": {
            "type": "string",
            "description": "Recipient Id at ecosystem registry"
          }
        },
        "description": "Record of Recipient at the Ecosystem Registry. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)."
      },
      "Recipientrecordsatecosystemregistry": {
        "title": "Recipientrecordsatecosystemregistry",
        "required": [
          "recipients"
        ],
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipientrecordatecosystemregistry"
            },
            "description": "Recipients retrieved by the operation"
          }
        },
        "description": "Recipient records at Ecosystem Registry. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)."
      },
      "BasicAuthCredentials": {
        "title": "BasicAuthCredentials",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "description": "Confidential and unique identifier of the tax form"
          },
          "passcode": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique, randomized and restricted password for this document"
          }
        },
        "description": "Tax form credentials container for QR Code purposes"
      },
      "BasicAuthforQR": {
        "title": "BasicAuthforQR",
        "type": "object",
        "properties": {
          "basicAuth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicAuthCredentials1"
              },
              {
                "description": "The Basic Authentication credentials to retrieve a tax form"
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FDXVersion"
              },
              {
                "description": "[Financial Data Exchange (FDX)](https://financialdataexchange.org/) schema version number (e.g. \"V5.0\")."
              }
            ]
          },
          "softwareId": {
            "type": "string",
            "description": "The FDX registration ID of company or software generating this tax data"
          }
        },
        "description": "Tax form credentials container for QR Code purposes"
      },
      "BusinessIncomeStatement": {
        "title": "BusinessIncomeStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "businessName": {
            "type": "string",
            "description": "Box C, Business name"
          },
          "sales": {
            "type": "number",
            "description": "Box 1, Gross receipts or sales"
          },
          "returns": {
            "type": "number",
            "description": "Box 2, Returns and allowances"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 6, Other income, including federal and state gasoline or fuel tax credit or refund"
          },
          "advertising": {
            "type": "number",
            "description": "Box 8, Advertising"
          },
          "carAndTruck": {
            "type": "number",
            "description": "Box 9, Car and truck expenses"
          },
          "commissions": {
            "type": "number",
            "description": "Box 10, Commissions and fees"
          },
          "contractLabor": {
            "type": "number",
            "description": "Box 11, Contract labor"
          },
          "depletion": {
            "type": "number",
            "description": "Box 12, Depletion"
          },
          "depreciation": {
            "type": "number",
            "description": "Box 13, Depreciation"
          },
          "employeeBenefits": {
            "type": "number",
            "description": "Box 14, Employee benefit programs"
          },
          "insurance": {
            "type": "number",
            "description": "Box 15, Insurance"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 16a, Mortgage interest"
          },
          "otherInterest": {
            "type": "number",
            "description": "Box 16b, Other interest"
          },
          "legal": {
            "type": "number",
            "description": "Box 17, Legal and professional services"
          },
          "office": {
            "type": "number",
            "description": "Box 18, Office expense"
          },
          "pension": {
            "type": "number",
            "description": "Box 19, Pension and profit-sharing plans"
          },
          "equipmentRent": {
            "type": "number",
            "description": "Box 20a, Equipment rent"
          },
          "otherRent": {
            "type": "number",
            "description": "Box 20b, Other rent"
          },
          "repairs": {
            "type": "number",
            "description": "Box 21, Repairs and maintenance"
          },
          "supplies": {
            "type": "number",
            "description": "Box 22, Supplies"
          },
          "taxes": {
            "type": "number",
            "description": "Box 23, Taxes and licenses"
          },
          "travel": {
            "type": "number",
            "description": "Box 24a, Travel"
          },
          "meals": {
            "type": "number",
            "description": "Box 24b, Deductible meals"
          },
          "utilities": {
            "type": "number",
            "description": "Box 25, Utilities"
          },
          "wages": {
            "type": "number",
            "description": "Box 26, Wages"
          },
          "otherExpenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 27, Other expenses"
          },
          "beginningInventory": {
            "type": "number",
            "description": "Box 35, Inventory at beginning of year"
          },
          "purchases": {
            "type": "number",
            "description": "Box 36, Purchases"
          },
          "costOfLabor": {
            "type": "number",
            "description": "Box 37, Cost of labor"
          },
          "materials": {
            "type": "number",
            "description": "Box 38, Materials and supplies"
          },
          "otherCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 39, Other costs"
          },
          "endingInventory": {
            "type": "number",
            "description": "Box 41, Inventory at end of year"
          },
          "capitalExpenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Capital expenditures, for use in calculating Depreciation"
          }
        },
        "description": "Business Income Statement for IRS Form 1040 Schedule C"
      },
      "CodeandAmount": {
        "title": "CodeandAmount",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          }
        },
        "description": "Code and amount pair used on IRS W-2, K-1, etc."
      },
      "Gainorlossfromcryptocurrencytransaction": {
        "title": "Gainorlossfromcryptocurrencytransaction",
        "type": "object",
        "properties": {
          "cryptocurrencyName": {
            "type": "string",
            "description": "Cryptocurrency name (e.g. Bitcoin)"
          },
          "symbol": {
            "type": "string",
            "description": "Cryptocurrency abbreviation or symbol (e.g. BTC)"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity (e.g. 0.0125662)"
          },
          "saleDescription": {
            "type": "string",
            "description": "Description of property (1099-B box 1a)"
          },
          "dateAcquired": {
            "type": "string",
            "description": "Date acquired (1099-B box 1b)",
            "format": "date",
            "example": "2021-07-15"
          },
          "variousDatesAcquired": {
            "type": "boolean",
            "description": "Acquired on various dates (1099-B box 1b)"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Date sold or disposed (1099-B box 1c)",
            "format": "date",
            "example": "2021-07-15"
          },
          "salesPrice": {
            "type": "number",
            "description": "Proceeds (not price per share, 1099-B box 1d)"
          },
          "costBasis": {
            "type": "number",
            "description": "Cost or other basis (1099-B box 1e)"
          },
          "longOrShort": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PositionType"
              },
              {
                "description": "LONG or SHORT (1099-B box 2)"
              }
            ]
          }
        },
        "description": "Tax information for a single cryptocurrency transaction. If reported on Form 1099-B, use Tax1099B and SecurityDetail instead of this entity."
      },
      "CryptocurrencyTaxStatementlist": {
        "title": "CryptocurrencyTaxStatementlist",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "gainsAndLosses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gainorlossfromcryptocurrencytransaction"
            },
            "description": "The list of cryptocurrency gains and losses"
          }
        },
        "description": "Array of cryptocurrency gains and losses"
      },
      "DateandAmount": {
        "title": "DateandAmount",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of amount. When used in 1098-Q, date of last payment in month",
            "format": "date",
            "example": "2021-07-15"
          },
          "description": {
            "type": "string",
            "description": "Description of amount. When used in 1098-Q, may use MonthAbbreviation"
          },
          "amount": {
            "type": "number",
            "description": "Amount of payment or receipt. When used in 1098-Q, monthly total"
          }
        },
        "description": "Date, description, and amount. When used in 1098-Q, description is optional"
      },
      "DescriptionandAmount": {
        "title": "DescriptionandAmount",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          }
        },
        "description": "Description and amount pair used on IRS W-2, etc."
      },
      "FarmIncomeStatement": {
        "title": "FarmIncomeStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "cropOrActivity": {
            "type": "string",
            "description": "Box A, Principal crop or activity"
          },
          "sales": {
            "type": "number",
            "description": "Box 1a, Sales of livestock and other resale items"
          },
          "costOfItemsSold": {
            "type": "number",
            "description": "Box 1b, Cost or other basis of livestock or other items"
          },
          "salesOfRaised": {
            "type": "number",
            "description": "Box 2, Sales of livestock, produce, grains, and other products you raised"
          },
          "coopDistributions": {
            "type": "number",
            "description": "Box 3a, Cooperative distributions"
          },
          "agProgramPayments": {
            "type": "number",
            "description": "Box 4a, Agricultural program payments"
          },
          "cccLoans": {
            "type": "number",
            "description": "Box 5a, Commodity Credit Corporation (CCC) loans reported under election"
          },
          "cropInsuranceProceeds": {
            "type": "number",
            "description": "Box 6a, Crop insurance proceeds and federal crop disaster payments"
          },
          "customHireIncome": {
            "type": "number",
            "description": "Box 7, Custom hire (machine work) income"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 8, Other income"
          },
          "carAndTruck": {
            "type": "number",
            "description": "Box 10, Car and truck expenses"
          },
          "chemicals": {
            "type": "number",
            "description": "Box 11, Chemicals"
          },
          "conservation": {
            "type": "number",
            "description": "Box 12, Conservation expenses"
          },
          "customHireExpenses": {
            "type": "number",
            "description": "Box 13, Custom hire (machine work)"
          },
          "depreciation": {
            "type": "number",
            "description": "Box 14, Depreciation"
          },
          "employeeBenefitPrograms": {
            "type": "number",
            "description": "Box 15, Employee benefit programs"
          },
          "feed": {
            "type": "number",
            "description": "Box 16, Feed"
          },
          "fertilizers": {
            "type": "number",
            "description": "Box 17, Fertilizers and lime"
          },
          "freight": {
            "type": "number",
            "description": "Box 18, Freight and trucking"
          },
          "fuel": {
            "type": "number",
            "description": "Box 19, Gasoline, fuel, and oil"
          },
          "insurance": {
            "type": "number",
            "description": "Box 20, Insurance (other than health)"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 21a, Mortgage Interest"
          },
          "otherInterest": {
            "type": "number",
            "description": "Box 21b, Other interest"
          },
          "laborHired": {
            "type": "number",
            "description": "Box 22, Labor hired"
          },
          "pension": {
            "type": "number",
            "description": "Box 23, Pension and profit-sharing plans"
          },
          "equipmentRent": {
            "type": "number",
            "description": "Box 24a, Rent or lease: Vehicles, machinery, equipment"
          },
          "otherRent": {
            "type": "number",
            "description": "Box 24b, Rent or lease: Other"
          },
          "repairs": {
            "type": "number",
            "description": "Box 25, Repairs and maintenance"
          },
          "seeds": {
            "type": "number",
            "description": "Box 26, Seeds and plants"
          },
          "storage": {
            "type": "number",
            "description": "Box 27, Storage and warehousing"
          },
          "supplies": {
            "type": "number",
            "description": "Box 28, Supplies"
          },
          "taxes": {
            "type": "number",
            "description": "Box 29, Taxes"
          },
          "utilities": {
            "type": "number",
            "description": "Box 30, Utilities"
          },
          "veterinary": {
            "type": "number",
            "description": "Box 31, Veterinary, breeding, and medicine"
          },
          "otherExpenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 32, Other expenses"
          },
          "capitalExpenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Capital expenditures, for use in calculating Depreciation"
          }
        },
        "description": "Farm Income Statement for IRS Form 1040 Schedule F"
      },
      "FarmRentalIncomeStatement": {
        "title": "FarmRentalIncomeStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "incomeFromProduction": {
            "type": "number",
            "description": "Box 1, Income from production of livestock, produce, grains, and other crops"
          },
          "coopDistributions": {
            "type": "number",
            "description": "Box 2a, Cooperative distributions"
          },
          "agProgramPayments": {
            "type": "number",
            "description": "Box 3a, Agricultural program payments"
          },
          "cccLoans": {
            "type": "number",
            "description": "Box 4a, Commodity Credit Corporation (CCC) loans reported under election"
          },
          "cropInsuranceProceeds": {
            "type": "number",
            "description": "Box 5a, Crop insurance proceeds and federal crop disaster payments"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 6, Other income"
          },
          "carAndTruck": {
            "type": "number",
            "description": "Box 8, Car and truck expenses"
          },
          "chemicals": {
            "type": "number",
            "description": "Box 9, Chemicals"
          },
          "conservation": {
            "type": "number",
            "description": "Box 10, Conservation expenses"
          },
          "customHireExpenses": {
            "type": "number",
            "description": "Box 11, Custom hire (machine work)"
          },
          "depreciation": {
            "type": "number",
            "description": "Box 12, Depreciation"
          },
          "employeeBenefitPrograms": {
            "type": "number",
            "description": "Box 13, Employee benefit programs"
          },
          "feed": {
            "type": "number",
            "description": "Box 14, Feed"
          },
          "fertilizers": {
            "type": "number",
            "description": "Box 15, Fertilizers and lime"
          },
          "freight": {
            "type": "number",
            "description": "Box 16, Freight and trucking"
          },
          "fuel": {
            "type": "number",
            "description": "Box 17, Gasoline, fuel, and oil"
          },
          "insurance": {
            "type": "number",
            "description": "Box 18, Insurance (other than health)"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 19a, Mortgage Interest"
          },
          "otherInterest": {
            "type": "number",
            "description": "Box 19b, Other interest"
          },
          "laborHired": {
            "type": "number",
            "description": "Box 20, Labor hired"
          },
          "pension": {
            "type": "number",
            "description": "Box 21, Pension and profit-sharing plans"
          },
          "equipmentRent": {
            "type": "number",
            "description": "Box 22a, Rent or lease: Vehicles, machinery, equipment"
          },
          "otherRent": {
            "type": "number",
            "description": "Box 22b, Rent or lease: Other"
          },
          "repairs": {
            "type": "number",
            "description": "Box 23, Repairs and maintenance"
          },
          "seeds": {
            "type": "number",
            "description": "Box 24, Seeds and plants"
          },
          "storage": {
            "type": "number",
            "description": "Box 25, Storage and warehousing"
          },
          "supplies": {
            "type": "number",
            "description": "Box 26, Supplies"
          },
          "taxes": {
            "type": "number",
            "description": "Box 27, Taxes"
          },
          "utilities": {
            "type": "number",
            "description": "Box 28, Utilities"
          },
          "veterinary": {
            "type": "number",
            "description": "Box 29, Veterinary, breeding, and medicine"
          },
          "otherExpenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 30, Other expenses"
          },
          "capitalExpenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Capital expenditures, for use in calculating Depreciation"
          }
        },
        "description": "Farm Rental Income Statement for IRS Form 4835"
      },
      "Form1042-SAgent": {
        "title": "Form1042-SAgent",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          }
        },
        "description": "One of various persons or businesses involved in Form 1042-S reporting. Use\n  * `tin` for\n    * Box 12a, Withholding Agent EIN,\n    * Box 13e, Recipient U.S. TIN,\n    * Box 14b, Primary Withholding Agent EIN,\n    * Box 15a, Intermediary or flow-through entity EIN,\n    * Box 16b, Payer TIN\n  * `individualName` or `businessName` for\n    * Box 12d, Withholding Agent name,\n    * Box 13a, Recipient name,\n    * Box 14a, Primary Withholding Agent name,\n    * Box 15d, Intermediary or flow-through entity name,\n    * Box 16a, Payer name\n  * `address.country` for\n    * Box 12f, Withholding Agent Country code,\n    * Box 13b, Recipient Country code,\n    * Box 15f, Intermediary or flow-through entity Country code\n  * `address` for\n    * Boxes 12h-i, Withholding Agent Address,\n    * Boxes 13c-d, Recipient Address,\n    * Boxes 15h-i, Intermediary or flow-through entity Address"
      },
      "Form1042-SRecipient": {
        "title": "Form1042-SRecipient",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          },
          "lobCode": {
            "type": "string",
            "description": "Box 13j, Recipient's LOB code, if any"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Box 13l, Recipient's date of birth",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Recipient for Form 1042-S, Boxes 13a-j, 13l"
      },
      "HealthInsuranceCoverage": {
        "title": "HealthInsuranceCoverage",
        "type": "object",
        "properties": {
          "enrollmentPremium": {
            "type": "number",
            "description": "Monthly enrollment premiums"
          },
          "slcspPremium": {
            "type": "number",
            "description": "Monthly second lowest cost silver plan (SLCSP) premium"
          },
          "advancePremiumTaxCreditPayment": {
            "type": "number",
            "description": "Monthly advance payment of premium tax credit"
          },
          "month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CoverageMonth3"
              },
              {
                "description": "Month of coverage"
              }
            ]
          }
        },
        "description": "Used on Form 1095-A Part III"
      },
      "HealthInsuranceCoveredIndividual": {
        "title": "HealthInsuranceCoveredIndividual",
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Name of responsible individual"
              }
            ]
          },
          "tin": {
            "type": "string",
            "description": "Social security number or other TIN"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "coveredAll12Months": {
            "type": "boolean",
            "description": "Covered all 12 months"
          },
          "coveredMonths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthAbbreviation"
            },
            "description": "Months covered"
          }
        },
        "description": "Used on Form 1095-B Part IV and Form 1095-C Part III"
      },
      "HealthInsuranceMarketplaceCoveredIndividual": {
        "title": "HealthInsuranceMarketplaceCoveredIndividual",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Covered individual name"
          },
          "tin": {
            "type": "string",
            "description": "Covered individual SSN"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Covered individual date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "policyStartDate": {
            "type": "string",
            "description": "Coverage start date",
            "format": "date",
            "example": "2021-07-15"
          },
          "policyTerminationDate": {
            "type": "string",
            "description": "Coverage termination date",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Used on Form 1095-A Part II"
      },
      "LocalTaxWithholding": {
        "title": "LocalTaxWithholding",
        "type": "object",
        "properties": {
          "taxWithheld": {
            "type": "number",
            "description": "Amount of local income tax withheld"
          },
          "localityName": {
            "type": "string",
            "description": "Locality name"
          },
          "income": {
            "type": "number",
            "description": "Income amount for local tax purposes"
          }
        },
        "description": "Income in a locality and its tax withholding"
      },
      "MonthandAmount": {
        "title": "MonthandAmount",
        "type": "object",
        "properties": {
          "month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MonthAbbreviation1"
              },
              {
                "description": "Month"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          }
        },
        "description": "Month and amount pair used on IRS Form 1099-K, etc."
      },
      "OfferofHealthInsuranceCoverage": {
        "title": "OfferofHealthInsuranceCoverage",
        "type": "object",
        "properties": {
          "coverageCode": {
            "type": "string",
            "description": "Offer of Coverage (enter required code)"
          },
          "requiredContribution": {
            "type": "number",
            "description": "Employee required contribution"
          },
          "section4980HCode": {
            "type": "string",
            "description": "Section 4980H Safe Harbor and Other Relief (enter code)"
          },
          "postalCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Box 17, ZIP Code"
          },
          "month": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CoverageMonth1"
              },
              {
                "description": "Month"
              }
            ]
          }
        },
        "description": "Health insurance coverage offer for part II of IRS Form 1095-C"
      },
      "RentalIncomeStatement": {
        "title": "RentalIncomeStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "propertyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Box 1a, Physical address of property (street, city, state, ZIP code)"
              }
            ]
          },
          "rents": {
            "type": "number",
            "description": "Box 3, Rents received"
          },
          "advertising": {
            "type": "number",
            "description": "Box 5, Advertising"
          },
          "auto": {
            "type": "number",
            "description": "Box 6, Auto and travel"
          },
          "cleaning": {
            "type": "number",
            "description": "Box 7, Cleaning and maintenance"
          },
          "commissions": {
            "type": "number",
            "description": "Box 8, Commissions"
          },
          "insurance": {
            "type": "number",
            "description": "Box 9, Insurance"
          },
          "legal": {
            "type": "number",
            "description": "Box 10, Legal and other professional fees"
          },
          "managementFees": {
            "type": "number",
            "description": "Box 11, Management fees"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 12, Mortgage interest paid to banks, etc."
          },
          "otherInterest": {
            "type": "number",
            "description": "Box 13, Other interest"
          },
          "repairs": {
            "type": "number",
            "description": "Box 14, Repairs"
          },
          "supplies": {
            "type": "number",
            "description": "Box 15, Supplies"
          },
          "taxes": {
            "type": "number",
            "description": "Box 16, Taxes"
          },
          "utilities": {
            "type": "number",
            "description": "Box 17, Utilities"
          },
          "depreciationExpense": {
            "type": "number",
            "description": "Box 18, Depreciation"
          },
          "otherExpenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 19, Other expenses"
          },
          "capitalExpenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Capital expenditures, for use in calculating Depreciation"
          }
        },
        "description": "Rental Income Statement for IRS Form 1040 Schedule E"
      },
      "RoyaltyIncomeStatement": {
        "title": "RoyaltyIncomeStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "propertyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Box 1a, Physical address of property (street, city, state, ZIP code)"
              }
            ]
          },
          "royalties": {
            "type": "number",
            "description": "Box 3, Royalties received"
          },
          "advertising": {
            "type": "number",
            "description": "Box 5, Advertising"
          },
          "auto": {
            "type": "number",
            "description": "Box 6, Auto and travel"
          },
          "cleaning": {
            "type": "number",
            "description": "Box 7, Cleaning and maintenance"
          },
          "commissions": {
            "type": "number",
            "description": "Box 8, Commissions"
          },
          "insurance": {
            "type": "number",
            "description": "Box 9, Insurance"
          },
          "legal": {
            "type": "number",
            "description": "Box 10, Legal and other professional fees"
          },
          "managementFees": {
            "type": "number",
            "description": "Box 11, Management fees"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 12, Mortgage interest paid to banks, etc."
          },
          "otherInterest": {
            "type": "number",
            "description": "Box 13, Other interest"
          },
          "repairs": {
            "type": "number",
            "description": "Box 14, Repairs"
          },
          "supplies": {
            "type": "number",
            "description": "Box 15, Supplies"
          },
          "taxes": {
            "type": "number",
            "description": "Box 16, Taxes"
          },
          "utilities": {
            "type": "number",
            "description": "Box 17, Utilities"
          },
          "depletionExpense": {
            "type": "number",
            "description": "Box 18, Depletion"
          },
          "otherExpenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 19, Other expenses"
          },
          "capitalExpenditures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Capital expenditures, for use in calculating Depreciation"
          }
        },
        "description": "Royalty Income Statement for IRS Form 1040 Schedule E"
      },
      "SecurityDetailIRSForm1099-B": {
        "title": "SecurityDetailIRSForm1099-B",
        "type": "object",
        "properties": {
          "checkboxOnForm8949": {
            "type": "string",
            "description": "Applicable checkbox on Form 8949"
          },
          "securityName": {
            "type": "string",
            "description": "Security name"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Number of shares"
          },
          "saleDescription": {
            "type": "string",
            "description": "Box 1a, Description of property"
          },
          "dateAcquired": {
            "type": "string",
            "description": "Box 1b, Date acquired",
            "format": "date",
            "example": "2021-07-15"
          },
          "variousDatesAcquired": {
            "type": "boolean",
            "description": "Box 1b, Date acquired Various"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Box 1c, Date sold or disposed",
            "format": "date",
            "example": "2021-07-15"
          },
          "salesPrice": {
            "type": "number",
            "description": "Box 1d, Proceeds (not price per share)"
          },
          "accruedMarketDiscount": {
            "type": "number",
            "description": "Box 1f, Accrued market discount"
          },
          "adjustmentCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Other adjustments (code and amount)"
          },
          "costBasis": {
            "type": "number",
            "description": "Box 1e, Cost or other basis"
          },
          "correctedCostBasis": {
            "type": "number",
            "description": "Corrected cost basis. May be supplied in lieu of adjustmentCode code B. If both adjustmentCodes and correctedCostBasis are supplied, costBasis plus adjustmentCode B should equal correctedCostBasis"
          },
          "washSaleLossDisallowed": {
            "type": "number",
            "description": "Box 1g, Wash sale loss disallowed"
          },
          "longOrShort": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PositionType"
              },
              {
                "description": "Box 2, LONG or SHORT"
              }
            ]
          },
          "ordinary": {
            "type": "boolean",
            "description": "Box 2, Ordinary"
          },
          "collectible": {
            "type": "boolean",
            "description": "Box 3, Collectibles"
          },
          "qof": {
            "type": "boolean",
            "description": "Box 3, Qualified Opportunity Fund (QOF)"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "noncoveredSecurity": {
            "type": "boolean",
            "description": "Box 5, Noncovered security"
          },
          "grossOrNet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SaleProceedsType2"
              },
              {
                "description": "Box 6, Reported to IRS: GROSS or NET"
              }
            ]
          },
          "lossNotAllowed": {
            "type": "boolean",
            "description": "Box 7, Loss not allowed based on proceeds"
          },
          "basisReported": {
            "type": "boolean",
            "description": "Box 12, Basis reported to IRS"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-16, State and Local tax withholding"
          },
          "cusip": {
            "type": "string",
            "description": "CUSIP number"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Foreign account tax compliance"
          },
          "expiredOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExpiredOptionType2"
              },
              {
                "description": "To indicate gain or loss resulted from option expiration. If salesPrice (1d, proceeds) is zero, use PURCHASED. If costBasis (1e) is zero, use GRANTED"
              }
            ]
          },
          "investmentSaleType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvestmentSaleType"
              },
              {
                "description": "Type of investment sale"
              }
            ]
          }
        },
        "description": "Tax information for a single security transaction"
      },
      "StateandLocalTaxWithholding": {
        "title": "StateandLocalTaxWithholding",
        "type": "object",
        "properties": {
          "stateCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              },
              {
                "description": "State two-digit code"
              }
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateTaxWithholding2"
              },
              {
                "description": "Amount of state income tax withheld"
              }
            ]
          },
          "local": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocalTaxWithholding1"
              },
              {
                "description": "Amount of local income tax withheld, if any"
              }
            ]
          }
        },
        "description": "Income in a state and/or locality and its or their tax withholding"
      },
      "StateTaxWithholding": {
        "title": "StateTaxWithholding",
        "type": "object",
        "properties": {
          "taxWithheld": {
            "type": "number",
            "description": "Amount of state income tax withheld"
          },
          "taxId": {
            "type": "string",
            "description": "Filer's state tax id"
          },
          "income": {
            "type": "number",
            "description": "Income amount for state tax purposes"
          }
        },
        "description": "Income in a state and its tax withholding"
      },
      "Tax": {
        "title": "Tax",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          }
        },
        "description": "Base entity for all IRS Tax forms"
      },
      "Form1041K-1": {
        "title": "Form1041K-1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "finalK1": {
            "type": "boolean",
            "description": "Final K-1"
          },
          "amendedK1": {
            "type": "boolean",
            "description": "Amended K-1"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "form1041T": {
            "type": "boolean",
            "description": "Box D, Check if Form 1041-T was filed"
          },
          "date1041T": {
            "type": "string",
            "description": "Box D, and enter the date it was filed",
            "format": "date",
            "example": "2021-07-15"
          },
          "final1041": {
            "type": "boolean",
            "description": "Box E, Check if this is the final Form 1041 for the estate or trust"
          },
          "domestic": {
            "type": "boolean",
            "description": "Box H, Domestic beneficiary"
          },
          "foreign": {
            "type": "boolean",
            "description": "Box H, Foreign beneficiary"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 1, Interest income"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 2a, Ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 2b, Qualified dividends"
          },
          "netShortTermGain": {
            "type": "number",
            "description": "Box 3, Net short-term capital gain"
          },
          "netLongTermGain": {
            "type": "number",
            "description": "Box 4a, Net long-term capital gain"
          },
          "gain28Rate": {
            "type": "number",
            "description": "Box 4b, 28% rate gain"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 4c, Unrecaptured section 1250 gain"
          },
          "otherPortfolioIncome": {
            "type": "number",
            "description": "Box 5, Other portfolio and nonbusiness income"
          },
          "ordinaryBusinessIncome": {
            "type": "number",
            "description": "Box 6, Ordinary business income"
          },
          "netRentalRealEstateIncome": {
            "type": "number",
            "description": "Box 7, Net rental real estate income"
          },
          "otherRentalIncome": {
            "type": "number",
            "description": "Box 8, Other rental income"
          },
          "directlyApportionedDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 9, Directly apportioned deductions"
          },
          "estateTaxDeduction": {
            "type": "number",
            "description": "Box 10, Estate tax deduction"
          },
          "finalYearDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 11, Final year deductions"
          },
          "fiduciary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty2"
              },
              {
                "description": "Box C, Fiduciary's name and address"
              }
            ]
          },
          "amtAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Alternative minimum tax adjustment"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 13, Credits and credit recapture"
          },
          "otherInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 14, Other information"
          }
        },
        "description": "Beneficiary's Share of Income, Deductions, Credits, etc., from Estate or Trust (boxes A-B as issuer) and Fiduciary (box C) to Beneficiary (boxes F-G as recipient)"
      },
      "Form1042-S": {
        "title": "Form1042-S",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "formId": {
            "type": "string",
            "description": "Unique form identifier"
          },
          "amended": {
            "type": "boolean",
            "description": "Amended"
          },
          "amendmentNumber": {
            "type": "integer",
            "description": "Amendment number",
            "format": "int32"
          },
          "incomeTypeCode": {
            "type": "string",
            "description": "Box 1, Income code"
          },
          "grossIncome": {
            "type": "number",
            "description": "Box 2, Gross income"
          },
          "chapterIndicator": {
            "type": "string",
            "description": "Box 3, Chapter indicator"
          },
          "ch3ExemptionCode": {
            "type": "string",
            "description": "Box 3a, Exemption code"
          },
          "ch3TaxRate": {
            "type": "number",
            "description": "Box 3b, Tax rate"
          },
          "ch4ExemptionCode": {
            "type": "string",
            "description": "Box 4a, Exemption code"
          },
          "ch4TaxRate": {
            "type": "number",
            "description": "Box 4b, Tax rate"
          },
          "withholdingAllowance": {
            "type": "number",
            "description": "Box 5, Withholding allowance"
          },
          "netIncome": {
            "type": "number",
            "description": "Box 6, Net income"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 7a, Federal tax withheld"
          },
          "escrowProceduresApplied": {
            "type": "boolean",
            "description": "Box 7b, Check if federal tax withheld was not deposited with the IRS because escrow procedures were applied"
          },
          "subsequentYear": {
            "type": "boolean",
            "description": "Box 7c, Check if withholding occurred in subsequent year with respect to a partnership interest"
          },
          "otherAgentsTaxWithheld": {
            "type": "number",
            "description": "Box 8, Tax withheld by other agents"
          },
          "recipientRepaidAmount": {
            "type": "number",
            "description": "Box 9, Overwithheld tax repaid to recipient pursuant to adjustment procedures"
          },
          "totalTaxWithholdingCredit": {
            "type": "number",
            "description": "Box 10, Total withholding credit"
          },
          "withholdingAgentTaxPaid": {
            "type": "number",
            "description": "Box 11, Tax paid by withholding agent (amounts not withheld)"
          },
          "withholdingAgent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent1"
              },
              {
                "description": "Boxes 12a-i, Withholding agent"
              }
            ]
          },
          "form1042Recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SRecipient1"
              },
              {
                "description": "Boxes 13a-j, 13l, Recipient for Form 1042-S"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "Box 13k, Recipient account number"
          },
          "primary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent2"
              },
              {
                "description": "Boxes 14a-b, Primary Withholding Agent"
              }
            ]
          },
          "prorataBasisReporting": {
            "type": "boolean",
            "description": "Box 15, Check if pro-rata basis reporting"
          },
          "intermediary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent3"
              },
              {
                "description": "Boxes 15a-i, Intermediary or flow thru entity"
              }
            ]
          },
          "payer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent4"
              },
              {
                "description": "Boxes 16a-e, Payer"
              }
            ]
          },
          "stateAndLocal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateandLocalTaxWithholding1"
              },
              {
                "description": "Box 17, State and Local tax withholding"
              }
            ]
          }
        },
        "description": "Foreign Person's U.S. Source Income Subject to Withholding, from WithholdingAgent (boxes 12a-i) to Recipient (boxes 13a-j, 13l as form1042Recipient)"
      },
      "Form1065K-1": {
        "title": "Form1065K-1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end data",
            "format": "date",
            "example": "2021-07-15"
          },
          "finalK1": {
            "type": "boolean",
            "description": "Final K-1"
          },
          "amendedK1": {
            "type": "boolean",
            "description": "Amended K-1"
          },
          "irsCenter": {
            "type": "string",
            "description": "Box C, IRS Center where partnership filed return"
          },
          "publiclyTraded": {
            "type": "boolean",
            "description": "Box D, Check if this is a publicly traded partnership (PTP)"
          },
          "generalPartner": {
            "type": "boolean",
            "description": "Box G, General partner or LLC member-manager"
          },
          "limitedPartner": {
            "type": "boolean",
            "description": "Box G, Limited partner or other LLC member"
          },
          "domestic": {
            "type": "boolean",
            "description": "Box H1, Domestic partner"
          },
          "foreign": {
            "type": "boolean",
            "description": "Box H1, Foreign partner"
          },
          "disregardedEntity": {
            "type": "boolean",
            "description": "Box H2, Check if the partner is a disregarded entity (DE), and enter the partner's TIN and Name"
          },
          "disregardedEntityTin": {
            "type": "string",
            "description": "Box H2, Disregarded entity partner's TIN"
          },
          "disregardedEntityName": {
            "type": "string",
            "description": "Box H2, Disregarded entity partner's Name"
          },
          "entityType": {
            "type": "string",
            "description": "Box I1, What type of entity is this partner?"
          },
          "retirementPlan": {
            "type": "boolean",
            "description": "Box I2, If this partner is a retirement plan (IRA/SEP/Keogh/etc.), check here"
          },
          "profitShareBegin": {
            "type": "number",
            "description": "Box J, Partner's share of profit - beginning"
          },
          "profitShareEnd": {
            "type": "number",
            "description": "Box J, Partner's share of profit - ending"
          },
          "lossShareBegin": {
            "type": "number",
            "description": "Box J, Partner's share of loss - beginning"
          },
          "lossShareEnd": {
            "type": "number",
            "description": "Box J, Partner's share of loss - ending"
          },
          "capitalShareBegin": {
            "type": "number",
            "description": "Box J, Partner's share of capital - beginning"
          },
          "capitalShareEnd": {
            "type": "number",
            "description": "Box J, Partner's share of capital - ending"
          },
          "decreaseDueToSaleOrExchange": {
            "type": "boolean",
            "description": "Box J, Check if decrease is due to sale or exchange of partnership interest. Deprecated and no longer used beginning tax year 2023. Use `decreaseDueToSale` and `decreaseDueToExchange` instead",
            "deprecated": true
          },
          "decreaseDueToSale": {
            "type": "boolean",
            "description": "Box J, Check if decrease is due to sale of partnership interest"
          },
          "decreaseDueToExchange": {
            "type": "boolean",
            "description": "Box J, Check if decrease is due to exchange of partnership interest"
          },
          "nonrecourseLiabilityShareBegin": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - beginning - nonrecourse"
          },
          "nonrecourseLiabilityShareEnd": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - ending - nonrecourse"
          },
          "qualifiedLiabilityShareBegin": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - beginning - qualified nonrecourse financing"
          },
          "qualifiedLiabilityShareEnd": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - ending - qualified nonrecourse financing"
          },
          "recourseLiabilityShareBegin": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - beginning - recourse"
          },
          "recourseLiabilityShareEnd": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - ending - recourse"
          },
          "includesLowerTierLiability": {
            "type": "boolean",
            "description": "Box K2, Check this box if item K1 includes liability amounts from lower tier partnerships"
          },
          "liabilitySubjectToGuarantees": {
            "type": "boolean",
            "description": "Box K3, Check if any of the above liability is subject to guarantees or other payment obligations by the partner"
          },
          "capitalAccountBegin": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Beginning capital account"
          },
          "capitalAccountContributions": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Capital contributed during the year"
          },
          "capitalAccountIncrease": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Current year net income (loss)"
          },
          "capitalAccountOther": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Other increase (decrease)"
          },
          "capitalAccountWithdrawals": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Withdrawals & distributions"
          },
          "capitalAccountEnd": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Ending capital account"
          },
          "builtInGain": {
            "type": "boolean",
            "description": "Box M, Did the partner contribute property with a built-in gain or loss? - Yes"
          },
          "unrecognizedSection704Begin": {
            "type": "number",
            "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - beginning"
          },
          "unrecognizedSection704End": {
            "type": "number",
            "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - ending"
          },
          "ordinaryIncome": {
            "type": "number",
            "description": "Box 1, Ordinary business income (loss)"
          },
          "netRentalRealEstateIncome": {
            "type": "number",
            "description": "Box 2, Net rental real estate income (loss)"
          },
          "otherRentalIncome": {
            "type": "number",
            "description": "Box 3, Other net rental income (loss)"
          },
          "guaranteedPaymentServices": {
            "type": "number",
            "description": "Box 4a, Guaranteed payments for services"
          },
          "guaranteedPaymentCapital": {
            "type": "number",
            "description": "Box 4b, Guaranteed payments for capital"
          },
          "guaranteedPayment": {
            "type": "number",
            "description": "Box 4c, Total guaranteed payments"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 5, Interest income"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 6a, Ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 6b, Qualified dividends"
          },
          "dividendEquivalents": {
            "type": "number",
            "description": "Box 6c, Dividend equivalents"
          },
          "royalties": {
            "type": "number",
            "description": "Box 7, Royalties"
          },
          "netShortTermGain": {
            "type": "number",
            "description": "Box 8, Net short-term capital gain (loss)"
          },
          "netLongTermGain": {
            "type": "number",
            "description": "Box 9a, Net long-term capital gain (loss)"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 9b, Collectibles (28%) gain (loss)"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 9c, Unrecaptured section 1250 gain"
          },
          "net1231Gain": {
            "type": "number",
            "description": "Box 10, Net section 1231 gain (loss)"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 11, Other income"
          },
          "section179Deduction": {
            "type": "number",
            "description": "Box 12, Section 179 deduction"
          },
          "otherDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 13, Other deductions"
          },
          "selfEmployment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 14, Self-employment earnings (loss)"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 15, Credits"
          },
          "scheduleK3": {
            "type": "boolean",
            "description": "Box 16, Schedule K-3 is attached"
          },
          "amtItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 17, Alternative minimum tax (AMT) items"
          },
          "taxExemptIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 18, Tax-exempt income and nondeductible expenses"
          },
          "distributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 19, Distributions"
          },
          "otherInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 20, Other information"
          },
          "foreignTaxPaid": {
            "type": "number",
            "description": "Box 21, Foreign taxes paid or accrued"
          },
          "multipleAtRiskActivities": {
            "type": "boolean",
            "description": "Box 22, More than one activity for at-risk purposes"
          },
          "multiplePassiveActivities": {
            "type": "boolean",
            "description": "Box 23, More than one activity for passive activity purposes"
          }
        },
        "description": "Partner's Share of Income, Deductions, Credits, etc., from Partnership (boxes A, D as issuer) to Partner (boxes E-F as recipient)"
      },
      "Form1095-A": {
        "title": "Form1095-A",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "marketplaceId": {
            "type": "string",
            "description": "Box 1, Marketplace identifier"
          },
          "marketplacePolicyNumber": {
            "type": "string",
            "description": "Box 2, Marketplace-assigned policy number"
          },
          "policyIssuerName": {
            "type": "string",
            "description": "Box 3, Policy issuer's name"
          },
          "recipientDateOfBirth": {
            "type": "string",
            "description": "Box 6, Recipient's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "spouseName": {
            "type": "string",
            "description": "Box 7, Recipient's spouse's name"
          },
          "spouseTin": {
            "type": "string",
            "description": "Box 8, Recipient's spouse's SSN"
          },
          "spouseDateOfBirth": {
            "type": "string",
            "description": "Box 9, Recipient's spouse's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "policyStartDate": {
            "type": "string",
            "description": "Box 10, Policy start date",
            "format": "date",
            "example": "2021-07-15"
          },
          "policyTerminationDate": {
            "type": "string",
            "description": "Box 11, Policy termination date",
            "format": "date",
            "example": "2021-07-15"
          },
          "coveredIndividuals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceMarketplaceCoveredIndividual"
            },
            "description": "Boxes 16+, Covered Individuals"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceCoverage"
            },
            "description": "Boxes 21-33, Coverage Information"
          }
        },
        "description": "Health Insurance Marketplace Statement, to Recipient (boxes 4-5, 12-15)"
      },
      "Form1095-B": {
        "title": "Form1095-B",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "responsibleDateOfBirth": {
            "type": "string",
            "description": "Box 3, Date of birth (if SSN or other TIN is not available)",
            "format": "date",
            "example": "2021-07-15"
          },
          "originOfHealthCoverageCode": {
            "type": "string",
            "description": "Box 8, Enter letter identifying Origin of the Health Coverage"
          },
          "employer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty3"
              },
              {
                "description": "Boxes 10-15, Employer EIN, name and address"
              }
            ]
          },
          "coveredIndividuals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceCoveredIndividual"
            },
            "description": "Boxes 23+, Covered Individuals"
          }
        },
        "description": "Health Coverage, from Issuer (boxes 16-22) to Responsible Individual (boxes 1-2, 4-7 as recipient)"
      },
      "Form1095-C": {
        "title": "Form1095-C",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "selfInsuredCoverage": {
            "type": "boolean",
            "description": "Self Insured Coverage"
          },
          "offersOfCoverage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferofHealthInsuranceCoverage"
            },
            "description": "Boxes 14-16, Employee Offer of Coverage"
          },
          "employeeAge": {
            "type": "integer",
            "description": "Employee's Age on January 1",
            "format": "int32"
          },
          "planStartMonth": {
            "type": "integer",
            "description": "Plan Start Month",
            "format": "int32"
          },
          "coveredIndividuals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceCoveredIndividual"
            },
            "description": "Boxes 17+, Covered Individuals"
          }
        },
        "description": "Employer-Provided Health Insurance Offer and Coverage, from Employer (boxes 7-13 as issuer) to Employee (boxes 1-6 as recipient)"
      },
      "Form1097-BTC": {
        "title": "Form1097-BTC",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "filingForCredit": {
            "type": "boolean",
            "description": "Form 1097-BTC issuer is: Issuer of bond or its agent filing current year Form 1097-BTC for credit being reported"
          },
          "asNominee": {
            "type": "boolean",
            "description": "Form 1097-BTC issuer is: An entity or a person that received or should have received a current year Form 1097-BTC and is distributing part or all of that credit to others"
          },
          "total": {
            "type": "number",
            "description": "Box 1, Total"
          },
          "bondCode": {
            "type": "string",
            "description": "Box 2a, Code"
          },
          "uniqueId": {
            "type": "string",
            "description": "Box 2b, Unique Identifier"
          },
          "bondType": {
            "type": "string",
            "description": "Box 3, Bond type"
          },
          "amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthandAmount"
            },
            "description": "Box 5, Amounts by month"
          },
          "comments": {
            "type": "string",
            "description": "Box 6, Comments"
          }
        },
        "description": "Bond Tax Credit, from FORM 1097-BTC ISSUER (1st-2nd boxes) to RECIPIENT (3rd-6th boxes)"
      },
      "Form1098": {
        "title": "Form1098",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "mortgagedProperties": {
            "type": "integer",
            "description": "Box 9, Number of properties securing the mortgage",
            "format": "int32"
          },
          "otherInformation": {
            "type": "string",
            "description": "Box 10, Other (property tax)"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 1, Mortgage interest received from borrower"
          },
          "outstandingPrincipal": {
            "type": "number",
            "description": "Box 2, Outstanding mortgage principal"
          },
          "originationDate": {
            "type": "string",
            "description": "Box 3, Mortgage origination date",
            "format": "date",
            "example": "2021-07-15"
          },
          "overpaidRefund": {
            "type": "number",
            "description": "Box 4, Refund of overpaid interest"
          },
          "mortgageInsurance": {
            "type": "number",
            "description": "Box 5, Mortgage insurance premiums"
          },
          "pointsPaid": {
            "type": "number",
            "description": "Box 6, Points paid on purchase of principal residence"
          },
          "isPropertyAddressSameAsBorrowerAddress": {
            "type": "boolean",
            "description": "Box 7, Is address of property securing mortgage same as PAYER'S/BORROWER'S address"
          },
          "acquisitionDate": {
            "type": "string",
            "description": "Box 11, Mortgage acquisition date",
            "format": "date",
            "example": "2021-07-15"
          },
          "propertyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Box 8, Address of property securing mortgage"
              }
            ]
          },
          "propertyTax": {
            "type": "number",
            "description": "Box 10, Property tax"
          },
          "propertyDescription": {
            "type": "string",
            "description": "Box 8, Description of property securing mortgage, if property securing mortgage has no address"
          }
        },
        "description": "Mortgage Interest Statement, from RECIPIENT/LENDER (1st-2nd boxes as issuer) to PAYER/BORROWER (3rd-6th boxes as recipient)"
      },
      "Form1098-C": {
        "title": "Form1098-C",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "dateOfContribution": {
            "type": "string",
            "description": "Box 1, Date of contribution",
            "format": "date",
            "example": "2021-07-15"
          },
          "odometerMileage": {
            "type": "integer",
            "description": "Box 2a, Odometer mileage",
            "format": "int32"
          },
          "carYear": {
            "type": "integer",
            "description": "Box 2b, Year",
            "format": "int32"
          },
          "make": {
            "type": "string",
            "description": "Box 2c, Make"
          },
          "model": {
            "type": "string",
            "description": "Box 2d, Model"
          },
          "vin": {
            "type": "string",
            "description": "Box 3, Vehicle or other identification number"
          },
          "armsLengthTransaction": {
            "type": "boolean",
            "description": "Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Box 4b, Date of sale",
            "format": "date",
            "example": "2021-07-15"
          },
          "grossProceeds": {
            "type": "number",
            "description": "Box 4c, Gross proceeds from sale (see instructions)"
          },
          "notTransferredBefore": {
            "type": "boolean",
            "description": "Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use"
          },
          "needyIndividual": {
            "type": "boolean",
            "description": "Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose"
          },
          "descriptionOfImprovements": {
            "type": "string",
            "description": "Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use"
          },
          "goodsInExchange": {
            "type": "boolean",
            "description": "Box 6a, Did you provide goods or services in exchange for the vehicle? Yes"
          },
          "valueOfExchange": {
            "type": "number",
            "description": "Box 6b, Value of goods and services provided in exchange for the vehicle"
          },
          "intangibleReligious": {
            "type": "boolean",
            "description": "Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits"
          },
          "descriptionOfGoods": {
            "type": "string",
            "description": "Box 6c, Describe the goods and services, if any, that were provided"
          },
          "maxDeductionApplies": {
            "type": "boolean",
            "description": "Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked"
          }
        },
        "description": "Contributions of Motor Vehicles, Boats, and Airplanes, from DONEE (1st-2nd boxes as issuer) to DONOR (3rd-6th boxes as recipient)"
      },
      "Form1098-E": {
        "title": "Form1098-E",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "studentLoanInterest": {
            "type": "number",
            "description": "Box 1, Student loan interest received by lender"
          },
          "box1ExcludesFees": {
            "type": "boolean",
            "description": "Box 2, If checked, box 1 does not include loan origination fee made before September 1, 2004"
          }
        },
        "description": "Student Loan Interest Statement, from RECIPIENT/LENDER (1st-2nd boxes as issuer) to PAYER/BORROWER (3rd-4th boxes as recipient)"
      },
      "Form1098-MA": {
        "title": "Form1098-MA",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "totalMortgagePayments": {
            "type": "number",
            "description": "Box 1, Total State HFA (Housing Finance Agency) and homeowner mortgage payments"
          },
          "mortgageAssistancePayments": {
            "type": "number",
            "description": "Box 2, State HFA (Housing Finance Agency) mortgage assistance payments"
          },
          "homeownerMortgagePayments": {
            "type": "number",
            "description": "Box 3, Homeowner mortgage payments"
          }
        },
        "description": "Mortgage Assistance Payments, from FILER (1st-2nd boxes as issuer) to HOMEOWNER (3rd-6th boxes as recipient)"
      },
      "Form1098-Q": {
        "title": "Form1098-Q",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "planNumber": {
            "type": "string",
            "description": "Plan number"
          },
          "planName": {
            "type": "string",
            "description": "Plan name"
          },
          "planSponsorId": {
            "type": "string",
            "description": "Plan sponsor's EIN"
          },
          "annuityAmount": {
            "type": "number",
            "description": "Box 1a, Annuity amount on start date"
          },
          "startDate": {
            "type": "string",
            "description": "Box 1b, Annuity start date",
            "format": "date",
            "example": "2021-07-15"
          },
          "canBeAccelerated": {
            "type": "boolean",
            "description": "Box 2, Start date may be accelerated"
          },
          "totalPremiums": {
            "type": "number",
            "description": "Box 3, Total premiums"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value of qualifying longevity annuity contract (FMV of QLAC)"
          },
          "premiums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Box 5, Total monthly premiums paid for the contract and date of the last payment in the month"
          }
        },
        "description": "Qualifying Longevity Annuity Contract Information, from ISSUER (1st box) to PARTICIPANT (3rd-5th boxes as recipient)"
      },
      "Form1098-T": {
        "title": "Form1098-T",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "studentTinCertification": {
            "type": "boolean",
            "description": "By checking the box in STUDENT'S TIN, filer is making a true and accurate certification under penalty of perjury that they have complied with standards promulgated by the Secretary for obtaining such individual's TIN"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "halfTime": {
            "type": "boolean",
            "description": "Box 8, Check if at least half-time student"
          },
          "qualifiedTuitionFees": {
            "type": "number",
            "description": "Box 1, Payments received for qualified tuition and related expenses"
          },
          "adjustmentPriorYear": {
            "type": "number",
            "description": "Box 4, Adjustments made for a prior year"
          },
          "scholarship": {
            "type": "number",
            "description": "Box 5, Scholarships or grants"
          },
          "adjustScholarship": {
            "type": "number",
            "description": "Box 6, Adjustments to scholarships or grants for a prior year"
          },
          "includeJanMar": {
            "type": "boolean",
            "description": "Box 7, Check if the amount in box 1 or box 2 includes amounts for an academic period beginning January - March of next year"
          },
          "graduate": {
            "type": "boolean",
            "description": "Box 9, Check if graduate student"
          },
          "insuranceRefund": {
            "type": "number",
            "description": "Box 10, Insurance contract reimbursement / refund"
          }
        },
        "description": "Tuition Statement, from FILER (1st-2nd boxes as issuer) to STUDENT (3rd-6th boxes as recipient)"
      },
      "Form1099-A": {
        "title": "Form1099-A",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "dateOfAcquisition": {
            "type": "string",
            "description": "Box 1, Date of lender's acquisition or knowledge of abandonment",
            "format": "date",
            "example": "2021-07-15"
          },
          "principalBalance": {
            "type": "number",
            "description": "Box 2, Balance of principal outstanding"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value property"
          },
          "personallyLiable": {
            "type": "boolean",
            "description": "Box 5, If checked, the borrower was personally liable for repayment of the debt"
          },
          "propertyDescription": {
            "type": "string",
            "description": "Box 6, Description of property"
          }
        },
        "description": "Acquisition or Abandonment of Secured Property, from LENDER (1st-2nd boxes as issuer) to BORROWER (3rd-4th boxes as recipient)"
      },
      "Form1099-B": {
        "title": "Form1099-B",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-16, State and Local tax withholding"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "profitOnClosedContracts": {
            "type": "number",
            "description": "Box 8, Profit or (loss) realized in current year on closed contracts"
          },
          "unrealizedProfitOpenContractsBegin": {
            "type": "number",
            "description": "Box 9, Unrealized profit or loss on open contracts at end of last year"
          },
          "unrealizedProfitOpenContractsEnd": {
            "type": "number",
            "description": "Box 10, Unrealized profit or loss on open contracts at end of current year"
          },
          "aggregateProfitOnContracts": {
            "type": "number",
            "description": "Box 11, Aggregate profit or (loss) on contracts"
          },
          "bartering": {
            "type": "number",
            "description": "Box 13, Bartering"
          },
          "securityDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityDetailIRSForm1099-B"
            },
            "description": "Boxes 1-3, 5-7, 12, Security details"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Proceeds From Broker and Barter Exchange Transactions, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-6th boxes)"
      },
      "Form1099-C": {
        "title": "Form1099-C",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "dateOfEvent": {
            "type": "string",
            "description": "Box 1, Date of identifiable event",
            "format": "date",
            "example": "2021-07-15"
          },
          "amountDischarged": {
            "type": "number",
            "description": "Box 2, Amount of debt discharged"
          },
          "interestIncluded": {
            "type": "number",
            "description": "Box 3, Interest if included in box 2"
          },
          "debtDescription": {
            "type": "string",
            "description": "Box 4, Debt description"
          },
          "personallyLiable": {
            "type": "boolean",
            "description": "Box 5, If checked, the debtor was personally liable for repayment of the debt"
          },
          "debtCode": {
            "type": "string",
            "description": "Box 6, Identifiable debt code"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 7, Fair market value of property"
          }
        },
        "description": "Cancellation of Debt, from CREDITOR (1st-2nd boxes as issuer) to DEBTOR (3rd-4th boxes as recipient)"
      },
      "Form1099-CAP": {
        "title": "Form1099-CAP",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Box 1, Date of sale or exchange",
            "format": "date",
            "example": "2021-07-15"
          },
          "aggregateAmount": {
            "type": "number",
            "description": "Box 2, Aggregate amount received"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Box 3, Number of shares exchanged"
          },
          "stockClasses": {
            "type": "string",
            "description": "Box 4, Classes of stock exchanged"
          }
        },
        "description": "Changes in Corporate Control and Capital Structure, from CORPORATION (1st-2nd boxes as issuer) to SHAREHOLDER (3rd-4th boxes as recipient)"
      },
      "Form1099ConsolidatedStatement": {
        "title": "Form1099ConsolidatedStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "marginInterestPaid": {
            "type": "number",
            "description": "Interest paid on margin account"
          },
          "paymentInLieuPaid": {
            "type": "number",
            "description": "Payment in lieu of dividends paid"
          },
          "advisorFeesPaid": {
            "type": "number",
            "description": "Advisor fees paid"
          },
          "otherFeesPaid": {
            "type": "number",
            "description": "Other fees paid"
          },
          "corporateBondInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 1, Corporate bond interest income"
          },
          "usBondInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 3, accrued U.S. Treasury Notes and Bonds interest income"
          },
          "taxExemptInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 8, tax exempt interest income from municipal bonds"
          },
          "specifiedPabInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 9, tax exempt interest income from Private Activity Bonds"
          }
        },
        "description": "Various tax-related items reported on consolidated brokerage or mutual fund statements not on the base 1099 forms. The component 1099 forms are delivered as their own Tax1099Xxx entities as usual"
      },
      "Form1099-DIV": {
        "title": "Form1099-DIV",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 1a, Total ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 1b, Qualified dividends"
          },
          "totalCapitalGain": {
            "type": "number",
            "description": "Box 2a, Total capital gain distributions"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 2b, Unrecaptured Section 1250 gain"
          },
          "section1202Gain": {
            "type": "number",
            "description": "Box 2c, Section 1202 gain"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 2d, Collectibles (28%) gain"
          },
          "section897Dividends": {
            "type": "number",
            "description": "Box 2e, Section 897 ordinary dividends"
          },
          "section897CapitalGain": {
            "type": "number",
            "description": "Box 2f, Section 897 capital gain"
          },
          "nonTaxableDistribution": {
            "type": "number",
            "description": "Box 3, Nondividend distributions"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "section199ADividends": {
            "type": "number",
            "description": "Box 5, Section 199A dividends"
          },
          "investmentExpenses": {
            "type": "number",
            "description": "Box 6, Investment expenses"
          },
          "foreignTaxPaid": {
            "type": "number",
            "description": "Box 7, Foreign tax paid"
          },
          "foreignCountry": {
            "type": "string",
            "description": "Box 8, Foreign country or U.S. possession"
          },
          "cashLiquidation": {
            "type": "number",
            "description": "Box 9, Cash liquidation distributions"
          },
          "nonCashLiquidation": {
            "type": "number",
            "description": "Box 10, Noncash liquidation distributions"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Box 11, FATCA filing requirement"
          },
          "taxExemptInterestDividend": {
            "type": "number",
            "description": "Box 12, Exempt-interest dividends"
          },
          "specifiedPabInterestDividend": {
            "type": "number",
            "description": "Box 13, Specified private activity bond interest dividends"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-16, State and Local tax withholding"
          },
          "foreignIncomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Foreign income information"
          },
          "stateTaxExemptIncomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Tax exempt income state information"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Dividends and Distributions, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-6th boxes)"
      },
      "Form1099-G": {
        "title": "Form1099-G",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "unemploymentCompensation": {
            "type": "number",
            "description": "Box 1, Unemployment compensation"
          },
          "taxRefund": {
            "type": "number",
            "description": "Box 2, State or local income tax refunds, credits, or offsets"
          },
          "refundYear": {
            "type": "integer",
            "description": "Box 3, Box 2 amount is for tax year",
            "format": "int32"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "rtaaPayments": {
            "type": "number",
            "description": "Box 5, RTAA payments"
          },
          "grants": {
            "type": "number",
            "description": "Box 6, Taxable grants"
          },
          "agriculturePayments": {
            "type": "number",
            "description": "Box 7, Agriculture payments"
          },
          "businessIncome": {
            "type": "boolean",
            "description": "Box 8, If checked, box 2 is trade or business income"
          },
          "marketGain": {
            "type": "number",
            "description": "Box 9, Market gain"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 10-11, State and Local tax withholding"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Certain Government Payments, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-H": {
        "title": "Form1099-H",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "advancePayments": {
            "type": "number",
            "description": "Box 1, Amount of HCTC advance payments"
          },
          "numberOfMonths": {
            "type": "integer",
            "description": "Box 2, Number of months HCTC advance payments and reimbursement credits paid to you",
            "format": "int32"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthandAmount"
            },
            "description": "Boxes 3-14, Payments by month"
          }
        },
        "description": "Health Coverage Tax Credit (HCTC) Advance Payments, from ISSUER/PROVIDER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-INT": {
        "title": "Form1099-INT",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "FATCA filing requirement"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "payerRtn": {
            "type": "string",
            "description": "Payer's RTN"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 1, Interest income"
          },
          "earlyWithdrawalPenalty": {
            "type": "number",
            "description": "Box 2, Early withdrawal penalty"
          },
          "usBondInterest": {
            "type": "number",
            "description": "Box 3, Interest on U.S. Savings Bonds and Treasury obligations"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "investmentExpenses": {
            "type": "number",
            "description": "Box 5, Investment expenses"
          },
          "foreignTaxPaid": {
            "type": "number",
            "description": "Box 6, Foreign tax paid"
          },
          "foreignCountry": {
            "type": "string",
            "description": "Box 7, Foreign country or U.S. possession"
          },
          "taxExemptInterest": {
            "type": "number",
            "description": "Box 8, Tax-exempt interest"
          },
          "specifiedPabInterest": {
            "type": "number",
            "description": "Box 9, Specified private activity bond interest"
          },
          "marketDiscount": {
            "type": "number",
            "description": "Box 10, Market discount"
          },
          "bondPremium": {
            "type": "number",
            "description": "Box 11, Bond premium"
          },
          "usBondPremium": {
            "type": "number",
            "description": "Box 12, Bond premium on Treasury obligations"
          },
          "taxExemptBondPremium": {
            "type": "number",
            "description": "Box 13, Bond premium on tax-exempt bond"
          },
          "cusipNumber": {
            "type": "string",
            "description": "Box 14, Tax-exempt bond CUSIP no."
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 15-17, State and Local tax withholding"
          },
          "foreignIncomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Supplemental foreign income amount information (description is country)"
          },
          "stateTaxExemptIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Supplemental tax-exempt income by state (description is state)"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Interest Income, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-K": {
        "title": "Form1099-K",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "paymentSettlementEntity": {
            "type": "boolean",
            "description": "Check to indicate if FILER is a Payment Settlement Entity (PSE)"
          },
          "electronicPaymentFacilitator": {
            "type": "boolean",
            "description": "Check to indicate if FILER is an Electronic Payment Facilitator (EPF) / Other third party"
          },
          "paymentCard": {
            "type": "boolean",
            "description": "Check to indicate transactions reported are: Payment card"
          },
          "thirdPartyNetwork": {
            "type": "boolean",
            "description": "Check to indicate transactions reported are: Third party network"
          },
          "pseName": {
            "type": "string",
            "description": "PSE's name"
          },
          "psePhone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension1"
              },
              {
                "description": "PSE's phone number"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossAmount": {
            "type": "number",
            "description": "Box 1a, Gross amount of payment card/third party network transactions"
          },
          "cardNotPresent": {
            "type": "number",
            "description": "Box 1b, Card Not Present Transactions"
          },
          "merchantCategoryCode": {
            "type": "string",
            "description": "Box 2, Merchant category code"
          },
          "numberOfTransactions": {
            "type": "number",
            "description": "Box 3, Number of purchase transactions"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "monthAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthandAmount"
            },
            "description": "Box 5, Monthly amounts"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 6-8, State and Local tax withholding"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Merchant Card and Third-Party Network Payments, from FILER (1st, 7th boxes as issuer) to PAYEE (4th, 8th boxes as recipient)"
      },
      "Form1099-LS": {
        "title": "Form1099-LS",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "policyNumber": {
            "type": "string",
            "description": "Policy number"
          },
          "payment": {
            "type": "number",
            "description": "Box 1, Amount paid to payment recipient"
          },
          "saleDate": {
            "type": "string",
            "description": "Box 2, Date of sale",
            "format": "date",
            "example": "2021-07-15"
          },
          "issuerName": {
            "type": "string",
            "description": "Issuer's name"
          },
          "contactNameAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NameAddressandPhone"
              },
              {
                "description": "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)"
              }
            ]
          }
        },
        "description": "Reportable Life Insurance Sale, from ACQUIRER (1st-2nd boxes as issuer) to PAYMENT RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-LTC": {
        "title": "Form1099-LTC",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "ltcBenefits": {
            "type": "number",
            "description": "Box 1, Gross long-term care benefits paid"
          },
          "deathBenefits": {
            "type": "number",
            "description": "Box 2, Accelerated death benefits paid"
          },
          "perDiem": {
            "type": "boolean",
            "description": "Box 3, Per diem"
          },
          "reimbursedAmount": {
            "type": "boolean",
            "description": "Box 3, Reimbursed amount"
          },
          "insuredId": {
            "type": "string",
            "description": "INSURED'S taxpayer identification no."
          },
          "insuredNameAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NameandAddress"
              },
              {
                "description": "Insured name and address"
              }
            ]
          },
          "qualifiedContract": {
            "type": "boolean",
            "description": "Box 4, Qualified contract"
          },
          "chronicallyIll": {
            "type": "boolean",
            "description": "Box 5, Chronically ill"
          },
          "terminallyIll": {
            "type": "boolean",
            "description": "Box 5, Terminally ill"
          },
          "dateCertified": {
            "type": "string",
            "description": "Date certified",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Long-Term Care and Accelerated Death Benefits, from PAYER (1st-2nd boxes as issuer) to POLICY HOLDER (3rd-4th boxes as recipient)"
      },
      "Form1099-MISC": {
        "title": "Form1099-MISC",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "rents": {
            "type": "number",
            "description": "Box 1, Rents"
          },
          "royalties": {
            "type": "number",
            "description": "Box 2, Royalties"
          },
          "otherIncome": {
            "type": "number",
            "description": "Box 3, Other income"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "fishingBoatProceeds": {
            "type": "number",
            "description": "Box 5, Fishing boat proceeds"
          },
          "medicalHealthPayment": {
            "type": "number",
            "description": "Box 6, Medical and health care payments"
          },
          "payerDirectSales": {
            "type": "boolean",
            "description": "Box 7, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
          },
          "substitutePayments": {
            "type": "number",
            "description": "Box 8, Substitute payments in lieu of dividends or interest"
          },
          "cropInsurance": {
            "type": "number",
            "description": "Box 9, Crop insurance proceeds"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          },
          "grossAttorney": {
            "type": "number",
            "description": "Box 10, Gross proceeds paid to an attorney"
          },
          "fishPurchased": {
            "type": "number",
            "description": "Box 11, Fish purchased for resale"
          },
          "section409ADeferrals": {
            "type": "number",
            "description": "Box 12, Section 409A deferrals"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Box 13, FATCA filing requirement"
          },
          "excessGolden": {
            "type": "number",
            "description": "Box 14, Excess golden parachute payments"
          },
          "nonQualifiedDeferredCompensation": {
            "type": "number",
            "description": "Box 15, Nonqualified Deferred Compensation"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 16-18, State and Local tax withholding"
          }
        },
        "description": "Miscellaneous Income, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-NEC": {
        "title": "Form1099-NEC",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          },
          "nonEmployeeCompensation": {
            "type": "number",
            "description": "Box 1, Nonemployee compensation"
          },
          "payerDirectSales": {
            "type": "boolean",
            "description": "Box 2, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 5-7, State and Local tax withholding"
          }
        },
        "description": "Non-Employee Compensation, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-OID": {
        "title": "Form1099-OID",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "FATCA filing requirement"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "originalIssueDiscount": {
            "type": "number",
            "description": "Box 1, Original issue discount"
          },
          "otherPeriodicInterest": {
            "type": "number",
            "description": "Box 2, Other periodic interest"
          },
          "earlyWithdrawalPenalty": {
            "type": "number",
            "description": "Box 3, Early withdrawal penalty"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "marketDiscount": {
            "type": "number",
            "description": "Box 5, Market discount"
          },
          "acquisitionPremium": {
            "type": "number",
            "description": "Box 6, Acquisition premium"
          },
          "oidDescription": {
            "type": "string",
            "description": "Box 7, Description"
          },
          "discountOnTreasuryObligations": {
            "type": "number",
            "description": "Box 8, Original issue discount on U.S. Treasury obligations"
          },
          "investmentExpenses": {
            "type": "number",
            "description": "Box 9, Investment expenses"
          },
          "bondPremium": {
            "type": "number",
            "description": "Box 10, Bond premium"
          },
          "taxExemptOid": {
            "type": "number",
            "description": "Box 11, Tax-exempt OID"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 12-14, State and Local tax withheld"
          },
          "stateExemptOid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Supplemental: State name and tax-exempt OID by state"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Original Issue Discount, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-PATR": {
        "title": "Form1099-PATR",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "patronageDividends": {
            "type": "number",
            "description": "Box 1, Patronage dividends"
          },
          "nonpatronageDistributions": {
            "type": "number",
            "description": "Box 2, Nonpatronage distributions"
          },
          "perUnitRetainAllocations": {
            "type": "number",
            "description": "Box 3, Per-unit retain allocations"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "redemption": {
            "type": "number",
            "description": "Box 5, Redemption of nonqualified notices and retain allocations"
          },
          "section199Deduction": {
            "type": "number",
            "description": "Box 6, Section 199A(g) deduction"
          },
          "qualifiedPayments": {
            "type": "number",
            "description": "Box 7, Qualified payments"
          },
          "section199QualifiedItems": {
            "type": "number",
            "description": "Box 8, Section 199A(a) qualified items"
          },
          "section199SstbItems": {
            "type": "number",
            "description": "Box 9, Section 199A(a) SSTB (Specified Service Trade or Business) items"
          },
          "investmentCredit": {
            "type": "number",
            "description": "Box 10, Investment credit"
          },
          "workOpportunityCredit": {
            "type": "number",
            "description": "Box 11, Work opportunity credit"
          },
          "otherCreditsAndDeductions": {
            "type": "number",
            "description": "Box 12, Other credits and deductions"
          },
          "specifiedCoop": {
            "type": "boolean",
            "description": "Box 13, Specified Cooperative"
          },
          "stateAndLocal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateandLocalTaxWithholding2"
              },
              {
                "description": "State and Local tax withholding, from IRS's IRIS schema"
              }
            ]
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Taxable Distributions Received From Cooperatives, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-Q": {
        "title": "Form1099-Q",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "earnings": {
            "type": "number",
            "description": "Box 2, Earnings"
          },
          "basis": {
            "type": "number",
            "description": "Box 3, Basis"
          },
          "trusteeToTrustee": {
            "type": "boolean",
            "description": "Box 4, Trustee-to-trustee transfer"
          },
          "tuitionPlanPrivate": {
            "type": "boolean",
            "description": "Box 5a, Qualified tuition plan - Private"
          },
          "tuitionPlanPublic": {
            "type": "boolean",
            "description": "Box 5b, Qualified tuition plan - Public"
          },
          "coverdellEsa": {
            "type": "boolean",
            "description": "Box 5c, Coverdell ESA"
          },
          "recipientIsNotBeneficiary": {
            "type": "boolean",
            "description": "Box 6, If this box is checked, the recipient is not the designated beneficiary"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "If fair market value (FMV) is included, see Pub. 970, Tax Benefits for Education, for how to figure earnings"
          }
        },
        "description": "Payments From Qualified Education Programs, from PAYER/TRUSTEE (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-QA": {
        "title": "Form1099-QA",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "earnings": {
            "type": "number",
            "description": "Box 2, Earnings"
          },
          "basis": {
            "type": "number",
            "description": "Box 3, Basis"
          },
          "programTransfer": {
            "type": "boolean",
            "description": "Box 4, Program-to-program transfer"
          },
          "terminated": {
            "type": "boolean",
            "description": "Box 5, Check if ABLE account terminated in current year"
          },
          "notBeneficiary": {
            "type": "boolean",
            "description": "Box 6, Check if the recipient is not the designated beneficiary"
          }
        },
        "description": "Distributions From ABLE Accounts, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-R": {
        "title": "Form1099-R",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "allocableToIRR": {
            "type": "number",
            "description": "Box 10, Amount allocable to IRR within 5 years"
          },
          "firstYearOfRoth": {
            "maximum": 2050.0,
            "minimum": 1997.0,
            "type": "integer",
            "description": "Box 11, First year of designated Roth contributions. A four-digit year. (Like `TaxYear` definition, but lower minimum since first year of Roth IRAs was 1997)",
            "format": "int32",
            "example": 2020
          },
          "recipientAccountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "taxableAmount": {
            "type": "number",
            "description": "Box 2a, Taxable amount"
          },
          "taxableAmountNotDetermined": {
            "type": "boolean",
            "description": "Box 2b, Taxable amount not determined"
          },
          "totalDistribution": {
            "type": "boolean",
            "description": "Box 2c, Total distribution"
          },
          "capitalGain": {
            "type": "number",
            "description": "Box 3, Capital gain"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "employeeContributions": {
            "type": "number",
            "description": "Box 5, Employee contributions"
          },
          "netUnrealizedAppreciation": {
            "type": "number",
            "description": "Box 6, Net unrealized appreciation"
          },
          "distributionCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Box 7, Distribution codes"
          },
          "iraSepSimple": {
            "type": "boolean",
            "description": "Box 7b, IRA/SEP/SIMPLE"
          },
          "otherAmount": {
            "type": "number",
            "description": "Box 8, Other"
          },
          "otherPercent": {
            "type": "number",
            "description": "Box 8, Other percent"
          },
          "yourPercentOfTotal": {
            "type": "number",
            "description": "Box 9a, Your percent of total distribution"
          },
          "totalEmployeeContributions": {
            "type": "number",
            "description": "Box 9b, Total employee contributions"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Box 12, FATCA filing requirement"
          },
          "dateOfPayment": {
            "type": "string",
            "description": "Box 13, Date of payment",
            "format": "date",
            "example": "2021-07-15"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-19, State and Local tax withholding"
          }
        },
        "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc., from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-S": {
        "title": "Form1099-S",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account or escrow number"
          },
          "dateOfClosing": {
            "type": "string",
            "description": "Box 1, Date of closing",
            "format": "date",
            "example": "2021-07-15"
          },
          "grossProceeds": {
            "type": "number",
            "description": "Box 2, Gross proceeds"
          },
          "addressOrLegalDescription": {
            "type": "string",
            "description": "Box 3, Address or legal description"
          },
          "receivedOtherConsideration": {
            "type": "boolean",
            "description": "Box 4, Transferor received or will receive property or services as part of the consideration (if checked)"
          },
          "foreignPerson": {
            "type": "boolean",
            "description": "Box 5, If checked, transferor is a foreign person (nonresident alien, foreign partnership, foreign estate, or foreign trust)"
          },
          "realEstateTax": {
            "type": "number",
            "description": "Box 6, Buyer's part of real estate tax"
          }
        },
        "description": "Proceeds From Real Estate Transactions, from FILER (1st-2nd boxes as issuer) to TRANSFEROR (3rd-4th boxes as recipient)"
      },
      "Form1099-SA": {
        "title": "Form1099-SA",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "earnings": {
            "type": "number",
            "description": "Box 2, Earnings on excess contributions"
          },
          "distributionCode": {
            "type": "string",
            "description": "Box 3, Distribution code"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, FMV on date of death"
          },
          "hsa": {
            "type": "boolean",
            "description": "Box 5a, HSA"
          },
          "archerAccount": {
            "type": "boolean",
            "description": "Box 5b, Archer MSA"
          },
          "medicalSavingsAccount": {
            "type": "boolean",
            "description": "Box 5c, Medicare Advantage (MA) MSA"
          }
        },
        "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)"
      },
      "Form1099-SB": {
        "title": "Form1099-SB",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "policyNumber": {
            "type": "string",
            "description": "Policy number"
          },
          "contractInvestment": {
            "type": "number",
            "description": "Box 1, Investment in contract"
          },
          "surrenderAmount": {
            "type": "number",
            "description": "Box 2, Surrender amount"
          },
          "contactNameAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NameAddressandPhone1"
              },
              {
                "description": "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)"
              }
            ]
          }
        },
        "description": "Seller's Investment in Life Insurance Contract, from ISSUER (1st-2nd boxes) to SELLER (3rd-4th boxes as recipient)"
      },
      "Form1120-SK-1": {
        "title": "Form1120-SK-1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "finalK1": {
            "type": "boolean",
            "description": "Final K-1"
          },
          "amendedK1": {
            "type": "boolean",
            "description": "Amended K-1"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "irsCenter": {
            "type": "string",
            "description": "Box C, IRS Center where corporation filed return"
          },
          "corporationBeginningShares": {
            "type": "number",
            "description": "Box D, Corporation's total number of shares, Beginning of tax year"
          },
          "corporationEndingShares": {
            "type": "number",
            "description": "Box D, Corporation's total number of shares, End of tax year"
          },
          "percentOwnership": {
            "type": "number",
            "description": "Box G, Current year allocation percentage"
          },
          "beginningShares": {
            "type": "number",
            "description": "Box H, Shareholder's number of shares, Beginning of tax year"
          },
          "endingShares": {
            "type": "number",
            "description": "Box H, Shareholder's number of shares, End of tax year"
          },
          "beginningLoans": {
            "type": "number",
            "description": "Box I, Loans from shareholder, Beginning of tax year"
          },
          "endingLoans": {
            "type": "number",
            "description": "Box I, Loans from shareholder, Ending of tax year"
          },
          "ordinaryIncome": {
            "type": "number",
            "description": "Box 1, Ordinary business income (loss)"
          },
          "netRentalRealEstateIncome": {
            "type": "number",
            "description": "Box 2, Net rental real estate income (loss)"
          },
          "otherRentalIncome": {
            "type": "number",
            "description": "Box 3, Other net rental income (loss)"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 4, Interest income"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 5a, Ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 5b, Qualified dividends"
          },
          "royalties": {
            "type": "number",
            "description": "Box 6, Royalties"
          },
          "netShortTermGain": {
            "type": "number",
            "description": "Box 7, Net short-term capital gain (loss)"
          },
          "netLongTermGain": {
            "type": "number",
            "description": "Box 8a, Net long-term capital gain (loss)"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 8b, Collectibles (28%) gain (loss)"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 8c, Unrecaptured section 1250 gain"
          },
          "net1231Gain": {
            "type": "number",
            "description": "Box 9, Net section 1231 gain (loss)"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 10, Other income (loss)"
          },
          "section179Deduction": {
            "type": "number",
            "description": "Box 11, Section 179 deduction"
          },
          "otherDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Other deductions"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 13, Credits"
          },
          "scheduleK3": {
            "type": "boolean",
            "description": "Box 14, Schedule K-3 is attached"
          },
          "amtItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 15, Alternative minimum tax (AMT) items"
          },
          "basisItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 16, Items affecting shareholder basis"
          },
          "otherInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 17, Other information"
          },
          "multipleAtRiskActivities": {
            "type": "boolean",
            "description": "Box 18, More than one activity for at-risk purposes"
          },
          "multiplePassiveActivities": {
            "type": "boolean",
            "description": "Box 19, More than one activity for passive activity purposes"
          }
        },
        "description": "Shareholder's Share of Income, Deductions, Credits, etc., from Corporation (boxes A-B as issuer) to Shareholder (boxes E-F as recipient)"
      },
      "Form2439": {
        "title": "Form2439",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "undistributedLongTermCapitalGains": {
            "type": "number",
            "description": "Box 1a, Total undistributed long-term capital gains"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 1b, Unrecaptured section 1250 gain"
          },
          "section1202Gain": {
            "type": "number",
            "description": "Box 1c, Section 1202 gain"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 1d, Collectibles (28%) gain"
          },
          "taxPaid": {
            "type": "number",
            "description": "Box 2, Tax paid by the RIC or REIT on the box 1a gains"
          }
        },
        "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains, from RIC or REIT (1st-2nd boxes as issuer) to Shareholder (3rd-4th boxes as recipient)"
      },
      "Form3921": {
        "title": "Form3921",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "optionGrantDate": {
            "type": "string",
            "description": "Box 1, Date option granted",
            "format": "date",
            "example": "2021-07-15"
          },
          "optionExerciseDate": {
            "type": "string",
            "description": "Box 2, Date option exercised",
            "format": "date",
            "example": "2021-07-15"
          },
          "exercisePrice": {
            "type": "number",
            "description": "Box 3, Exercise price per share"
          },
          "exerciseMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value per share on exercise date"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Box 5, Number of shares transferred"
          },
          "corporation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty4"
              },
              {
                "description": "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred"
              }
            ]
          }
        },
        "description": "Exercise of an Incentive Stock Option Under Section 422(b), from TRANSFEROR (1st-2nd boxes as issuer) to EMPLOYEE (3rd-4th boxes as recipient)"
      },
      "Form3922": {
        "title": "Form3922",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "optionGrantDate": {
            "type": "string",
            "description": "Box 1, Date option granted",
            "format": "date",
            "example": "2021-07-15"
          },
          "optionExerciseDate": {
            "type": "string",
            "description": "Box 2, Date option exercised",
            "format": "date",
            "example": "2021-07-15"
          },
          "grantMarketValue": {
            "type": "number",
            "description": "Box 3, Fair market value per share on grant date"
          },
          "exerciseMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value per share on exercise date"
          },
          "exercisePrice": {
            "type": "number",
            "description": "Box 5, Exercise price paid per share"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Box 6, Number of shares transferred"
          },
          "titleTransferDate": {
            "type": "string",
            "description": "Box 7, Date legal title transferred",
            "format": "date",
            "example": "2021-07-15"
          },
          "grantDateExercisePrice": {
            "type": "number",
            "description": "Box 8, Exercise price per share determined as if the option was exercised on the option granted date"
          }
        },
        "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c), from CORPORATION (1st-2nd boxes as issuer) to EMPLOYEE (3rd-4th boxes as recipient)"
      },
      "Form5498": {
        "title": "Form5498",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "iraContributions": {
            "type": "number",
            "description": "Box 1, IRA contributions"
          },
          "rolloverContributions": {
            "type": "number",
            "description": "Box 2, Rollover contributions"
          },
          "rothIraConversion": {
            "type": "number",
            "description": "Box 3, Roth IRA conversion amount"
          },
          "recharacterizedContributions": {
            "type": "number",
            "description": "Box 4, Recharacterized contributions"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 5, Fair market value of account"
          },
          "lifeInsuranceCost": {
            "type": "number",
            "description": "Box 6, Life insurance cost included in box 1"
          },
          "ira": {
            "type": "boolean",
            "description": "Box 7a, IRA"
          },
          "sep": {
            "type": "boolean",
            "description": "Box 7b, SEP"
          },
          "simple": {
            "type": "boolean",
            "description": "Box 7c, SIMPLE"
          },
          "rothIra": {
            "type": "boolean",
            "description": "Box 7d, Roth IRA"
          },
          "sepContributions": {
            "type": "number",
            "description": "Box 8, SEP contributions"
          },
          "simpleContributions": {
            "type": "number",
            "description": "Box 9, SIMPLE contributions"
          },
          "rothIraContributions": {
            "type": "number",
            "description": "Box 10, Roth IRA contributions"
          },
          "rmdNextYear": {
            "type": "boolean",
            "description": "Box 11, If checked, required minimum distribution for next year"
          },
          "rmdDate": {
            "type": "string",
            "description": "Box 12a, RMD date",
            "format": "date",
            "example": "2021-07-15"
          },
          "rmdAmount": {
            "type": "number",
            "description": "Box 12b, RMD amount"
          },
          "postponedContribution": {
            "type": "number",
            "description": "Box 13a, Postponed contribution"
          },
          "postponedYear": {
            "type": "integer",
            "description": "Box 13b, Year",
            "format": "int32"
          },
          "postponedCode": {
            "type": "string",
            "description": "Box 13c, Code"
          },
          "repayments": {
            "type": "number",
            "description": "Box 14a, Repayments"
          },
          "repayCode": {
            "type": "string",
            "description": "Box 14b, Code"
          },
          "fmvSpecifiedAssets": {
            "type": "number",
            "description": "Box 15a, FMV of certain specified assets"
          },
          "specifiedCodes": {
            "type": "string",
            "description": "Box 15b, Code(s)"
          }
        },
        "description": "IRA Contribution Information, from TRUSTEE/ISSUER (1st-2nd boxes as issuer) to PARTICIPANT (3rd-4th boxes as recipient)"
      },
      "Form5498-ESA": {
        "title": "Form5498-ESA",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "coverdellEsaContributions": {
            "type": "number",
            "description": "Box 1, Coverdell ESA contributions"
          },
          "rolloverContributions": {
            "type": "number",
            "description": "Box 2, Rollover contributions"
          }
        },
        "description": "Coverdell ESA Contribution Information, from TRUSTEE/ISSUER (1st-2nd boxes as issuer) to BENEFICIARY (3rd-4th boxes as recipient)"
      },
      "Form5498-QA": {
        "title": "Form5498-QA",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "ableContributions": {
            "type": "number",
            "description": "Box 1, ABLE contributions"
          },
          "rollovers": {
            "type": "number",
            "description": "Box 2, ABLE to ABLE Rollovers"
          },
          "cumulativeContributions": {
            "type": "number",
            "description": "Box 3, Cumulative contributions"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value"
          },
          "openedInTaxYear": {
            "type": "boolean",
            "description": "Box 5, Check if account opened in current tax year"
          },
          "basisOfDisabilityCode": {
            "type": "string",
            "description": "Box 6, Basis of eligibility"
          },
          "typeOfDisabilityCode": {
            "type": "string",
            "description": "Box 7, Code"
          }
        },
        "description": "ABLE Account Contribution Information, from ISSUER (1st-2nd boxes) to BENEFICIARY (3rd-4th boxes as recipient)"
      },
      "Form5498-SA": {
        "title": "Form5498-SA",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "msaContributions": {
            "type": "number",
            "description": "Box 1, Employee or self-employed person's Archer MSA contributions made in current and following years for current year"
          },
          "totalContributions": {
            "type": "number",
            "description": "Box 2, Total contributions made in current year"
          },
          "totalPostYearEnd": {
            "type": "number",
            "description": "Box 3, Total HSA or Archer MSA contributions made in following year for current year"
          },
          "rolloverContributions": {
            "type": "number",
            "description": "Box 4, Rollover contributions"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 5, Fair market value of HSA, Archer MSA, or Medicare Advantage (MA) MSA"
          },
          "hsa": {
            "type": "boolean",
            "description": "Box 6a, HSA"
          },
          "archer": {
            "type": "boolean",
            "description": "Box 6b, Archer MSA"
          },
          "maMsa": {
            "type": "boolean",
            "description": "Box 6c, Medicare Advantage (MA) MSA"
          }
        },
        "description": "HSA, Archer MSA, or Medicare Advantage (MA) MSA Information, from TRUSTEE (1st-2nd boxes as issuer) to PARTICIPANT (3rd-4th boxes as recipient)"
      },
      "TaxData": {
        "title": "TaxData",
        "type": "object",
        "properties": {
          "businessIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessIncomeStatement"
              },
              {
                "description": "Business Income Statement for IRS Form 1040 Schedule C"
              }
            ]
          },
          "cryptocurrencyTaxStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CryptocurrencyTaxStatementlist1"
              },
              {
                "description": "Cryptocurrency Tax Statement list"
              }
            ]
          },
          "farmIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FarmIncomeStatement"
              },
              {
                "description": "Farm Income Statement for IRS Form 1040 Schedule F"
              }
            ]
          },
          "farmRentalIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FarmRentalIncomeStatement"
              },
              {
                "description": "Farm Rental Income Statement for IRS Form 4835"
              }
            ]
          },
          "rentalIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RentalIncomeStatement"
              },
              {
                "description": "Rental Income Statement for IRS Form 1040 Schedule E"
              }
            ]
          },
          "royaltyIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoyaltyIncomeStatement"
              },
              {
                "description": "Royalty Income Statement for IRS Form 1040 Schedule E"
              }
            ]
          },
          "tax1041K1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1041K-11"
              },
              {
                "description": "Beneficiary's Share of Income, Deductions, Credits, etc."
              }
            ]
          },
          "tax1042S": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-S1"
              },
              {
                "description": "Foreign Person's U.S. Source Income Subject to Withholding"
              }
            ]
          },
          "tax1065K1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1065K-11"
              },
              {
                "description": "Partner's Share of Income, Deductions, Credits, etc."
              }
            ]
          },
          "tax1095A": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1095-A1"
              },
              {
                "description": "Health Insurance Marketplace Statement"
              }
            ]
          },
          "tax1095B": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1095-B1"
              },
              {
                "description": "Health Coverage"
              }
            ]
          },
          "tax1095C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1095-C1"
              },
              {
                "description": "Employer-Provided Health Insurance Offer and Coverage"
              }
            ]
          },
          "tax1097Btc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1097-BTC1"
              },
              {
                "description": "Bond Tax Credit"
              }
            ]
          },
          "tax1098": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form10981"
              },
              {
                "description": "Mortgage Interest Statement"
              }
            ]
          },
          "tax1098C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-C1"
              },
              {
                "description": "Contributions of Motor Vehicles, Boats, and Airplanes"
              }
            ]
          },
          "tax1098E": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-E1"
              },
              {
                "description": "Student Loan Interest Statement"
              }
            ]
          },
          "tax1098Ma": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-MA1"
              },
              {
                "description": "Mortgage Assistance Payments"
              }
            ]
          },
          "tax1098Q": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-Q1"
              },
              {
                "description": "Qualifying Longevity Annuity Contract Information"
              }
            ]
          },
          "tax1098T": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-T1"
              },
              {
                "description": "Tuition Statement"
              }
            ]
          },
          "tax1099A": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-A1"
              },
              {
                "description": "Acquisition or Abandonment of Secured Property"
              }
            ]
          },
          "tax1099B": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-B1"
              },
              {
                "description": "Proceeds From Broker and Barter Exchange Transactions"
              }
            ]
          },
          "tax1099C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-C1"
              },
              {
                "description": "Cancellation of Debt"
              }
            ]
          },
          "tax1099Cap": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-CAP1"
              },
              {
                "description": "Changes in Corporate Control and Capital Structure"
              }
            ]
          },
          "tax1099ConsolidatedStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099ConsolidatedStatement1"
              },
              {
                "description": "Consolidated Statement for combined IRS Form 1099s"
              }
            ]
          },
          "tax1099Div": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-DIV1"
              },
              {
                "description": "Dividends and Distributions"
              }
            ]
          },
          "tax1099G": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-G1"
              },
              {
                "description": "Certain Government Payments"
              }
            ]
          },
          "tax1099H": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-H1"
              },
              {
                "description": "Health Coverage Tax Credit (HCTC) Advance Payments"
              }
            ]
          },
          "tax1099Int": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-INT1"
              },
              {
                "description": "Interest Income"
              }
            ]
          },
          "tax1099K": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-K1"
              },
              {
                "description": "Merchant Card and Third-Party Network Payments"
              }
            ]
          },
          "tax1099Ls": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-LS1"
              },
              {
                "description": "Reportable Life Insurance Sale"
              }
            ]
          },
          "tax1099Ltc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-LTC1"
              },
              {
                "description": "Long-Term Care and Accelerated Death Benefits"
              }
            ]
          },
          "tax1099Misc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-MISC1"
              },
              {
                "description": "Miscellaneous Income"
              }
            ]
          },
          "tax1099Nec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-NEC1"
              },
              {
                "description": "Nonemployee Compensation"
              }
            ]
          },
          "tax1099Oid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-OID1"
              },
              {
                "description": "Original Issue Discount"
              }
            ]
          },
          "tax1099Patr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-PATR1"
              },
              {
                "description": "Taxable Distributions Received From Cooperatives"
              }
            ]
          },
          "tax1099Q": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-Q1"
              },
              {
                "description": "Payments From Qualified Education Programs"
              }
            ]
          },
          "tax1099Qa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-QA1"
              },
              {
                "description": "Distributions From ABLE Accounts"
              }
            ]
          },
          "tax1099R": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-R1"
              },
              {
                "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc."
              }
            ]
          },
          "tax1099S": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-S1"
              },
              {
                "description": "Proceeds From Real Estate Transactions"
              }
            ]
          },
          "tax1099Sa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-SA1"
              },
              {
                "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA"
              }
            ]
          },
          "tax1099Sb": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-SB1"
              },
              {
                "description": "Seller's Investment in Life Insurance Contract"
              }
            ]
          },
          "tax1120SK1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1120-SK-11"
              },
              {
                "description": "Shareholder's Share of Income, Deductions, Credits, etc."
              }
            ]
          },
          "tax2439": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form24391"
              },
              {
                "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains"
              }
            ]
          },
          "tax3921": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form39211"
              },
              {
                "description": "Exercise of an Incentive Stock Option Under Section 422(b)"
              }
            ]
          },
          "tax3922": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form39221"
              },
              {
                "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)"
              }
            ]
          },
          "tax5227K1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1041K-1"
              },
              {
                "description": "Split-Interest Trust Beneficiary's schedule K-1"
              }
            ]
          },
          "tax5498": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form54981"
              },
              {
                "description": "IRA Contribution Information"
              }
            ]
          },
          "tax5498Esa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form5498-ESA1"
              },
              {
                "description": "Coverdell ESA Contribution Information"
              }
            ]
          },
          "tax5498Qa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form5498-QA1"
              },
              {
                "description": "ABLE Account Contribution Information"
              }
            ]
          },
          "tax5498Sa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form5498-SA1"
              },
              {
                "description": "HSA, Archer MSA, or Medicare Advantage MSA Information"
              }
            ]
          },
          "taxW2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-24"
              },
              {
                "description": "Wage and Tax Statement"
              }
            ]
          },
          "taxW2C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-2c2"
              },
              {
                "description": "IRS form W-2c, Corrected Wage and Tax Statement"
              }
            ]
          },
          "taxW2G": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-2G2"
              },
              {
                "description": "Certain Gambling Winnings"
              }
            ]
          },
          "taxRefundDirectDeposit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxRefundDirectDeposit2"
              },
              {
                "description": "Tax refund direct deposit information"
              }
            ]
          }
        },
        "description": "Tax data container for API requests and responses"
      },
      "TaxDataforQR": {
        "title": "TaxDataforQR",
        "type": "object",
        "properties": {
          "businessIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessIncomeStatement"
              },
              {
                "description": "Business Income Statement for IRS Form 1040 Schedule C"
              }
            ]
          },
          "cryptocurrencyTaxStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CryptocurrencyTaxStatementlist1"
              },
              {
                "description": "Cryptocurrency Tax Statement list"
              }
            ]
          },
          "farmIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FarmIncomeStatement"
              },
              {
                "description": "Farm Income Statement for IRS Form 1040 Schedule F"
              }
            ]
          },
          "farmRentalIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FarmRentalIncomeStatement"
              },
              {
                "description": "Farm Rental Income Statement for IRS Form 4835"
              }
            ]
          },
          "rentalIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RentalIncomeStatement"
              },
              {
                "description": "Rental Income Statement for IRS Form 1040 Schedule E"
              }
            ]
          },
          "royaltyIncomeStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoyaltyIncomeStatement"
              },
              {
                "description": "Royalty Income Statement for IRS Form 1040 Schedule E"
              }
            ]
          },
          "tax1041K1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1041K-11"
              },
              {
                "description": "Beneficiary's Share of Income, Deductions, Credits, etc."
              }
            ]
          },
          "tax1042S": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-S1"
              },
              {
                "description": "Foreign Person's U.S. Source Income Subject to Withholding"
              }
            ]
          },
          "tax1065K1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1065K-11"
              },
              {
                "description": "Partner's Share of Income, Deductions, Credits, etc."
              }
            ]
          },
          "tax1095A": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1095-A1"
              },
              {
                "description": "Health Insurance Marketplace Statement"
              }
            ]
          },
          "tax1095B": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1095-B1"
              },
              {
                "description": "Health Coverage"
              }
            ]
          },
          "tax1095C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1095-C1"
              },
              {
                "description": "Employer-Provided Health Insurance Offer and Coverage"
              }
            ]
          },
          "tax1097Btc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1097-BTC1"
              },
              {
                "description": "Bond Tax Credit"
              }
            ]
          },
          "tax1098": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form10981"
              },
              {
                "description": "Mortgage Interest Statement"
              }
            ]
          },
          "tax1098C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-C1"
              },
              {
                "description": "Contributions of Motor Vehicles, Boats, and Airplanes"
              }
            ]
          },
          "tax1098E": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-E1"
              },
              {
                "description": "Student Loan Interest Statement"
              }
            ]
          },
          "tax1098Ma": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-MA1"
              },
              {
                "description": "Mortgage Assistance Payments"
              }
            ]
          },
          "tax1098Q": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-Q1"
              },
              {
                "description": "Qualifying Longevity Annuity Contract Information"
              }
            ]
          },
          "tax1098T": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1098-T1"
              },
              {
                "description": "Tuition Statement"
              }
            ]
          },
          "tax1099A": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-A1"
              },
              {
                "description": "Acquisition or Abandonment of Secured Property"
              }
            ]
          },
          "tax1099B": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-B1"
              },
              {
                "description": "Proceeds From Broker and Barter Exchange Transactions"
              }
            ]
          },
          "tax1099C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-C1"
              },
              {
                "description": "Cancellation of Debt"
              }
            ]
          },
          "tax1099Cap": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-CAP1"
              },
              {
                "description": "Changes in Corporate Control and Capital Structure"
              }
            ]
          },
          "tax1099ConsolidatedStatement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099ConsolidatedStatement1"
              },
              {
                "description": "Consolidated Statement for combined IRS Form 1099s"
              }
            ]
          },
          "tax1099Div": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-DIV1"
              },
              {
                "description": "Dividends and Distributions"
              }
            ]
          },
          "tax1099G": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-G1"
              },
              {
                "description": "Certain Government Payments"
              }
            ]
          },
          "tax1099H": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-H1"
              },
              {
                "description": "Health Coverage Tax Credit (HCTC) Advance Payments"
              }
            ]
          },
          "tax1099Int": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-INT1"
              },
              {
                "description": "Interest Income"
              }
            ]
          },
          "tax1099K": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-K1"
              },
              {
                "description": "Merchant Card and Third-Party Network Payments"
              }
            ]
          },
          "tax1099Ls": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-LS1"
              },
              {
                "description": "Reportable Life Insurance Sale"
              }
            ]
          },
          "tax1099Ltc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-LTC1"
              },
              {
                "description": "Long-Term Care and Accelerated Death Benefits"
              }
            ]
          },
          "tax1099Misc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-MISC1"
              },
              {
                "description": "Miscellaneous Income"
              }
            ]
          },
          "tax1099Nec": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-NEC1"
              },
              {
                "description": "Nonemployee Compensation"
              }
            ]
          },
          "tax1099Oid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-OID1"
              },
              {
                "description": "Original Issue Discount"
              }
            ]
          },
          "tax1099Patr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-PATR1"
              },
              {
                "description": "Taxable Distributions Received From Cooperatives"
              }
            ]
          },
          "tax1099Q": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-Q1"
              },
              {
                "description": "Payments From Qualified Education Programs"
              }
            ]
          },
          "tax1099Qa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-QA1"
              },
              {
                "description": "Distributions From ABLE Accounts"
              }
            ]
          },
          "tax1099R": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-R1"
              },
              {
                "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc."
              }
            ]
          },
          "tax1099S": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-S1"
              },
              {
                "description": "Proceeds From Real Estate Transactions"
              }
            ]
          },
          "tax1099Sa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-SA1"
              },
              {
                "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA"
              }
            ]
          },
          "tax1099Sb": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1099-SB1"
              },
              {
                "description": "Seller's Investment in Life Insurance Contract"
              }
            ]
          },
          "tax1120SK1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1120-SK-11"
              },
              {
                "description": "Shareholder's Share of Income, Deductions, Credits, etc."
              }
            ]
          },
          "tax2439": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form24391"
              },
              {
                "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains"
              }
            ]
          },
          "tax3921": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form39211"
              },
              {
                "description": "Exercise of an Incentive Stock Option Under Section 422(b)"
              }
            ]
          },
          "tax3922": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form39221"
              },
              {
                "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)"
              }
            ]
          },
          "tax5227K1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1041K-1"
              },
              {
                "description": "Split-Interest Trust Beneficiary's schedule K-1"
              }
            ]
          },
          "tax5498": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form54981"
              },
              {
                "description": "IRA Contribution Information"
              }
            ]
          },
          "tax5498Esa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form5498-ESA1"
              },
              {
                "description": "Coverdell ESA Contribution Information"
              }
            ]
          },
          "tax5498Qa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form5498-QA1"
              },
              {
                "description": "ABLE Account Contribution Information"
              }
            ]
          },
          "tax5498Sa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form5498-SA1"
              },
              {
                "description": "HSA, Archer MSA, or Medicare Advantage MSA Information"
              }
            ]
          },
          "taxW2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-24"
              },
              {
                "description": "Wage and Tax Statement"
              }
            ]
          },
          "taxW2C": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-2c2"
              },
              {
                "description": "IRS form W-2c, Corrected Wage and Tax Statement"
              }
            ]
          },
          "taxW2G": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-2G2"
              },
              {
                "description": "Certain Gambling Winnings"
              }
            ]
          },
          "taxRefundDirectDeposit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxRefundDirectDeposit2"
              },
              {
                "description": "Tax refund direct deposit information"
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FDXVersion"
              },
              {
                "description": "[Financial Data Exchange (FDX)](https://financialdataexchange.org/) schema version number (e.g. \"V5.0\")."
              }
            ]
          },
          "softwareId": {
            "type": "string",
            "description": "The FDX registration ID of company or software generating this tax data"
          }
        },
        "description": "Tax data container for QR Code purposes"
      },
      "TaxFormAttribute": {
        "title": "TaxFormAttribute",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of attribute"
          },
          "value": {
            "type": "string",
            "description": "Value of attribute"
          },
          "boxNumber": {
            "type": "string",
            "description": "Box number on a tax form, if any"
          },
          "code": {
            "type": "string",
            "description": "Tax form code for the given box number, if any"
          }
        },
        "description": "An additional tax form attribute for use when a defined field is not available"
      },
      "TaxParty": {
        "title": "TaxParty",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Legal entity for issuer or recipient, used across all tax forms"
      },
      "TaxRefundDirectDeposit": {
        "title": "TaxRefundDirectDeposit",
        "type": "object",
        "properties": {
          "institutionName": {
            "type": "string",
            "description": "Name of institution"
          },
          "rtn": {
            "type": "string",
            "description": "Routing transit number"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "accountNickName": {
            "type": "string",
            "description": "Account nickname"
          }
        },
        "description": "IRS Form 8888 Direct Deposit Information"
      },
      "TaxStatement": {
        "title": "TaxStatement",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "Tax statement containing one or more tax forms"
      },
      "TaxStatementList": {
        "title": "TaxStatementList",
        "type": "object",
        "properties": {
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxStatement"
            },
            "description": "The list of tax statements"
          }
        },
        "description": "Tax statement list containing one or more tax statements"
      },
      "FormW-2": {
        "title": "FormW-2",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "controlNumber": {
            "type": "string",
            "description": "Control number"
          },
          "wages": {
            "type": "number",
            "description": "Box 1, Wages, tips, other compensation"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 2, Federal income tax withheld"
          },
          "socialSecurityWages": {
            "type": "number",
            "description": "Box 3, Social security wages"
          },
          "socialSecurityTaxWithheld": {
            "type": "number",
            "description": "Box 4, Social security tax withheld"
          },
          "medicareWages": {
            "type": "number",
            "description": "Box 5, Medicare wages and tips"
          },
          "medicareTaxWithheld": {
            "type": "number",
            "description": "Box 6, Medicare tax withheld"
          },
          "socialSecurityTips": {
            "type": "number",
            "description": "Box 7, Social security tips"
          },
          "allocatedTips": {
            "type": "number",
            "description": "Box 8, Allocated tips"
          },
          "dependentCareBenefit": {
            "type": "number",
            "description": "Box 10, Dependent care benefits"
          },
          "nonQualifiedPlan": {
            "type": "number",
            "description": "Box 11, Nonqualified plans"
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Codes and amounts"
          },
          "statutory": {
            "type": "boolean",
            "description": "Box 13, Statutory employee"
          },
          "retirementPlan": {
            "type": "boolean",
            "description": "Box 13, Retirement plan"
          },
          "thirdPartySickPay": {
            "type": "boolean",
            "description": "Box 13, Third-party sick pay"
          },
          "esppQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Qualified Disposition amount"
          },
          "esppNonQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Nonqualified Disposition amount"
          },
          "other": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 14, Other descriptions and amounts"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 15-20, State and Local tax withholding"
          }
        },
        "description": "Wage and Tax Statement, from Employer (boxes b-c as issuer) to Employee (boxes a, e-f as recipient)"
      },
      "FormW-2c": {
        "title": "FormW-2c",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "correctedTinOrName": {
            "type": "boolean",
            "description": "Box e, Corrected SSN and/or name"
          },
          "previousEmployeeTin": {
            "type": "string",
            "description": "Box f, Employee's previously reported SSN"
          },
          "previousEmployeeName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Box g, Employee's previously reported name"
              }
            ]
          },
          "originalW2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-21"
              },
              {
                "description": "Boxes 1-20 of Previously reported Wage and Tax Statement"
              }
            ]
          },
          "correctedW2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-22"
              },
              {
                "description": "Boxes 1-20 of Correct information Wage and Tax Statement"
              }
            ]
          }
        },
        "description": "IRS form W-2c, Corrected Wage and Tax Statement, from Employer (boxes a-b as issuer) to Employee (boxes d, h-i as recipient)"
      },
      "FormW-2G": {
        "title": "FormW-2G",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "winnings": {
            "type": "number",
            "description": "Box 1, Reportable winnings"
          },
          "dateWon": {
            "type": "string",
            "description": "Box 2, Date won",
            "format": "date",
            "example": "2021-07-15"
          },
          "typeOfWager": {
            "type": "string",
            "description": "Box 3, Type of wager"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "transaction": {
            "type": "string",
            "description": "Box 5, Transaction"
          },
          "race": {
            "type": "string",
            "description": "Box 6, Race"
          },
          "identicalWinnings": {
            "type": "number",
            "description": "Box 7, Winnings from identical wagers"
          },
          "cashier": {
            "type": "string",
            "description": "Box 8, Cashier"
          },
          "window": {
            "type": "string",
            "description": "Box 10, Window"
          },
          "firstId": {
            "type": "string",
            "description": "Box 11, First I.D."
          },
          "secondId": {
            "type": "string",
            "description": "Box 12, Second I.D."
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 13-18, State and Local tax withholding, use income fields for state (box 14) and local (box 16) winnings amounts"
          }
        },
        "description": "Certain Gambling Winnings, from PAYER (1st-3rd boxes as issuer) to WINNER (boxes 4th-6th and 9 as recipient)"
      },
      "CoverageMonth": {
        "title": "CoverageMonth",
        "enum": [
          "ANNUAL",
          "JANUARY",
          "FEBRUARY",
          "MARCH",
          "APRIL",
          "MAY",
          "JUNE",
          "JULY",
          "AUGUST",
          "SEPTEMBER",
          "OCTOBER",
          "NOVEMBER",
          "DECEMBER"
        ],
        "type": "string",
        "description": "Month enumeration used on forms 1095-A and 1095-C"
      },
      "ExpiredOptionType": {
        "title": "ExpiredOptionType",
        "enum": [
          "GRANTED",
          "PURCHASED"
        ],
        "type": "string",
        "description": "Type of expired stock option. Used by IRS Form 8949"
      },
      "InvestmentSaleType": {
        "title": "InvestmentSaleType",
        "enum": [
          "CRYPTOCURRENCY",
          "EMPLOYEE_STOCK_PURCHASE_PLAN",
          "INCENTIVE_STOCK_OPTION",
          "NONQUALIFIED_STOCK_OPTIONS",
          "OTHER",
          "RESTRICTED_STOCK",
          "RESTRICTED_STOCK_UNITS"
        ],
        "type": "string",
        "description": "Type of investment sale"
      },
      "MonthAbbreviation": {
        "title": "MonthAbbreviation",
        "enum": [
          "JAN",
          "FEB",
          "MAR",
          "APR",
          "MAY",
          "JUN",
          "JUL",
          "AUG",
          "SEP",
          "OCT",
          "NOV",
          "DEC"
        ],
        "type": "string",
        "description": "Used by MonthAmount"
      },
      "SaleProceedsType": {
        "title": "SaleProceedsType",
        "enum": [
          "GROSS",
          "NET"
        ],
        "type": "string",
        "description": "Gross or net proceeds. Used by Form 1099-B"
      },
      "TypeDataType": {
        "title": "TypeDataType",
        "enum": [
          "BASE64_PDF",
          "JSON"
        ],
        "type": "string",
        "description": "Specify which data type is requested using TaxDataTypeQuery parameter, to receive 'JSON' formatted tax data in `forms` property or PDF-formatted tax data encoded as Base64 in `pdf` property ('BASE64_PDF'). In TaxStatement response entity indicates which tax data property was returned"
      },
      "TypeFormType": {
        "title": "TypeFormType",
        "enum": [
          "BusinessIncomeStatement",
          "CryptocurrencyTaxStatement",
          "FarmIncomeStatement",
          "FarmRentalIncomeStatement",
          "RentalIncomeStatement",
          "RoyaltyIncomeStatement",
          "Tax1041K1",
          "Tax1042S",
          "Tax1065K1",
          "Tax1095A",
          "Tax1095B",
          "Tax1095C",
          "Tax1097Btc",
          "Tax1098",
          "Tax1098C",
          "Tax1098E",
          "Tax1098Ma",
          "Tax1098Q",
          "Tax1098T",
          "Tax1099A",
          "Tax1099B",
          "Tax1099C",
          "Tax1099Cap",
          "Tax1099ConsolidatedStatement",
          "Tax1099Div",
          "Tax1099G",
          "Tax1099H",
          "Tax1099Int",
          "Tax1099K",
          "Tax1099Ls",
          "Tax1099Ltc",
          "Tax1099Misc",
          "Tax1099Nec",
          "Tax1099Oid",
          "Tax1099Patr",
          "Tax1099Q",
          "Tax1099Qa",
          "Tax1099R",
          "Tax1099S",
          "Tax1099Sa",
          "Tax1099Sb",
          "Tax1120SK1",
          "Tax2439",
          "Tax3921",
          "Tax3922",
          "Tax5227K1",
          "Tax5498",
          "Tax5498Esa",
          "Tax5498Qa",
          "Tax5498Sa",
          "TaxW2",
          "TaxW2C",
          "TaxW2G"
        ],
        "type": "string",
        "description": "Tax form entity name e.g. \"TaxW2\""
      },
      "TaxPartyType": {
        "title": "TaxPartyType",
        "enum": [
          "BUSINESS",
          "INDIVIDUAL"
        ],
        "type": "string",
        "description": "Whether the tax legal entity is a business or an individual"
      },
      "BasicAuthCredentials1": {
        "title": "BasicAuthCredentials1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "description": "Confidential and unique identifier of the tax form"
          },
          "passcode": {
            "maxLength": 256,
            "type": "string",
            "description": "Unique, randomized and restricted password for this document"
          }
        },
        "description": "The Basic Authentication credentials to retrieve a tax form"
      },
      "CoverageMonth1": {
        "title": "CoverageMonth1",
        "enum": [
          "ANNUAL",
          "JANUARY",
          "FEBRUARY",
          "MARCH",
          "APRIL",
          "MAY",
          "JUNE",
          "JULY",
          "AUGUST",
          "SEPTEMBER",
          "OCTOBER",
          "NOVEMBER",
          "DECEMBER"
        ],
        "type": "string",
        "description": "Month"
      },
      "CoverageMonth3": {
        "title": "CoverageMonth3",
        "enum": [
          "ANNUAL",
          "JANUARY",
          "FEBRUARY",
          "MARCH",
          "APRIL",
          "MAY",
          "JUNE",
          "JULY",
          "AUGUST",
          "SEPTEMBER",
          "OCTOBER",
          "NOVEMBER",
          "DECEMBER"
        ],
        "type": "string",
        "description": "Month of coverage"
      },
      "CryptocurrencyTaxStatementlist1": {
        "title": "CryptocurrencyTaxStatementlist1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "gainsAndLosses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gainorlossfromcryptocurrencytransaction"
            },
            "description": "The list of cryptocurrency gains and losses"
          }
        },
        "description": "Cryptocurrency Tax Statement list"
      },
      "ExpiredOptionType2": {
        "title": "ExpiredOptionType2",
        "enum": [
          "GRANTED",
          "PURCHASED"
        ],
        "type": "string",
        "description": "To indicate gain or loss resulted from option expiration. If salesPrice (1d, proceeds) is zero, use PURCHASED. If costBasis (1e) is zero, use GRANTED"
      },
      "Form1042-SAgent1": {
        "title": "Form1042-SAgent1",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          }
        },
        "description": "Boxes 12a-i, Withholding agent"
      },
      "Form1042-SRecipient1": {
        "title": "Form1042-SRecipient1",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          },
          "lobCode": {
            "type": "string",
            "description": "Box 13j, Recipient's LOB code, if any"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Box 13l, Recipient's date of birth",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Boxes 13a-j, 13l, Recipient for Form 1042-S"
      },
      "Form1042-S1": {
        "title": "Form1042-S1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "formId": {
            "type": "string",
            "description": "Unique form identifier"
          },
          "amended": {
            "type": "boolean",
            "description": "Amended"
          },
          "amendmentNumber": {
            "type": "integer",
            "description": "Amendment number",
            "format": "int32"
          },
          "incomeTypeCode": {
            "type": "string",
            "description": "Box 1, Income code"
          },
          "grossIncome": {
            "type": "number",
            "description": "Box 2, Gross income"
          },
          "chapterIndicator": {
            "type": "string",
            "description": "Box 3, Chapter indicator"
          },
          "ch3ExemptionCode": {
            "type": "string",
            "description": "Box 3a, Exemption code"
          },
          "ch3TaxRate": {
            "type": "number",
            "description": "Box 3b, Tax rate"
          },
          "ch4ExemptionCode": {
            "type": "string",
            "description": "Box 4a, Exemption code"
          },
          "ch4TaxRate": {
            "type": "number",
            "description": "Box 4b, Tax rate"
          },
          "withholdingAllowance": {
            "type": "number",
            "description": "Box 5, Withholding allowance"
          },
          "netIncome": {
            "type": "number",
            "description": "Box 6, Net income"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 7a, Federal tax withheld"
          },
          "escrowProceduresApplied": {
            "type": "boolean",
            "description": "Box 7b, Check if federal tax withheld was not deposited with the IRS because escrow procedures were applied"
          },
          "subsequentYear": {
            "type": "boolean",
            "description": "Box 7c, Check if withholding occurred in subsequent year with respect to a partnership interest"
          },
          "otherAgentsTaxWithheld": {
            "type": "number",
            "description": "Box 8, Tax withheld by other agents"
          },
          "recipientRepaidAmount": {
            "type": "number",
            "description": "Box 9, Overwithheld tax repaid to recipient pursuant to adjustment procedures"
          },
          "totalTaxWithholdingCredit": {
            "type": "number",
            "description": "Box 10, Total withholding credit"
          },
          "withholdingAgentTaxPaid": {
            "type": "number",
            "description": "Box 11, Tax paid by withholding agent (amounts not withheld)"
          },
          "withholdingAgent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent1"
              },
              {
                "description": "Boxes 12a-i, Withholding agent"
              }
            ]
          },
          "form1042Recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SRecipient1"
              },
              {
                "description": "Boxes 13a-j, 13l, Recipient for Form 1042-S"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "Box 13k, Recipient account number"
          },
          "primary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent2"
              },
              {
                "description": "Boxes 14a-b, Primary Withholding Agent"
              }
            ]
          },
          "prorataBasisReporting": {
            "type": "boolean",
            "description": "Box 15, Check if pro-rata basis reporting"
          },
          "intermediary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent3"
              },
              {
                "description": "Boxes 15a-i, Intermediary or flow thru entity"
              }
            ]
          },
          "payer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Form1042-SAgent4"
              },
              {
                "description": "Boxes 16a-e, Payer"
              }
            ]
          },
          "stateAndLocal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateandLocalTaxWithholding1"
              },
              {
                "description": "Box 17, State and Local tax withholding"
              }
            ]
          }
        },
        "description": "Foreign Person's U.S. Source Income Subject to Withholding"
      },
      "Form1095-A1": {
        "title": "Form1095-A1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "marketplaceId": {
            "type": "string",
            "description": "Box 1, Marketplace identifier"
          },
          "marketplacePolicyNumber": {
            "type": "string",
            "description": "Box 2, Marketplace-assigned policy number"
          },
          "policyIssuerName": {
            "type": "string",
            "description": "Box 3, Policy issuer's name"
          },
          "recipientDateOfBirth": {
            "type": "string",
            "description": "Box 6, Recipient's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "spouseName": {
            "type": "string",
            "description": "Box 7, Recipient's spouse's name"
          },
          "spouseTin": {
            "type": "string",
            "description": "Box 8, Recipient's spouse's SSN"
          },
          "spouseDateOfBirth": {
            "type": "string",
            "description": "Box 9, Recipient's spouse's date of birth",
            "format": "date",
            "example": "2021-07-15"
          },
          "policyStartDate": {
            "type": "string",
            "description": "Box 10, Policy start date",
            "format": "date",
            "example": "2021-07-15"
          },
          "policyTerminationDate": {
            "type": "string",
            "description": "Box 11, Policy termination date",
            "format": "date",
            "example": "2021-07-15"
          },
          "coveredIndividuals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceMarketplaceCoveredIndividual"
            },
            "description": "Boxes 16+, Covered Individuals"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceCoverage"
            },
            "description": "Boxes 21-33, Coverage Information"
          }
        },
        "description": "Health Insurance Marketplace Statement"
      },
      "Form1095-B1": {
        "title": "Form1095-B1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "responsibleDateOfBirth": {
            "type": "string",
            "description": "Box 3, Date of birth (if SSN or other TIN is not available)",
            "format": "date",
            "example": "2021-07-15"
          },
          "originOfHealthCoverageCode": {
            "type": "string",
            "description": "Box 8, Enter letter identifying Origin of the Health Coverage"
          },
          "employer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty3"
              },
              {
                "description": "Boxes 10-15, Employer EIN, name and address"
              }
            ]
          },
          "coveredIndividuals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceCoveredIndividual"
            },
            "description": "Boxes 23+, Covered Individuals"
          }
        },
        "description": "Health Coverage"
      },
      "Form1095-C1": {
        "title": "Form1095-C1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "selfInsuredCoverage": {
            "type": "boolean",
            "description": "Self Insured Coverage"
          },
          "offersOfCoverage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferofHealthInsuranceCoverage"
            },
            "description": "Boxes 14-16, Employee Offer of Coverage"
          },
          "employeeAge": {
            "type": "integer",
            "description": "Employee's Age on January 1",
            "format": "int32"
          },
          "planStartMonth": {
            "type": "integer",
            "description": "Plan Start Month",
            "format": "int32"
          },
          "coveredIndividuals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthInsuranceCoveredIndividual"
            },
            "description": "Boxes 17+, Covered Individuals"
          }
        },
        "description": "Employer-Provided Health Insurance Offer and Coverage"
      },
      "Form1097-BTC1": {
        "title": "Form1097-BTC1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "filingForCredit": {
            "type": "boolean",
            "description": "Form 1097-BTC issuer is: Issuer of bond or its agent filing current year Form 1097-BTC for credit being reported"
          },
          "asNominee": {
            "type": "boolean",
            "description": "Form 1097-BTC issuer is: An entity or a person that received or should have received a current year Form 1097-BTC and is distributing part or all of that credit to others"
          },
          "total": {
            "type": "number",
            "description": "Box 1, Total"
          },
          "bondCode": {
            "type": "string",
            "description": "Box 2a, Code"
          },
          "uniqueId": {
            "type": "string",
            "description": "Box 2b, Unique Identifier"
          },
          "bondType": {
            "type": "string",
            "description": "Box 3, Bond type"
          },
          "amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthandAmount"
            },
            "description": "Box 5, Amounts by month"
          },
          "comments": {
            "type": "string",
            "description": "Box 6, Comments"
          }
        },
        "description": "Bond Tax Credit"
      },
      "Form1098-C1": {
        "title": "Form1098-C1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "dateOfContribution": {
            "type": "string",
            "description": "Box 1, Date of contribution",
            "format": "date",
            "example": "2021-07-15"
          },
          "odometerMileage": {
            "type": "integer",
            "description": "Box 2a, Odometer mileage",
            "format": "int32"
          },
          "carYear": {
            "type": "integer",
            "description": "Box 2b, Year",
            "format": "int32"
          },
          "make": {
            "type": "string",
            "description": "Box 2c, Make"
          },
          "model": {
            "type": "string",
            "description": "Box 2d, Model"
          },
          "vin": {
            "type": "string",
            "description": "Box 3, Vehicle or other identification number"
          },
          "armsLengthTransaction": {
            "type": "boolean",
            "description": "Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Box 4b, Date of sale",
            "format": "date",
            "example": "2021-07-15"
          },
          "grossProceeds": {
            "type": "number",
            "description": "Box 4c, Gross proceeds from sale (see instructions)"
          },
          "notTransferredBefore": {
            "type": "boolean",
            "description": "Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use"
          },
          "needyIndividual": {
            "type": "boolean",
            "description": "Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose"
          },
          "descriptionOfImprovements": {
            "type": "string",
            "description": "Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use"
          },
          "goodsInExchange": {
            "type": "boolean",
            "description": "Box 6a, Did you provide goods or services in exchange for the vehicle? Yes"
          },
          "valueOfExchange": {
            "type": "number",
            "description": "Box 6b, Value of goods and services provided in exchange for the vehicle"
          },
          "intangibleReligious": {
            "type": "boolean",
            "description": "Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits"
          },
          "descriptionOfGoods": {
            "type": "string",
            "description": "Box 6c, Describe the goods and services, if any, that were provided"
          },
          "maxDeductionApplies": {
            "type": "boolean",
            "description": "Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked"
          }
        },
        "description": "Contributions of Motor Vehicles, Boats, and Airplanes"
      },
      "Form1098-E1": {
        "title": "Form1098-E1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "studentLoanInterest": {
            "type": "number",
            "description": "Box 1, Student loan interest received by lender"
          },
          "box1ExcludesFees": {
            "type": "boolean",
            "description": "Box 2, If checked, box 1 does not include loan origination fee made before September 1, 2004"
          }
        },
        "description": "Student Loan Interest Statement"
      },
      "Form1098-MA1": {
        "title": "Form1098-MA1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "totalMortgagePayments": {
            "type": "number",
            "description": "Box 1, Total State HFA (Housing Finance Agency) and homeowner mortgage payments"
          },
          "mortgageAssistancePayments": {
            "type": "number",
            "description": "Box 2, State HFA (Housing Finance Agency) mortgage assistance payments"
          },
          "homeownerMortgagePayments": {
            "type": "number",
            "description": "Box 3, Homeowner mortgage payments"
          }
        },
        "description": "Mortgage Assistance Payments"
      },
      "Form1098-Q1": {
        "title": "Form1098-Q1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "planNumber": {
            "type": "string",
            "description": "Plan number"
          },
          "planName": {
            "type": "string",
            "description": "Plan name"
          },
          "planSponsorId": {
            "type": "string",
            "description": "Plan sponsor's EIN"
          },
          "annuityAmount": {
            "type": "number",
            "description": "Box 1a, Annuity amount on start date"
          },
          "startDate": {
            "type": "string",
            "description": "Box 1b, Annuity start date",
            "format": "date",
            "example": "2021-07-15"
          },
          "canBeAccelerated": {
            "type": "boolean",
            "description": "Box 2, Start date may be accelerated"
          },
          "totalPremiums": {
            "type": "number",
            "description": "Box 3, Total premiums"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value of qualifying longevity annuity contract (FMV of QLAC)"
          },
          "premiums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateandAmount"
            },
            "description": "Box 5, Total monthly premiums paid for the contract and date of the last payment in the month"
          }
        },
        "description": "Qualifying Longevity Annuity Contract Information"
      },
      "Form1098-T1": {
        "title": "Form1098-T1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "studentTinCertification": {
            "type": "boolean",
            "description": "By checking the box in STUDENT'S TIN, filer is making a true and accurate certification under penalty of perjury that they have complied with standards promulgated by the Secretary for obtaining such individual's TIN"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "halfTime": {
            "type": "boolean",
            "description": "Box 8, Check if at least half-time student"
          },
          "qualifiedTuitionFees": {
            "type": "number",
            "description": "Box 1, Payments received for qualified tuition and related expenses"
          },
          "adjustmentPriorYear": {
            "type": "number",
            "description": "Box 4, Adjustments made for a prior year"
          },
          "scholarship": {
            "type": "number",
            "description": "Box 5, Scholarships or grants"
          },
          "adjustScholarship": {
            "type": "number",
            "description": "Box 6, Adjustments to scholarships or grants for a prior year"
          },
          "includeJanMar": {
            "type": "boolean",
            "description": "Box 7, Check if the amount in box 1 or box 2 includes amounts for an academic period beginning January - March of next year"
          },
          "graduate": {
            "type": "boolean",
            "description": "Box 9, Check if graduate student"
          },
          "insuranceRefund": {
            "type": "number",
            "description": "Box 10, Insurance contract reimbursement / refund"
          }
        },
        "description": "Tuition Statement"
      },
      "Form1099-A1": {
        "title": "Form1099-A1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "dateOfAcquisition": {
            "type": "string",
            "description": "Box 1, Date of lender's acquisition or knowledge of abandonment",
            "format": "date",
            "example": "2021-07-15"
          },
          "principalBalance": {
            "type": "number",
            "description": "Box 2, Balance of principal outstanding"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value property"
          },
          "personallyLiable": {
            "type": "boolean",
            "description": "Box 5, If checked, the borrower was personally liable for repayment of the debt"
          },
          "propertyDescription": {
            "type": "string",
            "description": "Box 6, Description of property"
          }
        },
        "description": "Acquisition or Abandonment of Secured Property"
      },
      "Form1099-B1": {
        "title": "Form1099-B1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-16, State and Local tax withholding"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "profitOnClosedContracts": {
            "type": "number",
            "description": "Box 8, Profit or (loss) realized in current year on closed contracts"
          },
          "unrealizedProfitOpenContractsBegin": {
            "type": "number",
            "description": "Box 9, Unrealized profit or loss on open contracts at end of last year"
          },
          "unrealizedProfitOpenContractsEnd": {
            "type": "number",
            "description": "Box 10, Unrealized profit or loss on open contracts at end of current year"
          },
          "aggregateProfitOnContracts": {
            "type": "number",
            "description": "Box 11, Aggregate profit or (loss) on contracts"
          },
          "bartering": {
            "type": "number",
            "description": "Box 13, Bartering"
          },
          "securityDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecurityDetailIRSForm1099-B"
            },
            "description": "Boxes 1-3, 5-7, 12, Security details"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Proceeds From Broker and Barter Exchange Transactions"
      },
      "Form1099-C1": {
        "title": "Form1099-C1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "dateOfEvent": {
            "type": "string",
            "description": "Box 1, Date of identifiable event",
            "format": "date",
            "example": "2021-07-15"
          },
          "amountDischarged": {
            "type": "number",
            "description": "Box 2, Amount of debt discharged"
          },
          "interestIncluded": {
            "type": "number",
            "description": "Box 3, Interest if included in box 2"
          },
          "debtDescription": {
            "type": "string",
            "description": "Box 4, Debt description"
          },
          "personallyLiable": {
            "type": "boolean",
            "description": "Box 5, If checked, the debtor was personally liable for repayment of the debt"
          },
          "debtCode": {
            "type": "string",
            "description": "Box 6, Identifiable debt code"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 7, Fair market value of property"
          }
        },
        "description": "Cancellation of Debt"
      },
      "Form1099-CAP1": {
        "title": "Form1099-CAP1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Box 1, Date of sale or exchange",
            "format": "date",
            "example": "2021-07-15"
          },
          "aggregateAmount": {
            "type": "number",
            "description": "Box 2, Aggregate amount received"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Box 3, Number of shares exchanged"
          },
          "stockClasses": {
            "type": "string",
            "description": "Box 4, Classes of stock exchanged"
          }
        },
        "description": "Changes in Corporate Control and Capital Structure"
      },
      "Form1099ConsolidatedStatement1": {
        "title": "Form1099ConsolidatedStatement1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "marginInterestPaid": {
            "type": "number",
            "description": "Interest paid on margin account"
          },
          "paymentInLieuPaid": {
            "type": "number",
            "description": "Payment in lieu of dividends paid"
          },
          "advisorFeesPaid": {
            "type": "number",
            "description": "Advisor fees paid"
          },
          "otherFeesPaid": {
            "type": "number",
            "description": "Other fees paid"
          },
          "corporateBondInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 1, Corporate bond interest income"
          },
          "usBondInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 3, accrued U.S. Treasury Notes and Bonds interest income"
          },
          "taxExemptInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 8, tax exempt interest income from municipal bonds"
          },
          "specifiedPabInterestPaid": {
            "type": "number",
            "description": "Accrued Interest Paid offset to form 1099-INT box 9, tax exempt interest income from Private Activity Bonds"
          }
        },
        "description": "Consolidated Statement for combined IRS Form 1099s"
      },
      "Form1099-DIV1": {
        "title": "Form1099-DIV1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 1a, Total ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 1b, Qualified dividends"
          },
          "totalCapitalGain": {
            "type": "number",
            "description": "Box 2a, Total capital gain distributions"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 2b, Unrecaptured Section 1250 gain"
          },
          "section1202Gain": {
            "type": "number",
            "description": "Box 2c, Section 1202 gain"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 2d, Collectibles (28%) gain"
          },
          "section897Dividends": {
            "type": "number",
            "description": "Box 2e, Section 897 ordinary dividends"
          },
          "section897CapitalGain": {
            "type": "number",
            "description": "Box 2f, Section 897 capital gain"
          },
          "nonTaxableDistribution": {
            "type": "number",
            "description": "Box 3, Nondividend distributions"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "section199ADividends": {
            "type": "number",
            "description": "Box 5, Section 199A dividends"
          },
          "investmentExpenses": {
            "type": "number",
            "description": "Box 6, Investment expenses"
          },
          "foreignTaxPaid": {
            "type": "number",
            "description": "Box 7, Foreign tax paid"
          },
          "foreignCountry": {
            "type": "string",
            "description": "Box 8, Foreign country or U.S. possession"
          },
          "cashLiquidation": {
            "type": "number",
            "description": "Box 9, Cash liquidation distributions"
          },
          "nonCashLiquidation": {
            "type": "number",
            "description": "Box 10, Noncash liquidation distributions"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Box 11, FATCA filing requirement"
          },
          "taxExemptInterestDividend": {
            "type": "number",
            "description": "Box 12, Exempt-interest dividends"
          },
          "specifiedPabInterestDividend": {
            "type": "number",
            "description": "Box 13, Specified private activity bond interest dividends"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-16, State and Local tax withholding"
          },
          "foreignIncomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Foreign income information"
          },
          "stateTaxExemptIncomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Tax exempt income state information"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Dividends and Distributions"
      },
      "Form1099-G1": {
        "title": "Form1099-G1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "unemploymentCompensation": {
            "type": "number",
            "description": "Box 1, Unemployment compensation"
          },
          "taxRefund": {
            "type": "number",
            "description": "Box 2, State or local income tax refunds, credits, or offsets"
          },
          "refundYear": {
            "type": "integer",
            "description": "Box 3, Box 2 amount is for tax year",
            "format": "int32"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "rtaaPayments": {
            "type": "number",
            "description": "Box 5, RTAA payments"
          },
          "grants": {
            "type": "number",
            "description": "Box 6, Taxable grants"
          },
          "agriculturePayments": {
            "type": "number",
            "description": "Box 7, Agriculture payments"
          },
          "businessIncome": {
            "type": "boolean",
            "description": "Box 8, If checked, box 2 is trade or business income"
          },
          "marketGain": {
            "type": "number",
            "description": "Box 9, Market gain"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 10-11, State and Local tax withholding"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Certain Government Payments"
      },
      "Form1099-H1": {
        "title": "Form1099-H1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "advancePayments": {
            "type": "number",
            "description": "Box 1, Amount of HCTC advance payments"
          },
          "numberOfMonths": {
            "type": "integer",
            "description": "Box 2, Number of months HCTC advance payments and reimbursement credits paid to you",
            "format": "int32"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthandAmount"
            },
            "description": "Boxes 3-14, Payments by month"
          }
        },
        "description": "Health Coverage Tax Credit (HCTC) Advance Payments"
      },
      "Form1099-INT1": {
        "title": "Form1099-INT1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "FATCA filing requirement"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "payerRtn": {
            "type": "string",
            "description": "Payer's RTN"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 1, Interest income"
          },
          "earlyWithdrawalPenalty": {
            "type": "number",
            "description": "Box 2, Early withdrawal penalty"
          },
          "usBondInterest": {
            "type": "number",
            "description": "Box 3, Interest on U.S. Savings Bonds and Treasury obligations"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "investmentExpenses": {
            "type": "number",
            "description": "Box 5, Investment expenses"
          },
          "foreignTaxPaid": {
            "type": "number",
            "description": "Box 6, Foreign tax paid"
          },
          "foreignCountry": {
            "type": "string",
            "description": "Box 7, Foreign country or U.S. possession"
          },
          "taxExemptInterest": {
            "type": "number",
            "description": "Box 8, Tax-exempt interest"
          },
          "specifiedPabInterest": {
            "type": "number",
            "description": "Box 9, Specified private activity bond interest"
          },
          "marketDiscount": {
            "type": "number",
            "description": "Box 10, Market discount"
          },
          "bondPremium": {
            "type": "number",
            "description": "Box 11, Bond premium"
          },
          "usBondPremium": {
            "type": "number",
            "description": "Box 12, Bond premium on Treasury obligations"
          },
          "taxExemptBondPremium": {
            "type": "number",
            "description": "Box 13, Bond premium on tax-exempt bond"
          },
          "cusipNumber": {
            "type": "string",
            "description": "Box 14, Tax-exempt bond CUSIP no."
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 15-17, State and Local tax withholding"
          },
          "foreignIncomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Supplemental foreign income amount information (description is country)"
          },
          "stateTaxExemptIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Supplemental tax-exempt income by state (description is state)"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Interest Income"
      },
      "Form1099-K1": {
        "title": "Form1099-K1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "paymentSettlementEntity": {
            "type": "boolean",
            "description": "Check to indicate if FILER is a Payment Settlement Entity (PSE)"
          },
          "electronicPaymentFacilitator": {
            "type": "boolean",
            "description": "Check to indicate if FILER is an Electronic Payment Facilitator (EPF) / Other third party"
          },
          "paymentCard": {
            "type": "boolean",
            "description": "Check to indicate transactions reported are: Payment card"
          },
          "thirdPartyNetwork": {
            "type": "boolean",
            "description": "Check to indicate transactions reported are: Third party network"
          },
          "pseName": {
            "type": "string",
            "description": "PSE's name"
          },
          "psePhone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension1"
              },
              {
                "description": "PSE's phone number"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossAmount": {
            "type": "number",
            "description": "Box 1a, Gross amount of payment card/third party network transactions"
          },
          "cardNotPresent": {
            "type": "number",
            "description": "Box 1b, Card Not Present Transactions"
          },
          "merchantCategoryCode": {
            "type": "string",
            "description": "Box 2, Merchant category code"
          },
          "numberOfTransactions": {
            "type": "number",
            "description": "Box 3, Number of purchase transactions"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "monthAmounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthandAmount"
            },
            "description": "Box 5, Monthly amounts"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 6-8, State and Local tax withholding"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Merchant Card and Third-Party Network Payments"
      },
      "Form1099-LS1": {
        "title": "Form1099-LS1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "policyNumber": {
            "type": "string",
            "description": "Policy number"
          },
          "payment": {
            "type": "number",
            "description": "Box 1, Amount paid to payment recipient"
          },
          "saleDate": {
            "type": "string",
            "description": "Box 2, Date of sale",
            "format": "date",
            "example": "2021-07-15"
          },
          "issuerName": {
            "type": "string",
            "description": "Issuer's name"
          },
          "contactNameAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NameAddressandPhone"
              },
              {
                "description": "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)"
              }
            ]
          }
        },
        "description": "Reportable Life Insurance Sale"
      },
      "Form1099-LTC1": {
        "title": "Form1099-LTC1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "ltcBenefits": {
            "type": "number",
            "description": "Box 1, Gross long-term care benefits paid"
          },
          "deathBenefits": {
            "type": "number",
            "description": "Box 2, Accelerated death benefits paid"
          },
          "perDiem": {
            "type": "boolean",
            "description": "Box 3, Per diem"
          },
          "reimbursedAmount": {
            "type": "boolean",
            "description": "Box 3, Reimbursed amount"
          },
          "insuredId": {
            "type": "string",
            "description": "INSURED'S taxpayer identification no."
          },
          "insuredNameAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NameandAddress"
              },
              {
                "description": "Insured name and address"
              }
            ]
          },
          "qualifiedContract": {
            "type": "boolean",
            "description": "Box 4, Qualified contract"
          },
          "chronicallyIll": {
            "type": "boolean",
            "description": "Box 5, Chronically ill"
          },
          "terminallyIll": {
            "type": "boolean",
            "description": "Box 5, Terminally ill"
          },
          "dateCertified": {
            "type": "string",
            "description": "Date certified",
            "format": "date",
            "example": "2021-07-15"
          }
        },
        "description": "Long-Term Care and Accelerated Death Benefits"
      },
      "Form1099-MISC1": {
        "title": "Form1099-MISC1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "rents": {
            "type": "number",
            "description": "Box 1, Rents"
          },
          "royalties": {
            "type": "number",
            "description": "Box 2, Royalties"
          },
          "otherIncome": {
            "type": "number",
            "description": "Box 3, Other income"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "fishingBoatProceeds": {
            "type": "number",
            "description": "Box 5, Fishing boat proceeds"
          },
          "medicalHealthPayment": {
            "type": "number",
            "description": "Box 6, Medical and health care payments"
          },
          "payerDirectSales": {
            "type": "boolean",
            "description": "Box 7, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
          },
          "substitutePayments": {
            "type": "number",
            "description": "Box 8, Substitute payments in lieu of dividends or interest"
          },
          "cropInsurance": {
            "type": "number",
            "description": "Box 9, Crop insurance proceeds"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          },
          "grossAttorney": {
            "type": "number",
            "description": "Box 10, Gross proceeds paid to an attorney"
          },
          "fishPurchased": {
            "type": "number",
            "description": "Box 11, Fish purchased for resale"
          },
          "section409ADeferrals": {
            "type": "number",
            "description": "Box 12, Section 409A deferrals"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Box 13, FATCA filing requirement"
          },
          "excessGolden": {
            "type": "number",
            "description": "Box 14, Excess golden parachute payments"
          },
          "nonQualifiedDeferredCompensation": {
            "type": "number",
            "description": "Box 15, Nonqualified Deferred Compensation"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 16-18, State and Local tax withholding"
          }
        },
        "description": "Miscellaneous Income"
      },
      "Form1099-NEC1": {
        "title": "Form1099-NEC1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          },
          "nonEmployeeCompensation": {
            "type": "number",
            "description": "Box 1, Nonemployee compensation"
          },
          "payerDirectSales": {
            "type": "boolean",
            "description": "Box 2, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 5-7, State and Local tax withholding"
          }
        },
        "description": "Nonemployee Compensation"
      },
      "Form1099-OID1": {
        "title": "Form1099-OID1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "FATCA filing requirement"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "originalIssueDiscount": {
            "type": "number",
            "description": "Box 1, Original issue discount"
          },
          "otherPeriodicInterest": {
            "type": "number",
            "description": "Box 2, Other periodic interest"
          },
          "earlyWithdrawalPenalty": {
            "type": "number",
            "description": "Box 3, Early withdrawal penalty"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "marketDiscount": {
            "type": "number",
            "description": "Box 5, Market discount"
          },
          "acquisitionPremium": {
            "type": "number",
            "description": "Box 6, Acquisition premium"
          },
          "oidDescription": {
            "type": "string",
            "description": "Box 7, Description"
          },
          "discountOnTreasuryObligations": {
            "type": "number",
            "description": "Box 8, Original issue discount on U.S. Treasury obligations"
          },
          "investmentExpenses": {
            "type": "number",
            "description": "Box 9, Investment expenses"
          },
          "bondPremium": {
            "type": "number",
            "description": "Box 10, Bond premium"
          },
          "taxExemptOid": {
            "type": "number",
            "description": "Box 11, Tax-exempt OID"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 12-14, State and Local tax withheld"
          },
          "stateExemptOid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Supplemental: State name and tax-exempt OID by state"
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Original Issue Discount"
      },
      "Form1099-PATR1": {
        "title": "Form1099-PATR1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "patronageDividends": {
            "type": "number",
            "description": "Box 1, Patronage dividends"
          },
          "nonpatronageDistributions": {
            "type": "number",
            "description": "Box 2, Nonpatronage distributions"
          },
          "perUnitRetainAllocations": {
            "type": "number",
            "description": "Box 3, Per-unit retain allocations"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "redemption": {
            "type": "number",
            "description": "Box 5, Redemption of nonqualified notices and retain allocations"
          },
          "section199Deduction": {
            "type": "number",
            "description": "Box 6, Section 199A(g) deduction"
          },
          "qualifiedPayments": {
            "type": "number",
            "description": "Box 7, Qualified payments"
          },
          "section199QualifiedItems": {
            "type": "number",
            "description": "Box 8, Section 199A(a) qualified items"
          },
          "section199SstbItems": {
            "type": "number",
            "description": "Box 9, Section 199A(a) SSTB (Specified Service Trade or Business) items"
          },
          "investmentCredit": {
            "type": "number",
            "description": "Box 10, Investment credit"
          },
          "workOpportunityCredit": {
            "type": "number",
            "description": "Box 11, Work opportunity credit"
          },
          "otherCreditsAndDeductions": {
            "type": "number",
            "description": "Box 12, Other credits and deductions"
          },
          "specifiedCoop": {
            "type": "boolean",
            "description": "Box 13, Specified Cooperative"
          },
          "stateAndLocal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateandLocalTaxWithholding2"
              },
              {
                "description": "State and Local tax withholding, from IRS's IRIS schema"
              }
            ]
          },
          "secondTinNotice": {
            "type": "boolean",
            "description": "Second TIN Notice"
          }
        },
        "description": "Taxable Distributions Received From Cooperatives"
      },
      "Form1099-Q1": {
        "title": "Form1099-Q1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "earnings": {
            "type": "number",
            "description": "Box 2, Earnings"
          },
          "basis": {
            "type": "number",
            "description": "Box 3, Basis"
          },
          "trusteeToTrustee": {
            "type": "boolean",
            "description": "Box 4, Trustee-to-trustee transfer"
          },
          "tuitionPlanPrivate": {
            "type": "boolean",
            "description": "Box 5a, Qualified tuition plan - Private"
          },
          "tuitionPlanPublic": {
            "type": "boolean",
            "description": "Box 5b, Qualified tuition plan - Public"
          },
          "coverdellEsa": {
            "type": "boolean",
            "description": "Box 5c, Coverdell ESA"
          },
          "recipientIsNotBeneficiary": {
            "type": "boolean",
            "description": "Box 6, If this box is checked, the recipient is not the designated beneficiary"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "If fair market value (FMV) is included, see Pub. 970, Tax Benefits for Education, for how to figure earnings"
          }
        },
        "description": "Payments From Qualified Education Programs"
      },
      "Form1099-QA1": {
        "title": "Form1099-QA1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "earnings": {
            "type": "number",
            "description": "Box 2, Earnings"
          },
          "basis": {
            "type": "number",
            "description": "Box 3, Basis"
          },
          "programTransfer": {
            "type": "boolean",
            "description": "Box 4, Program-to-program transfer"
          },
          "terminated": {
            "type": "boolean",
            "description": "Box 5, Check if ABLE account terminated in current year"
          },
          "notBeneficiary": {
            "type": "boolean",
            "description": "Box 6, Check if the recipient is not the designated beneficiary"
          }
        },
        "description": "Distributions From ABLE Accounts"
      },
      "Form1099-R1": {
        "title": "Form1099-R1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "allocableToIRR": {
            "type": "number",
            "description": "Box 10, Amount allocable to IRR within 5 years"
          },
          "firstYearOfRoth": {
            "maximum": 2050.0,
            "minimum": 1997.0,
            "type": "integer",
            "description": "Box 11, First year of designated Roth contributions. A four-digit year. (Like `TaxYear` definition, but lower minimum since first year of Roth IRAs was 1997)",
            "format": "int32",
            "example": 2020
          },
          "recipientAccountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "taxableAmount": {
            "type": "number",
            "description": "Box 2a, Taxable amount"
          },
          "taxableAmountNotDetermined": {
            "type": "boolean",
            "description": "Box 2b, Taxable amount not determined"
          },
          "totalDistribution": {
            "type": "boolean",
            "description": "Box 2c, Total distribution"
          },
          "capitalGain": {
            "type": "number",
            "description": "Box 3, Capital gain"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "employeeContributions": {
            "type": "number",
            "description": "Box 5, Employee contributions"
          },
          "netUnrealizedAppreciation": {
            "type": "number",
            "description": "Box 6, Net unrealized appreciation"
          },
          "distributionCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Box 7, Distribution codes"
          },
          "iraSepSimple": {
            "type": "boolean",
            "description": "Box 7b, IRA/SEP/SIMPLE"
          },
          "otherAmount": {
            "type": "number",
            "description": "Box 8, Other"
          },
          "otherPercent": {
            "type": "number",
            "description": "Box 8, Other percent"
          },
          "yourPercentOfTotal": {
            "type": "number",
            "description": "Box 9a, Your percent of total distribution"
          },
          "totalEmployeeContributions": {
            "type": "number",
            "description": "Box 9b, Total employee contributions"
          },
          "foreignAccountTaxCompliance": {
            "type": "boolean",
            "description": "Box 12, FATCA filing requirement"
          },
          "dateOfPayment": {
            "type": "string",
            "description": "Box 13, Date of payment",
            "format": "date",
            "example": "2021-07-15"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 14-19, State and Local tax withholding"
          }
        },
        "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc."
      },
      "Form1099-S1": {
        "title": "Form1099-S1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account or escrow number"
          },
          "dateOfClosing": {
            "type": "string",
            "description": "Box 1, Date of closing",
            "format": "date",
            "example": "2021-07-15"
          },
          "grossProceeds": {
            "type": "number",
            "description": "Box 2, Gross proceeds"
          },
          "addressOrLegalDescription": {
            "type": "string",
            "description": "Box 3, Address or legal description"
          },
          "receivedOtherConsideration": {
            "type": "boolean",
            "description": "Box 4, Transferor received or will receive property or services as part of the consideration (if checked)"
          },
          "foreignPerson": {
            "type": "boolean",
            "description": "Box 5, If checked, transferor is a foreign person (nonresident alien, foreign partnership, foreign estate, or foreign trust)"
          },
          "realEstateTax": {
            "type": "number",
            "description": "Box 6, Buyer's part of real estate tax"
          }
        },
        "description": "Proceeds From Real Estate Transactions"
      },
      "Form1099-SA1": {
        "title": "Form1099-SA1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "grossDistribution": {
            "type": "number",
            "description": "Box 1, Gross distribution"
          },
          "earnings": {
            "type": "number",
            "description": "Box 2, Earnings on excess contributions"
          },
          "distributionCode": {
            "type": "string",
            "description": "Box 3, Distribution code"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, FMV on date of death"
          },
          "hsa": {
            "type": "boolean",
            "description": "Box 5a, HSA"
          },
          "archerAccount": {
            "type": "boolean",
            "description": "Box 5b, Archer MSA"
          },
          "medicalSavingsAccount": {
            "type": "boolean",
            "description": "Box 5c, Medicare Advantage (MA) MSA"
          }
        },
        "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA"
      },
      "Form1099-SB1": {
        "title": "Form1099-SB1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "policyNumber": {
            "type": "string",
            "description": "Policy number"
          },
          "contractInvestment": {
            "type": "number",
            "description": "Box 1, Investment in contract"
          },
          "surrenderAmount": {
            "type": "number",
            "description": "Box 2, Surrender amount"
          },
          "contactNameAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NameAddressandPhone1"
              },
              {
                "description": "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)"
              }
            ]
          }
        },
        "description": "Seller's Investment in Life Insurance Contract"
      },
      "Form5498-ESA1": {
        "title": "Form5498-ESA1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "coverdellEsaContributions": {
            "type": "number",
            "description": "Box 1, Coverdell ESA contributions"
          },
          "rolloverContributions": {
            "type": "number",
            "description": "Box 2, Rollover contributions"
          }
        },
        "description": "Coverdell ESA Contribution Information"
      },
      "Form5498-QA1": {
        "title": "Form5498-QA1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "ableContributions": {
            "type": "number",
            "description": "Box 1, ABLE contributions"
          },
          "rollovers": {
            "type": "number",
            "description": "Box 2, ABLE to ABLE Rollovers"
          },
          "cumulativeContributions": {
            "type": "number",
            "description": "Box 3, Cumulative contributions"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value"
          },
          "openedInTaxYear": {
            "type": "boolean",
            "description": "Box 5, Check if account opened in current tax year"
          },
          "basisOfDisabilityCode": {
            "type": "string",
            "description": "Box 6, Basis of eligibility"
          },
          "typeOfDisabilityCode": {
            "type": "string",
            "description": "Box 7, Code"
          }
        },
        "description": "ABLE Account Contribution Information"
      },
      "Form5498-SA1": {
        "title": "Form5498-SA1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "msaContributions": {
            "type": "number",
            "description": "Box 1, Employee or self-employed person's Archer MSA contributions made in current and following years for current year"
          },
          "totalContributions": {
            "type": "number",
            "description": "Box 2, Total contributions made in current year"
          },
          "totalPostYearEnd": {
            "type": "number",
            "description": "Box 3, Total HSA or Archer MSA contributions made in following year for current year"
          },
          "rolloverContributions": {
            "type": "number",
            "description": "Box 4, Rollover contributions"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 5, Fair market value of HSA, Archer MSA, or Medicare Advantage (MA) MSA"
          },
          "hsa": {
            "type": "boolean",
            "description": "Box 6a, HSA"
          },
          "archer": {
            "type": "boolean",
            "description": "Box 6b, Archer MSA"
          },
          "maMsa": {
            "type": "boolean",
            "description": "Box 6c, Medicare Advantage (MA) MSA"
          }
        },
        "description": "HSA, Archer MSA, or Medicare Advantage MSA Information"
      },
      "Form1042-SAgent2": {
        "title": "Form1042-SAgent2",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          }
        },
        "description": "Boxes 14a-b, Primary Withholding Agent"
      },
      "Form1042-SAgent3": {
        "title": "Form1042-SAgent3",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          }
        },
        "description": "Boxes 15a-i, Intermediary or flow thru entity"
      },
      "Form1042-SAgent4": {
        "title": "Form1042-SAgent4",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          },
          "ch3StatusCode": {
            "type": "string",
            "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer"
          },
          "ch4StatusCode": {
            "type": "string",
            "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer"
          },
          "giin": {
            "type": "string",
            "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer"
          },
          "foreignTin": {
            "type": "string",
            "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity"
          }
        },
        "description": "Boxes 16a-e, Payer"
      },
      "Form1041K-11": {
        "title": "Form1041K-11",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "finalK1": {
            "type": "boolean",
            "description": "Final K-1"
          },
          "amendedK1": {
            "type": "boolean",
            "description": "Amended K-1"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "form1041T": {
            "type": "boolean",
            "description": "Box D, Check if Form 1041-T was filed"
          },
          "date1041T": {
            "type": "string",
            "description": "Box D, and enter the date it was filed",
            "format": "date",
            "example": "2021-07-15"
          },
          "final1041": {
            "type": "boolean",
            "description": "Box E, Check if this is the final Form 1041 for the estate or trust"
          },
          "domestic": {
            "type": "boolean",
            "description": "Box H, Domestic beneficiary"
          },
          "foreign": {
            "type": "boolean",
            "description": "Box H, Foreign beneficiary"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 1, Interest income"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 2a, Ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 2b, Qualified dividends"
          },
          "netShortTermGain": {
            "type": "number",
            "description": "Box 3, Net short-term capital gain"
          },
          "netLongTermGain": {
            "type": "number",
            "description": "Box 4a, Net long-term capital gain"
          },
          "gain28Rate": {
            "type": "number",
            "description": "Box 4b, 28% rate gain"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 4c, Unrecaptured section 1250 gain"
          },
          "otherPortfolioIncome": {
            "type": "number",
            "description": "Box 5, Other portfolio and nonbusiness income"
          },
          "ordinaryBusinessIncome": {
            "type": "number",
            "description": "Box 6, Ordinary business income"
          },
          "netRentalRealEstateIncome": {
            "type": "number",
            "description": "Box 7, Net rental real estate income"
          },
          "otherRentalIncome": {
            "type": "number",
            "description": "Box 8, Other rental income"
          },
          "directlyApportionedDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 9, Directly apportioned deductions"
          },
          "estateTaxDeduction": {
            "type": "number",
            "description": "Box 10, Estate tax deduction"
          },
          "finalYearDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 11, Final year deductions"
          },
          "fiduciary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty2"
              },
              {
                "description": "Box C, Fiduciary's name and address"
              }
            ]
          },
          "amtAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Alternative minimum tax adjustment"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 13, Credits and credit recapture"
          },
          "otherInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 14, Other information"
          }
        },
        "description": "Beneficiary's Share of Income, Deductions, Credits, etc."
      },
      "Form1065K-11": {
        "title": "Form1065K-11",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end data",
            "format": "date",
            "example": "2021-07-15"
          },
          "finalK1": {
            "type": "boolean",
            "description": "Final K-1"
          },
          "amendedK1": {
            "type": "boolean",
            "description": "Amended K-1"
          },
          "irsCenter": {
            "type": "string",
            "description": "Box C, IRS Center where partnership filed return"
          },
          "publiclyTraded": {
            "type": "boolean",
            "description": "Box D, Check if this is a publicly traded partnership (PTP)"
          },
          "generalPartner": {
            "type": "boolean",
            "description": "Box G, General partner or LLC member-manager"
          },
          "limitedPartner": {
            "type": "boolean",
            "description": "Box G, Limited partner or other LLC member"
          },
          "domestic": {
            "type": "boolean",
            "description": "Box H1, Domestic partner"
          },
          "foreign": {
            "type": "boolean",
            "description": "Box H1, Foreign partner"
          },
          "disregardedEntity": {
            "type": "boolean",
            "description": "Box H2, Check if the partner is a disregarded entity (DE), and enter the partner's TIN and Name"
          },
          "disregardedEntityTin": {
            "type": "string",
            "description": "Box H2, Disregarded entity partner's TIN"
          },
          "disregardedEntityName": {
            "type": "string",
            "description": "Box H2, Disregarded entity partner's Name"
          },
          "entityType": {
            "type": "string",
            "description": "Box I1, What type of entity is this partner?"
          },
          "retirementPlan": {
            "type": "boolean",
            "description": "Box I2, If this partner is a retirement plan (IRA/SEP/Keogh/etc.), check here"
          },
          "profitShareBegin": {
            "type": "number",
            "description": "Box J, Partner's share of profit - beginning"
          },
          "profitShareEnd": {
            "type": "number",
            "description": "Box J, Partner's share of profit - ending"
          },
          "lossShareBegin": {
            "type": "number",
            "description": "Box J, Partner's share of loss - beginning"
          },
          "lossShareEnd": {
            "type": "number",
            "description": "Box J, Partner's share of loss - ending"
          },
          "capitalShareBegin": {
            "type": "number",
            "description": "Box J, Partner's share of capital - beginning"
          },
          "capitalShareEnd": {
            "type": "number",
            "description": "Box J, Partner's share of capital - ending"
          },
          "decreaseDueToSaleOrExchange": {
            "type": "boolean",
            "description": "Box J, Check if decrease is due to sale or exchange of partnership interest. Deprecated and no longer used beginning tax year 2023. Use `decreaseDueToSale` and `decreaseDueToExchange` instead",
            "deprecated": true
          },
          "decreaseDueToSale": {
            "type": "boolean",
            "description": "Box J, Check if decrease is due to sale of partnership interest"
          },
          "decreaseDueToExchange": {
            "type": "boolean",
            "description": "Box J, Check if decrease is due to exchange of partnership interest"
          },
          "nonrecourseLiabilityShareBegin": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - beginning - nonrecourse"
          },
          "nonrecourseLiabilityShareEnd": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - ending - nonrecourse"
          },
          "qualifiedLiabilityShareBegin": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - beginning - qualified nonrecourse financing"
          },
          "qualifiedLiabilityShareEnd": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - ending - qualified nonrecourse financing"
          },
          "recourseLiabilityShareBegin": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - beginning - recourse"
          },
          "recourseLiabilityShareEnd": {
            "type": "number",
            "description": "Box K1, Partner's share of liabilities - ending - recourse"
          },
          "includesLowerTierLiability": {
            "type": "boolean",
            "description": "Box K2, Check this box if item K1 includes liability amounts from lower tier partnerships"
          },
          "liabilitySubjectToGuarantees": {
            "type": "boolean",
            "description": "Box K3, Check if any of the above liability is subject to guarantees or other payment obligations by the partner"
          },
          "capitalAccountBegin": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Beginning capital account"
          },
          "capitalAccountContributions": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Capital contributed during the year"
          },
          "capitalAccountIncrease": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Current year net income (loss)"
          },
          "capitalAccountOther": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Other increase (decrease)"
          },
          "capitalAccountWithdrawals": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Withdrawals & distributions"
          },
          "capitalAccountEnd": {
            "type": "number",
            "description": "Box L, Partner's capital account analysis - Ending capital account"
          },
          "builtInGain": {
            "type": "boolean",
            "description": "Box M, Did the partner contribute property with a built-in gain or loss? - Yes"
          },
          "unrecognizedSection704Begin": {
            "type": "number",
            "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - beginning"
          },
          "unrecognizedSection704End": {
            "type": "number",
            "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - ending"
          },
          "ordinaryIncome": {
            "type": "number",
            "description": "Box 1, Ordinary business income (loss)"
          },
          "netRentalRealEstateIncome": {
            "type": "number",
            "description": "Box 2, Net rental real estate income (loss)"
          },
          "otherRentalIncome": {
            "type": "number",
            "description": "Box 3, Other net rental income (loss)"
          },
          "guaranteedPaymentServices": {
            "type": "number",
            "description": "Box 4a, Guaranteed payments for services"
          },
          "guaranteedPaymentCapital": {
            "type": "number",
            "description": "Box 4b, Guaranteed payments for capital"
          },
          "guaranteedPayment": {
            "type": "number",
            "description": "Box 4c, Total guaranteed payments"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 5, Interest income"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 6a, Ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 6b, Qualified dividends"
          },
          "dividendEquivalents": {
            "type": "number",
            "description": "Box 6c, Dividend equivalents"
          },
          "royalties": {
            "type": "number",
            "description": "Box 7, Royalties"
          },
          "netShortTermGain": {
            "type": "number",
            "description": "Box 8, Net short-term capital gain (loss)"
          },
          "netLongTermGain": {
            "type": "number",
            "description": "Box 9a, Net long-term capital gain (loss)"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 9b, Collectibles (28%) gain (loss)"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 9c, Unrecaptured section 1250 gain"
          },
          "net1231Gain": {
            "type": "number",
            "description": "Box 10, Net section 1231 gain (loss)"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 11, Other income"
          },
          "section179Deduction": {
            "type": "number",
            "description": "Box 12, Section 179 deduction"
          },
          "otherDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 13, Other deductions"
          },
          "selfEmployment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 14, Self-employment earnings (loss)"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 15, Credits"
          },
          "scheduleK3": {
            "type": "boolean",
            "description": "Box 16, Schedule K-3 is attached"
          },
          "amtItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 17, Alternative minimum tax (AMT) items"
          },
          "taxExemptIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 18, Tax-exempt income and nondeductible expenses"
          },
          "distributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 19, Distributions"
          },
          "otherInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 20, Other information"
          },
          "foreignTaxPaid": {
            "type": "number",
            "description": "Box 21, Foreign taxes paid or accrued"
          },
          "multipleAtRiskActivities": {
            "type": "boolean",
            "description": "Box 22, More than one activity for at-risk purposes"
          },
          "multiplePassiveActivities": {
            "type": "boolean",
            "description": "Box 23, More than one activity for passive activity purposes"
          }
        },
        "description": "Partner's Share of Income, Deductions, Credits, etc."
      },
      "Form1120-SK-11": {
        "title": "Form1120-SK-11",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "finalK1": {
            "type": "boolean",
            "description": "Final K-1"
          },
          "amendedK1": {
            "type": "boolean",
            "description": "Amended K-1"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "irsCenter": {
            "type": "string",
            "description": "Box C, IRS Center where corporation filed return"
          },
          "corporationBeginningShares": {
            "type": "number",
            "description": "Box D, Corporation's total number of shares, Beginning of tax year"
          },
          "corporationEndingShares": {
            "type": "number",
            "description": "Box D, Corporation's total number of shares, End of tax year"
          },
          "percentOwnership": {
            "type": "number",
            "description": "Box G, Current year allocation percentage"
          },
          "beginningShares": {
            "type": "number",
            "description": "Box H, Shareholder's number of shares, Beginning of tax year"
          },
          "endingShares": {
            "type": "number",
            "description": "Box H, Shareholder's number of shares, End of tax year"
          },
          "beginningLoans": {
            "type": "number",
            "description": "Box I, Loans from shareholder, Beginning of tax year"
          },
          "endingLoans": {
            "type": "number",
            "description": "Box I, Loans from shareholder, Ending of tax year"
          },
          "ordinaryIncome": {
            "type": "number",
            "description": "Box 1, Ordinary business income (loss)"
          },
          "netRentalRealEstateIncome": {
            "type": "number",
            "description": "Box 2, Net rental real estate income (loss)"
          },
          "otherRentalIncome": {
            "type": "number",
            "description": "Box 3, Other net rental income (loss)"
          },
          "interestIncome": {
            "type": "number",
            "description": "Box 4, Interest income"
          },
          "ordinaryDividends": {
            "type": "number",
            "description": "Box 5a, Ordinary dividends"
          },
          "qualifiedDividends": {
            "type": "number",
            "description": "Box 5b, Qualified dividends"
          },
          "royalties": {
            "type": "number",
            "description": "Box 6, Royalties"
          },
          "netShortTermGain": {
            "type": "number",
            "description": "Box 7, Net short-term capital gain (loss)"
          },
          "netLongTermGain": {
            "type": "number",
            "description": "Box 8a, Net long-term capital gain (loss)"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 8b, Collectibles (28%) gain (loss)"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 8c, Unrecaptured section 1250 gain"
          },
          "net1231Gain": {
            "type": "number",
            "description": "Box 9, Net section 1231 gain (loss)"
          },
          "otherIncome": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 10, Other income (loss)"
          },
          "section179Deduction": {
            "type": "number",
            "description": "Box 11, Section 179 deduction"
          },
          "otherDeductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Other deductions"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 13, Credits"
          },
          "scheduleK3": {
            "type": "boolean",
            "description": "Box 14, Schedule K-3 is attached"
          },
          "amtItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 15, Alternative minimum tax (AMT) items"
          },
          "basisItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 16, Items affecting shareholder basis"
          },
          "otherInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 17, Other information"
          },
          "multipleAtRiskActivities": {
            "type": "boolean",
            "description": "Box 18, More than one activity for at-risk purposes"
          },
          "multiplePassiveActivities": {
            "type": "boolean",
            "description": "Box 19, More than one activity for passive activity purposes"
          }
        },
        "description": "Shareholder's Share of Income, Deductions, Credits, etc."
      },
      "Form10981": {
        "title": "Form10981",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "mortgagedProperties": {
            "type": "integer",
            "description": "Box 9, Number of properties securing the mortgage",
            "format": "int32"
          },
          "otherInformation": {
            "type": "string",
            "description": "Box 10, Other (property tax)"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "mortgageInterest": {
            "type": "number",
            "description": "Box 1, Mortgage interest received from borrower"
          },
          "outstandingPrincipal": {
            "type": "number",
            "description": "Box 2, Outstanding mortgage principal"
          },
          "originationDate": {
            "type": "string",
            "description": "Box 3, Mortgage origination date",
            "format": "date",
            "example": "2021-07-15"
          },
          "overpaidRefund": {
            "type": "number",
            "description": "Box 4, Refund of overpaid interest"
          },
          "mortgageInsurance": {
            "type": "number",
            "description": "Box 5, Mortgage insurance premiums"
          },
          "pointsPaid": {
            "type": "number",
            "description": "Box 6, Points paid on purchase of principal residence"
          },
          "isPropertyAddressSameAsBorrowerAddress": {
            "type": "boolean",
            "description": "Box 7, Is address of property securing mortgage same as PAYER'S/BORROWER'S address"
          },
          "acquisitionDate": {
            "type": "string",
            "description": "Box 11, Mortgage acquisition date",
            "format": "date",
            "example": "2021-07-15"
          },
          "propertyAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Box 8, Address of property securing mortgage"
              }
            ]
          },
          "propertyTax": {
            "type": "number",
            "description": "Box 10, Property tax"
          },
          "propertyDescription": {
            "type": "string",
            "description": "Box 8, Description of property securing mortgage, if property securing mortgage has no address"
          }
        },
        "description": "Mortgage Interest Statement"
      },
      "Form24391": {
        "title": "Form24391",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "fiscalYearBegin": {
            "type": "string",
            "description": "Fiscal year begin date",
            "format": "date",
            "example": "2021-07-15"
          },
          "fiscalYearEnd": {
            "type": "string",
            "description": "Fiscal year end date",
            "format": "date",
            "example": "2021-07-15"
          },
          "undistributedLongTermCapitalGains": {
            "type": "number",
            "description": "Box 1a, Total undistributed long-term capital gains"
          },
          "unrecaptured1250Gain": {
            "type": "number",
            "description": "Box 1b, Unrecaptured section 1250 gain"
          },
          "section1202Gain": {
            "type": "number",
            "description": "Box 1c, Section 1202 gain"
          },
          "collectiblesGain": {
            "type": "number",
            "description": "Box 1d, Collectibles (28%) gain"
          },
          "taxPaid": {
            "type": "number",
            "description": "Box 2, Tax paid by the RIC or REIT on the box 1a gains"
          }
        },
        "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains"
      },
      "Form39211": {
        "title": "Form39211",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "optionGrantDate": {
            "type": "string",
            "description": "Box 1, Date option granted",
            "format": "date",
            "example": "2021-07-15"
          },
          "optionExerciseDate": {
            "type": "string",
            "description": "Box 2, Date option exercised",
            "format": "date",
            "example": "2021-07-15"
          },
          "exercisePrice": {
            "type": "number",
            "description": "Box 3, Exercise price per share"
          },
          "exerciseMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value per share on exercise date"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Box 5, Number of shares transferred"
          },
          "corporation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty4"
              },
              {
                "description": "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred"
              }
            ]
          }
        },
        "description": "Exercise of an Incentive Stock Option Under Section 422(b)"
      },
      "Form39221": {
        "title": "Form39221",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "optionGrantDate": {
            "type": "string",
            "description": "Box 1, Date option granted",
            "format": "date",
            "example": "2021-07-15"
          },
          "optionExerciseDate": {
            "type": "string",
            "description": "Box 2, Date option exercised",
            "format": "date",
            "example": "2021-07-15"
          },
          "grantMarketValue": {
            "type": "number",
            "description": "Box 3, Fair market value per share on grant date"
          },
          "exerciseMarketValue": {
            "type": "number",
            "description": "Box 4, Fair market value per share on exercise date"
          },
          "exercisePrice": {
            "type": "number",
            "description": "Box 5, Exercise price paid per share"
          },
          "numberOfShares": {
            "type": "number",
            "description": "Box 6, Number of shares transferred"
          },
          "titleTransferDate": {
            "type": "string",
            "description": "Box 7, Date legal title transferred",
            "format": "date",
            "example": "2021-07-15"
          },
          "grantDateExercisePrice": {
            "type": "number",
            "description": "Box 8, Exercise price per share determined as if the option was exercised on the option granted date"
          }
        },
        "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)"
      },
      "Form54981": {
        "title": "Form54981",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "iraContributions": {
            "type": "number",
            "description": "Box 1, IRA contributions"
          },
          "rolloverContributions": {
            "type": "number",
            "description": "Box 2, Rollover contributions"
          },
          "rothIraConversion": {
            "type": "number",
            "description": "Box 3, Roth IRA conversion amount"
          },
          "recharacterizedContributions": {
            "type": "number",
            "description": "Box 4, Recharacterized contributions"
          },
          "fairMarketValue": {
            "type": "number",
            "description": "Box 5, Fair market value of account"
          },
          "lifeInsuranceCost": {
            "type": "number",
            "description": "Box 6, Life insurance cost included in box 1"
          },
          "ira": {
            "type": "boolean",
            "description": "Box 7a, IRA"
          },
          "sep": {
            "type": "boolean",
            "description": "Box 7b, SEP"
          },
          "simple": {
            "type": "boolean",
            "description": "Box 7c, SIMPLE"
          },
          "rothIra": {
            "type": "boolean",
            "description": "Box 7d, Roth IRA"
          },
          "sepContributions": {
            "type": "number",
            "description": "Box 8, SEP contributions"
          },
          "simpleContributions": {
            "type": "number",
            "description": "Box 9, SIMPLE contributions"
          },
          "rothIraContributions": {
            "type": "number",
            "description": "Box 10, Roth IRA contributions"
          },
          "rmdNextYear": {
            "type": "boolean",
            "description": "Box 11, If checked, required minimum distribution for next year"
          },
          "rmdDate": {
            "type": "string",
            "description": "Box 12a, RMD date",
            "format": "date",
            "example": "2021-07-15"
          },
          "rmdAmount": {
            "type": "number",
            "description": "Box 12b, RMD amount"
          },
          "postponedContribution": {
            "type": "number",
            "description": "Box 13a, Postponed contribution"
          },
          "postponedYear": {
            "type": "integer",
            "description": "Box 13b, Year",
            "format": "int32"
          },
          "postponedCode": {
            "type": "string",
            "description": "Box 13c, Code"
          },
          "repayments": {
            "type": "number",
            "description": "Box 14a, Repayments"
          },
          "repayCode": {
            "type": "string",
            "description": "Box 14b, Code"
          },
          "fmvSpecifiedAssets": {
            "type": "number",
            "description": "Box 15a, FMV of certain specified assets"
          },
          "specifiedCodes": {
            "type": "string",
            "description": "Box 15b, Code(s)"
          }
        },
        "description": "IRA Contribution Information"
      },
      "FormW-2c2": {
        "title": "FormW-2c2",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "correctedTinOrName": {
            "type": "boolean",
            "description": "Box e, Corrected SSN and/or name"
          },
          "previousEmployeeTin": {
            "type": "string",
            "description": "Box f, Employee's previously reported SSN"
          },
          "previousEmployeeName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Box g, Employee's previously reported name"
              }
            ]
          },
          "originalW2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-21"
              },
              {
                "description": "Boxes 1-20 of Previously reported Wage and Tax Statement"
              }
            ]
          },
          "correctedW2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormW-22"
              },
              {
                "description": "Boxes 1-20 of Correct information Wage and Tax Statement"
              }
            ]
          }
        },
        "description": "IRS form W-2c, Corrected Wage and Tax Statement"
      },
      "FormW-2G2": {
        "title": "FormW-2G2",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "winnings": {
            "type": "number",
            "description": "Box 1, Reportable winnings"
          },
          "dateWon": {
            "type": "string",
            "description": "Box 2, Date won",
            "format": "date",
            "example": "2021-07-15"
          },
          "typeOfWager": {
            "type": "string",
            "description": "Box 3, Type of wager"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 4, Federal income tax withheld"
          },
          "transaction": {
            "type": "string",
            "description": "Box 5, Transaction"
          },
          "race": {
            "type": "string",
            "description": "Box 6, Race"
          },
          "identicalWinnings": {
            "type": "number",
            "description": "Box 7, Winnings from identical wagers"
          },
          "cashier": {
            "type": "string",
            "description": "Box 8, Cashier"
          },
          "window": {
            "type": "string",
            "description": "Box 10, Window"
          },
          "firstId": {
            "type": "string",
            "description": "Box 11, First I.D."
          },
          "secondId": {
            "type": "string",
            "description": "Box 12, Second I.D."
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 13-18, State and Local tax withholding, use income fields for state (box 14) and local (box 16) winnings amounts"
          }
        },
        "description": "Certain Gambling Winnings"
      },
      "FormW-21": {
        "title": "FormW-21",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "controlNumber": {
            "type": "string",
            "description": "Control number"
          },
          "wages": {
            "type": "number",
            "description": "Box 1, Wages, tips, other compensation"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 2, Federal income tax withheld"
          },
          "socialSecurityWages": {
            "type": "number",
            "description": "Box 3, Social security wages"
          },
          "socialSecurityTaxWithheld": {
            "type": "number",
            "description": "Box 4, Social security tax withheld"
          },
          "medicareWages": {
            "type": "number",
            "description": "Box 5, Medicare wages and tips"
          },
          "medicareTaxWithheld": {
            "type": "number",
            "description": "Box 6, Medicare tax withheld"
          },
          "socialSecurityTips": {
            "type": "number",
            "description": "Box 7, Social security tips"
          },
          "allocatedTips": {
            "type": "number",
            "description": "Box 8, Allocated tips"
          },
          "dependentCareBenefit": {
            "type": "number",
            "description": "Box 10, Dependent care benefits"
          },
          "nonQualifiedPlan": {
            "type": "number",
            "description": "Box 11, Nonqualified plans"
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Codes and amounts"
          },
          "statutory": {
            "type": "boolean",
            "description": "Box 13, Statutory employee"
          },
          "retirementPlan": {
            "type": "boolean",
            "description": "Box 13, Retirement plan"
          },
          "thirdPartySickPay": {
            "type": "boolean",
            "description": "Box 13, Third-party sick pay"
          },
          "esppQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Qualified Disposition amount"
          },
          "esppNonQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Nonqualified Disposition amount"
          },
          "other": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 14, Other descriptions and amounts"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 15-20, State and Local tax withholding"
          }
        },
        "description": "Boxes 1-20 of Previously reported Wage and Tax Statement"
      },
      "FormW-22": {
        "title": "FormW-22",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "controlNumber": {
            "type": "string",
            "description": "Control number"
          },
          "wages": {
            "type": "number",
            "description": "Box 1, Wages, tips, other compensation"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 2, Federal income tax withheld"
          },
          "socialSecurityWages": {
            "type": "number",
            "description": "Box 3, Social security wages"
          },
          "socialSecurityTaxWithheld": {
            "type": "number",
            "description": "Box 4, Social security tax withheld"
          },
          "medicareWages": {
            "type": "number",
            "description": "Box 5, Medicare wages and tips"
          },
          "medicareTaxWithheld": {
            "type": "number",
            "description": "Box 6, Medicare tax withheld"
          },
          "socialSecurityTips": {
            "type": "number",
            "description": "Box 7, Social security tips"
          },
          "allocatedTips": {
            "type": "number",
            "description": "Box 8, Allocated tips"
          },
          "dependentCareBenefit": {
            "type": "number",
            "description": "Box 10, Dependent care benefits"
          },
          "nonQualifiedPlan": {
            "type": "number",
            "description": "Box 11, Nonqualified plans"
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Codes and amounts"
          },
          "statutory": {
            "type": "boolean",
            "description": "Box 13, Statutory employee"
          },
          "retirementPlan": {
            "type": "boolean",
            "description": "Box 13, Retirement plan"
          },
          "thirdPartySickPay": {
            "type": "boolean",
            "description": "Box 13, Third-party sick pay"
          },
          "esppQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Qualified Disposition amount"
          },
          "esppNonQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Nonqualified Disposition amount"
          },
          "other": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 14, Other descriptions and amounts"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 15-20, State and Local tax withholding"
          }
        },
        "description": "Boxes 1-20 of Correct information Wage and Tax Statement"
      },
      "FormW-24": {
        "title": "FormW-24",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "corrected": {
            "type": "boolean",
            "description": "True to indicate this is a corrected tax form"
          },
          "accountId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identity of the source account. Not the account number"
          },
          "taxFormId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted."
          },
          "taxFormDate": {
            "type": "string",
            "description": "Date of production or delivery of the tax form",
            "format": "date",
            "example": "2021-07-15"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional explanation text or content about this tax form"
          },
          "taxFormType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeFormType1"
              },
              {
                "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
              }
            ]
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty8"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty1"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFormAttribute"
            },
            "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
            "example": [
              {
                "name": "nameControl",
                "value": "WILC"
              },
              {
                "name": "recipientIdType",
                "value": "EIN",
                "code": "1"
              },
              {
                "name": "recipientIdType",
                "value": "SSN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ITIN",
                "code": "2"
              },
              {
                "name": "recipientIdType",
                "value": "ATIN",
                "code": "2"
              }
            ]
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error1"
              },
              {
                "description": "Present if an error was encountered while retrieving this form"
              }
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this form as data or image, or to invoke other APIs"
          },
          "controlNumber": {
            "type": "string",
            "description": "Control number"
          },
          "wages": {
            "type": "number",
            "description": "Box 1, Wages, tips, other compensation"
          },
          "federalTaxWithheld": {
            "type": "number",
            "description": "Box 2, Federal income tax withheld"
          },
          "socialSecurityWages": {
            "type": "number",
            "description": "Box 3, Social security wages"
          },
          "socialSecurityTaxWithheld": {
            "type": "number",
            "description": "Box 4, Social security tax withheld"
          },
          "medicareWages": {
            "type": "number",
            "description": "Box 5, Medicare wages and tips"
          },
          "medicareTaxWithheld": {
            "type": "number",
            "description": "Box 6, Medicare tax withheld"
          },
          "socialSecurityTips": {
            "type": "number",
            "description": "Box 7, Social security tips"
          },
          "allocatedTips": {
            "type": "number",
            "description": "Box 8, Allocated tips"
          },
          "dependentCareBenefit": {
            "type": "number",
            "description": "Box 10, Dependent care benefits"
          },
          "nonQualifiedPlan": {
            "type": "number",
            "description": "Box 11, Nonqualified plans"
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeandAmount"
            },
            "description": "Box 12, Codes and amounts"
          },
          "statutory": {
            "type": "boolean",
            "description": "Box 13, Statutory employee"
          },
          "retirementPlan": {
            "type": "boolean",
            "description": "Box 13, Retirement plan"
          },
          "thirdPartySickPay": {
            "type": "boolean",
            "description": "Box 13, Third-party sick pay"
          },
          "esppQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Qualified Disposition amount"
          },
          "esppNonQualified": {
            "type": "number",
            "description": "Employee Stock Purchase Plan Nonqualified Disposition amount"
          },
          "other": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionandAmount"
            },
            "description": "Box 14, Other descriptions and amounts"
          },
          "stateAndLocal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateandLocalTaxWithholding"
            },
            "description": "Boxes 15-20, State and Local tax withholding"
          }
        },
        "description": "Wage and Tax Statement"
      },
      "LocalTaxWithholding1": {
        "title": "LocalTaxWithholding1",
        "type": "object",
        "properties": {
          "taxWithheld": {
            "type": "number",
            "description": "Amount of local income tax withheld"
          },
          "localityName": {
            "type": "string",
            "description": "Locality name"
          },
          "income": {
            "type": "number",
            "description": "Income amount for local tax purposes"
          }
        },
        "description": "Amount of local income tax withheld, if any"
      },
      "MonthAbbreviation1": {
        "title": "MonthAbbreviation1",
        "enum": [
          "JAN",
          "FEB",
          "MAR",
          "APR",
          "MAY",
          "JUN",
          "JUL",
          "AUG",
          "SEP",
          "OCT",
          "NOV",
          "DEC"
        ],
        "type": "string",
        "description": "Month"
      },
      "NameandAddress": {
        "title": "NameandAddress",
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 1"
          },
          "line2": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 2"
          },
          "line3": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 3"
          },
          "city": {
            "maxLength": 64,
            "type": "string",
            "description": "City"
          },
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
          },
          "postalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country code"
              }
            ]
          },
          "name1": {
            "maxLength": 64,
            "type": "string",
            "description": "Name line 1"
          },
          "name2": {
            "maxLength": 64,
            "type": "string",
            "description": "Name line 2"
          }
        },
        "description": "Insured name and address"
      },
      "NameAddressandPhone": {
        "title": "NameAddressandPhone",
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 1"
          },
          "line2": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 2"
          },
          "line3": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 3"
          },
          "city": {
            "maxLength": 64,
            "type": "string",
            "description": "City"
          },
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
          },
          "postalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country code"
              }
            ]
          },
          "name1": {
            "maxLength": 64,
            "type": "string",
            "description": "Name line 1"
          },
          "name2": {
            "maxLength": 64,
            "type": "string",
            "description": "Name line 2"
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension2"
              },
              {
                "description": "Phone number"
              }
            ]
          }
        },
        "description": "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)"
      },
      "NameAddressandPhone1": {
        "title": "NameAddressandPhone1",
        "type": "object",
        "properties": {
          "line1": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 1"
          },
          "line2": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 2"
          },
          "line3": {
            "maxLength": 64,
            "type": "string",
            "description": "Address line 3"
          },
          "city": {
            "maxLength": 64,
            "type": "string",
            "description": "City"
          },
          "region": {
            "maxLength": 64,
            "type": "string",
            "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'"
          },
          "postalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO3166CountryCode"
              },
              {
                "description": "Country code"
              }
            ]
          },
          "name1": {
            "maxLength": 64,
            "type": "string",
            "description": "Name line 1"
          },
          "name2": {
            "maxLength": 64,
            "type": "string",
            "description": "Name line 2"
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension2"
              },
              {
                "description": "Phone number"
              }
            ]
          }
        },
        "description": "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)"
      },
      "SaleProceedsType2": {
        "title": "SaleProceedsType2",
        "enum": [
          "GROSS",
          "NET"
        ],
        "type": "string",
        "description": "Box 6, Reported to IRS: GROSS or NET"
      },
      "StateandLocalTaxWithholding1": {
        "title": "StateandLocalTaxWithholding1",
        "type": "object",
        "properties": {
          "stateCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              },
              {
                "description": "State two-digit code"
              }
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateTaxWithholding2"
              },
              {
                "description": "Amount of state income tax withheld"
              }
            ]
          },
          "local": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocalTaxWithholding1"
              },
              {
                "description": "Amount of local income tax withheld, if any"
              }
            ]
          }
        },
        "description": "Box 17, State and Local tax withholding"
      },
      "StateandLocalTaxWithholding2": {
        "title": "StateandLocalTaxWithholding2",
        "type": "object",
        "properties": {
          "stateCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateCode"
              },
              {
                "description": "State two-digit code"
              }
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StateTaxWithholding2"
              },
              {
                "description": "Amount of state income tax withheld"
              }
            ]
          },
          "local": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocalTaxWithholding1"
              },
              {
                "description": "Amount of local income tax withheld, if any"
              }
            ]
          }
        },
        "description": "State and Local tax withholding, from IRS's IRIS schema"
      },
      "StateCode": {
        "title": "StateCode",
        "enum": [
          "AA",
          "AE",
          "AK",
          "AL",
          "AP",
          "AR",
          "AS",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DC",
          "DE",
          "FL",
          "FM",
          "GA",
          "GU",
          "HI",
          "IA",
          "ID",
          "IL",
          "IN",
          "KS",
          "KY",
          "LA",
          "MA",
          "MD",
          "ME",
          "MH",
          "MI",
          "MN",
          "MO",
          "MP",
          "MS",
          "MT",
          "NC",
          "ND",
          "NE",
          "NH",
          "NJ",
          "NM",
          "NV",
          "NY",
          "OH",
          "OK",
          "OR",
          "PA",
          "PR",
          "PW",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VA",
          "VI",
          "VT",
          "WA",
          "WI",
          "WV",
          "WY"
        ],
        "type": "string",
        "description": "State two-digit code"
      },
      "StateTaxWithholding2": {
        "title": "StateTaxWithholding2",
        "type": "object",
        "properties": {
          "taxWithheld": {
            "type": "number",
            "description": "Amount of state income tax withheld"
          },
          "taxId": {
            "type": "string",
            "description": "Filer's state tax id"
          },
          "income": {
            "type": "number",
            "description": "Income amount for state tax purposes"
          }
        },
        "description": "Amount of state income tax withheld"
      },
      "TaxPartyType2": {
        "title": "TaxPartyType2",
        "enum": [
          "BUSINESS",
          "INDIVIDUAL"
        ],
        "type": "string",
        "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
      },
      "TaxParty1": {
        "title": "TaxParty1",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
      },
      "TaxParty2": {
        "title": "TaxParty2",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Box C, Fiduciary's name and address"
      },
      "TaxParty3": {
        "title": "TaxParty3",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Boxes 10-15, Employer EIN, name and address"
      },
      "TaxParty4": {
        "title": "TaxParty4",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred"
      },
      "TaxParty6": {
        "title": "TaxParty6",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
      },
      "TaxParty7": {
        "title": "TaxParty7",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
      },
      "TaxParty8": {
        "title": "TaxParty8",
        "type": "object",
        "properties": {
          "tin": {
            "type": "string",
            "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient"
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxPartyType2"
              },
              {
                "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient"
              }
            ]
          },
          "individualName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individualname"
              },
              {
                "description": "Individual issuer or recipient name"
              }
            ]
          },
          "businessName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Businessname"
              },
              {
                "description": "Business issuer or recipient name"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "description": "Issuer or recipient address"
              }
            ]
          },
          "phone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberPlusExtension"
              },
              {
                "description": "Issuer or recipient telephone number"
              }
            ]
          },
          "email": {
            "type": "string",
            "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)"
          }
        },
        "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms."
      },
      "TaxRefundDirectDeposit2": {
        "title": "TaxRefundDirectDeposit2",
        "type": "object",
        "properties": {
          "institutionName": {
            "type": "string",
            "description": "Name of institution"
          },
          "rtn": {
            "type": "string",
            "description": "Routing transit number"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "accountNickName": {
            "type": "string",
            "description": "Account nickname"
          }
        },
        "description": "Tax refund direct deposit information"
      },
      "TaxStatement1": {
        "title": "TaxStatement1",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The full data contents of the tax document and all its included forms including the indexing metadata values"
      },
      "TaxStatement2": {
        "title": "TaxStatement2",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The full data contents of the tax document and all its included forms as ingested"
      },
      "TaxStatement3": {
        "title": "TaxStatement3",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The data contents of the tax document as ingested, with Errors on some included forms"
      },
      "TaxStatement4": {
        "title": "TaxStatement4",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer"
      },
      "TaxStatement5": {
        "title": "TaxStatement5",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer, one or more of which contain an Error"
      },
      "TaxStatement6": {
        "title": "TaxStatement6",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The full data contents of the document and all its contained forms including the indexing metadata values"
      },
      "TaxStatement7": {
        "title": "TaxStatement7",
        "type": "object",
        "properties": {
          "taxYear": {
            "maximum": 2050.0,
            "minimum": 2018.0,
            "type": "integer",
            "description": "Year for which taxes are being paid",
            "format": "int32",
            "example": 2023
          },
          "taxStatementId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id"
          },
          "issuer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty6"
              },
              {
                "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxParty7"
              },
              {
                "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms"
              }
            ]
          },
          "taxDataType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeDataType2"
              },
              {
                "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
              }
            ]
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxData"
            },
            "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`"
          },
          "pdf": {
            "type": "string",
            "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
            "format": "binary"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FIAttributeentity"
            },
            "description": "Additional tax statement attributes that the provider wishes to include"
          }
        },
        "description": "The data contents of the tax document as updated, with Errors on some included forms"
      },
      "TelephoneNumberPlusExtension": {
        "title": "TelephoneNumberPlusExtension",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberType"
              },
              {
                "description": "Type of phone number: HOME, BUSINESS, CELL, FAX"
              }
            ]
          },
          "country": {
            "maxLength": 3,
            "type": "string",
            "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164"
          },
          "number": {
            "maxLength": 15,
            "pattern": "\\d+",
            "type": "string",
            "description": "Telephone subscriber number defined by ITU-T recommendation E.164"
          },
          "extension": {
            "type": "string",
            "description": "An arbitrary length telephone number extension"
          }
        },
        "description": "Issuer or recipient telephone number"
      },
      "TelephoneNumberPlusExtension1": {
        "title": "TelephoneNumberPlusExtension1",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberType"
              },
              {
                "description": "Type of phone number: HOME, BUSINESS, CELL, FAX"
              }
            ]
          },
          "country": {
            "maxLength": 3,
            "type": "string",
            "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164"
          },
          "number": {
            "maxLength": 15,
            "pattern": "\\d+",
            "type": "string",
            "description": "Telephone subscriber number defined by ITU-T recommendation E.164"
          },
          "extension": {
            "type": "string",
            "description": "An arbitrary length telephone number extension"
          }
        },
        "description": "PSE's phone number"
      },
      "TelephoneNumberPlusExtension2": {
        "title": "TelephoneNumberPlusExtension2",
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephoneNumberType"
              },
              {
                "description": "Type of phone number: HOME, BUSINESS, CELL, FAX"
              }
            ]
          },
          "country": {
            "maxLength": 3,
            "type": "string",
            "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164"
          },
          "number": {
            "maxLength": 15,
            "pattern": "\\d+",
            "type": "string",
            "description": "Telephone subscriber number defined by ITU-T recommendation E.164"
          },
          "extension": {
            "type": "string",
            "description": "An arbitrary length telephone number extension"
          }
        },
        "description": "Phone number"
      },
      "TypeDataType2": {
        "title": "TypeDataType2",
        "enum": [
          "BASE64_PDF",
          "JSON"
        ],
        "type": "string",
        "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)"
      },
      "TypeFormType1": {
        "title": "TypeFormType1",
        "enum": [
          "BusinessIncomeStatement",
          "CryptocurrencyTaxStatement",
          "FarmIncomeStatement",
          "FarmRentalIncomeStatement",
          "RentalIncomeStatement",
          "RoyaltyIncomeStatement",
          "Tax1041K1",
          "Tax1042S",
          "Tax1065K1",
          "Tax1095A",
          "Tax1095B",
          "Tax1095C",
          "Tax1097Btc",
          "Tax1098",
          "Tax1098C",
          "Tax1098E",
          "Tax1098Ma",
          "Tax1098Q",
          "Tax1098T",
          "Tax1099A",
          "Tax1099B",
          "Tax1099C",
          "Tax1099Cap",
          "Tax1099ConsolidatedStatement",
          "Tax1099Div",
          "Tax1099G",
          "Tax1099H",
          "Tax1099Int",
          "Tax1099K",
          "Tax1099Ls",
          "Tax1099Ltc",
          "Tax1099Misc",
          "Tax1099Nec",
          "Tax1099Oid",
          "Tax1099Patr",
          "Tax1099Q",
          "Tax1099Qa",
          "Tax1099R",
          "Tax1099S",
          "Tax1099Sa",
          "Tax1099Sb",
          "Tax1120SK1",
          "Tax2439",
          "Tax3921",
          "Tax3922",
          "Tax5227K1",
          "Tax5498",
          "Tax5498Esa",
          "Tax5498Qa",
          "Tax5498Sa",
          "TaxW2",
          "TaxW2C",
          "TaxW2G"
        ],
        "type": "string",
        "description": "Enumerated name of the tax form entity e.g. \"TaxW2\""
      },
      "Resourceentity": {
        "title": "Resourceentity",
        "type": "object",
        "properties": {
          "resourceId": {
            "maxLength": 256,
            "type": "string",
            "description": "Long-term persistent identifier for the Resource"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceStatus2"
              },
              {
                "description": "Status of Resource"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of resource"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HATEOASLink"
            },
            "description": "Links to retrieve this resource, or to invoke other APIs"
          }
        },
        "description": "Details of resource entity"
      },
      "ResourceListentity": {
        "title": "ResourceListentity",
        "type": "object",
        "properties": {
          "page": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadata"
              },
              {
                "description": "Offset IDs for navigating result sets"
              }
            ]
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageMetadataLinks"
              },
              {
                "description": "Resource URLs for navigating result sets"
              }
            ]
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resourceentity"
            },
            "description": "Zero or more Resources"
          }
        },
        "description": "Response object for /resources API"
      },
      "ResourceStatus": {
        "title": "ResourceStatus",
        "enum": [
          "ACTIVE",
          "IN_PROGRESS",
          "RETIRED"
        ],
        "type": "string",
        "description": "Statuses for resource"
      },
      "ResourceStatus2": {
        "title": "ResourceStatus2",
        "enum": [
          "ACTIVE",
          "IN_PROGRESS",
          "RETIRED"
        ],
        "type": "string",
        "description": "Status of Resource"
      },
      "AccountWithDetailsentity": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/AnnuityAccountentity"
          },
          {
            "$ref": "#/components/schemas/CommercialAccountentity"
          },
          {
            "$ref": "#/components/schemas/DepositAccountentity"
          },
          {
            "$ref": "#/components/schemas/DigitalWalletaccountentity"
          },
          {
            "$ref": "#/components/schemas/InsuranceAccountentity"
          },
          {
            "$ref": "#/components/schemas/InvestmentAccountentity"
          },
          {
            "$ref": "#/components/schemas/LineofCreditAccountentity"
          },
          {
            "$ref": "#/components/schemas/LoanAccountentity"
          }
        ],
        "description": "An instance of an account with full details",
        "discriminator": {
          "propertyName": "accountCategory",
          "mapping": {
            "ANNUITY_ACCOUNT": "AnnuityAccountentity",
            "COMMERCIAL_ACCOUNT": "CommercialAccountentity",
            "DEPOSIT_ACCOUNT": "DepositAccountentity",
            "DIGITAL_WALLET": "DigitalWalletaccountentity",
            "INSURANCE_ACCOUNT": "InsuranceAccountentity",
            "INVESTMENT_ACCOUNT": "InvestmentAccountentity",
            "LOAN_ACCOUNT": "LoanAccountentity",
            "LOC_ACCOUNT": "LineofCreditAccountentity"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "The `access_token` should be used as the bearer token in this call.",
        "scheme": "bearer",
        "bearerFormat": "jwt"
      },
      "TaxBasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "User Consent",
      "description": "Manage customer consent grants"
    },
    {
      "name": "Account Information",
      "description": "Search and view customer accounts"
    },
    {
      "name": "Account Statements",
      "description": "Search and retrieve account statements"
    },
    {
      "name": "Account Transactions",
      "description": "Search and view account transactions"
    },
    {
      "name": "Money Movement",
      "description": "View account money movement details"
    },
    {
      "name": "Personal Information",
      "description": "Search and view customer or customers"
    },
    {
      "name": "Reward Program Categories",
      "description": "View categories of reward programs"
    },
    {
      "name": "Reward Program Information",
      "description": "Search and view customer reward programs"
    },
    {
      "name": "Event Notifications",
      "description": "Manage Event Notifications"
    },
    {
      "name": "Fraud Notification",
      "description": "Notify of suspected fraud"
    },
    {
      "name": "Meta",
      "description": "API management and metrics"
    },
    {
      "name": "Internal Transfers",
      "description": "Manage internal transfers"
    },
    {
      "name": "Payee Management",
      "description": "Manage payees for payments"
    },
    {
      "name": "Payment Initiation Parties",
      "description": "Manage payment initiation parties"
    },
    {
      "name": "Payments",
      "description": "Manage payments"
    },
    {
      "name": "Recurring Payments",
      "description": "Manage recurring payments"
    },
    {
      "name": "Payroll Information",
      "description": "Verify employment and/or income"
    },
    {
      "name": "Recipients",
      "description": "Manage recipients"
    },
    {
      "name": "Submit Tax Forms",
      "description": "Submit vendor-produced customer tax reporting documents and data to providers"
    },
    {
      "name": "Tax Forms",
      "description": "Search and retrieve customer tax reporting documents and data"
    },
    {
      "name": "Resource Information",
      "description": "Search, view and update resources"
    }
  ]
}
