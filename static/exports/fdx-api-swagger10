{
  "swaggerVersion": "1.2",
  "basePath": "https://financialdataexchange-prod.apigee.net/fdx-consent-api-v6.2.0",
  "resourcePath": "/",
  "apis": [
    {
      "path": "/consents/{consentId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a Consent Grant",
          "nickname": "getConsentGrant",
          "parameters": [
            {
              "name": "consentId",
              "description": "Consent Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            }
          ],
          "uniqueItems": false,
          "$ref": "ConsentGrantentity"
        }
      ]
    },
    {
      "path": "/consents/{consentId}/revocation",
      "operations": [
        {
          "method": "PUT",
          "summary": "Revoke a Consent Grant",
          "nickname": "revokeConsentGrant",
          "parameters": [
            {
              "name": "consentId",
              "description": "Consent Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Reason and initiator of revocation",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "Consentrevocationrequestentity"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Input sent by client does not satisfy API specification"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 403,
              "responseModel": "Error1",
              "message": "Forbidden, server understands the request but refuses to authorize it"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 409,
              "responseModel": "Error1",
              "message": "Conflict with current state of target resource"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "GET",
          "summary": "Retrieve Consent Revocation record",
          "nickname": "getConsentRevocation",
          "parameters": [
            {
              "name": "consentId",
              "description": "Consent Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ConsentRevocationListentity"
        }
      ]
    },
    {
      "path": "/accounts",
      "operations": [
        {
          "method": "GET",
          "summary": "Return information for all of the customer's consented accounts or just those accounts identified in the `accountIds` request parameter. Use `ResultTypeQuery` parameter value of `lightweight` to retrieve minimal descriptive information and the `accountId` for each account. The `accountId` can then be used in the `getAccount` operation's path `/accounts/{accountId}` to retrieve full details about each account",
          "nickname": "searchForAccounts",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountIds",
              "description": "Comma separated list of account ids",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "startTime",
              "description": "Start time for use in retrieval of transactions",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string",
                "format": "date"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "endTime",
              "description": "End time for use in retrieval of transactions",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string",
                "format": "date"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "resultType",
              "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "lightweight",
              "enum": [
                "details",
                "lightweight"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Start or end date value is not in the ISO 8601 format"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Accountsentity"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve full details about the account identified by `{accountId}` parameter",
          "nickname": "getAccount",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Account with id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/statements",
      "operations": [
        {
          "method": "GET",
          "summary": "Get account statements. Example: GET /accounts/{accountId}/statements?startTime=value1&endTime=value2",
          "nickname": "searchForAccountStatements",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startTime",
              "description": "Start time for use in retrieval of elements (ISO 8601)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "endTime",
              "description": "End time for use in retrieval of elements (ISO 8601)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Start or end date value is not in the ISO 8601 format"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Account with id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Anarrayofstatements"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/statements/{statementId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Gets an account statement image file. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. See ContentTypes definition for typical values",
          "nickname": "getAccountStatement",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "statementId",
              "description": "Statement Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/pdf",
            "image/gif",
            "image/jpeg",
            "image/tiff",
            "image/png",
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Statement is processing and is not yet available"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "When account is present with no statements in it"
            },
            {
              "code": 406,
              "responseModel": "Error1",
              "message": "Content Type not Supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/transaction-images/{imageId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get account transaction image",
          "nickname": "getAccountTransactionImages",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "imageId",
              "description": "Image Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/pdf",
            "image/gif",
            "image/jpeg",
            "image/tiff",
            "image/png",
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Account or image with id not found"
            },
            {
              "code": 406,
              "responseModel": "Error1",
              "message": "Content Type not Supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/transactions",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for account transactions. Example: /accounts/{accountId}/transactions?startTime=value1&endTime=value2",
          "nickname": "searchForAccountTransactions",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startTime",
              "description": "Start time for use in retrieval of elements (ISO 8601)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "endTime",
              "description": "End time for use in retrieval of elements (ISO 8601)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Start or end date value is not in the ISO 8601 format"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Account with id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Transactionsentity"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/asset-transfer-networks",
      "operations": [
        {
          "method": "GET",
          "summary": "...",
          "nickname": "getAccountAssetTransferNetworks",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AssetTransferNetworkList"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/payment-networks",
      "operations": [
        {
          "method": "GET",
          "summary": "Get payment networks supported by the account",
          "nickname": "getAccountPaymentNetworks",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Account with id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Arrayofaccountpaymentnetworks"
        }
      ]
    },
    {
      "path": "/accounts/{accountId}/contact",
      "operations": [
        {
          "method": "GET",
          "summary": "Get contact information on the account",
          "nickname": "getAccountContact",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Account with id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "AccountContactentity"
        }
      ]
    },
    {
      "path": "/customers",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve account holders related to permissioned accounts",
          "nickname": "getCustomers",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "CustomersEntity"
        }
      ]
    },
    {
      "path": "/customers/current",
      "operations": [
        {
          "method": "GET",
          "summary": "Get information about the customer within the authorization scope",
          "nickname": "getCustomerInfo",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Customerentity"
        }
      ]
    },
    {
      "path": "/customers/{customerId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve customer information by customer id",
          "nickname": "getCustomer",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "customerId",
              "description": "Customer Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Customer with id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Customerentity"
        }
      ]
    },
    {
      "path": "/reward-programs/{rewardProgramId}/categories",
      "operations": [
        {
          "method": "GET",
          "summary": "Get reward categories",
          "nickname": "getRewardProgramCategories",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "rewardProgramId",
              "description": "Reward Program Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Request is invalid"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RewardCategoriesentity"
        }
      ]
    },
    {
      "path": "/reward-programs",
      "operations": [
        {
          "method": "GET",
          "summary": "Query all reward programs",
          "nickname": "searchRewardPrograms",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "RewardProgramsentity"
        }
      ]
    },
    {
      "path": "/reward-programs/{rewardProgramId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a specific reward program",
          "nickname": "getRewardProgram",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "rewardProgramId",
              "description": "Reward Program Identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Reward program Id not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RewardProgramentity"
        }
      ]
    },
    {
      "path": "/notification-subscriptions",
      "operations": [
        {
          "method": "POST",
          "summary": "Creates notification subscription entry on the server",
          "nickname": "createNotificationSubscription",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Notification subscription",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "NotificationSubscriptionentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Input sent by client does not satisfy API specification"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 405,
              "responseModel": "Error1",
              "message": "Method Not Allowed"
            },
            {
              "code": 429,
              "responseModel": "Error1",
              "message": "Too Many Requests"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "NotificationSubscriptionentity"
        }
      ]
    },
    {
      "path": "/notification-subscriptions/{subscriptionId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Call to get notification subscription",
          "nickname": "getNotificationSubscription",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "ID of notification subscription",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Input sent by client does not satisfy API specification"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 405,
              "responseModel": "Error1",
              "message": "Method Not Allowed"
            },
            {
              "code": 429,
              "responseModel": "Error1",
              "message": "Too Many Requests"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "NotificationSubscriptionentity"
        },
        {
          "method": "DELETE",
          "summary": "Delete a notification subscription",
          "nickname": "deleteNotificationSubscription",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "ID of notification subscription",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 405,
              "responseModel": "Error1",
              "message": "Method Not Allowed"
            },
            {
              "code": 429,
              "responseModel": "Error1",
              "message": "Too Many Requests"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/notifications",
      "operations": [
        {
          "method": "POST",
          "summary": "Publish Notification",
          "nickname": "publishNotification",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "Notificationentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 405,
              "responseModel": "Error1",
              "message": "Method Not Allowed"
            },
            {
              "code": 429,
              "responseModel": "Error1",
              "message": "Too Many Requests"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "GET",
          "summary": "Get Notifications",
          "nickname": "getNotifications",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "dataRecipientId",
              "description": "ID of Data Recipient (DR), omit for all DRs of a Data Access Platform",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 405,
              "responseModel": "Error1",
              "message": "Method Not Allowed"
            },
            {
              "code": 429,
              "responseModel": "Error1",
              "message": "Too Many Requests"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Notificationsentity"
        }
      ]
    },
    {
      "path": "/fraud/suspected-incident",
      "operations": [
        {
          "method": "POST",
          "summary": "Notify Data Provider of suspected fraud",
          "nickname": "reportSuspectedFraudIncident",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "SuspectedFraudIncidententity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/availability",
      "operations": [
        {
          "method": "GET",
          "summary": "Get information about this API's availability",
          "nickname": "getAvailability",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "operationId",
              "description": "Specific operationId for which to get the metrics. Optional",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "getConsentGrant",
                "getConsentRevocation",
                "revokeConsentGrant",
                "getAccount",
                "getAccountAssetTransferNetworks",
                "getAccountContact",
                "getAccountPaymentNetworks",
                "getAccountStatement",
                "getAccountTransactionImages",
                "getRewardProgram",
                "getRewardProgramCategories",
                "searchForAccounts",
                "searchForAccountStatements",
                "searchForAccountTransactions",
                "searchRewardPrograms",
                "getCustomer",
                "getCustomerInfo",
                "getCustomers",
                "createNotificationSubscription",
                "deleteNotificationSubscription",
                "getNotifications",
                "getNotificationSubscription",
                "publishNotification",
                "reportSuspectedFraudIncident",
                "getAvailability",
                "getCapability",
                "getCertificationMetrics",
                "cancelPayment",
                "cancelRecurringPayment",
                "cancelTransfer",
                "createPayee",
                "createPaymentInitiationParty",
                "createPaymentMethod",
                "deletePayee",
                "deletePaymentInitiationParty",
                "deletePaymentMethodRegistration",
                "getPayee",
                "getPayment",
                "getPaymentInitiationParty",
                "getPaymentMethodRegistration",
                "getPaymentsForRecurringPayment",
                "getRecurringPayment",
                "getTransfer",
                "listPaymentInitiationParties",
                "requestAccountTransfer",
                "schedulePayment",
                "scheduleRecurringPayment",
                "searchForPayees",
                "searchForPayments",
                "searchForRecurringPayments",
                "searchForTransfers",
                "updatePayee",
                "updatePayment",
                "updatePaymentInitiationParty",
                "updatePaymentMethodRegistration",
                "updateRecurringPayment",
                "getPayrollReport",
                "getPayrollReports",
                "createRecipient",
                "deleteRecipient",
                "getRecipient",
                "updateRecipient",
                "getRegistryRecipient",
                "getRegistryRecipients",
                "createTaxForm",
                "getTaxForm",
                "searchForTaxForms",
                "updateTaxForm",
                "getResource",
                "getResources"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AvailabilityListentity"
        }
      ]
    },
    {
      "path": "/capability",
      "operations": [
        {
          "method": "GET",
          "summary": "Get information about this API's capability",
          "nickname": "getCapability",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "operationId",
              "description": "Specific operationId for which to get the metrics. Optional",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "getConsentGrant",
                "getConsentRevocation",
                "revokeConsentGrant",
                "getAccount",
                "getAccountAssetTransferNetworks",
                "getAccountContact",
                "getAccountPaymentNetworks",
                "getAccountStatement",
                "getAccountTransactionImages",
                "getRewardProgram",
                "getRewardProgramCategories",
                "searchForAccounts",
                "searchForAccountStatements",
                "searchForAccountTransactions",
                "searchRewardPrograms",
                "getCustomer",
                "getCustomerInfo",
                "getCustomers",
                "createNotificationSubscription",
                "deleteNotificationSubscription",
                "getNotifications",
                "getNotificationSubscription",
                "publishNotification",
                "reportSuspectedFraudIncident",
                "getAvailability",
                "getCapability",
                "getCertificationMetrics",
                "cancelPayment",
                "cancelRecurringPayment",
                "cancelTransfer",
                "createPayee",
                "createPaymentInitiationParty",
                "createPaymentMethod",
                "deletePayee",
                "deletePaymentInitiationParty",
                "deletePaymentMethodRegistration",
                "getPayee",
                "getPayment",
                "getPaymentInitiationParty",
                "getPaymentMethodRegistration",
                "getPaymentsForRecurringPayment",
                "getRecurringPayment",
                "getTransfer",
                "listPaymentInitiationParties",
                "requestAccountTransfer",
                "schedulePayment",
                "scheduleRecurringPayment",
                "searchForPayees",
                "searchForPayments",
                "searchForRecurringPayments",
                "searchForTransfers",
                "updatePayee",
                "updatePayment",
                "updatePaymentInitiationParty",
                "updatePaymentMethodRegistration",
                "updateRecurringPayment",
                "getPayrollReport",
                "getPayrollReports",
                "createRecipient",
                "deleteRecipient",
                "getRecipient",
                "updateRecipient",
                "getRegistryRecipient",
                "getRegistryRecipients",
                "createTaxForm",
                "getTaxForm",
                "searchForTaxForms",
                "updateTaxForm",
                "getResource",
                "getResources"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fdxVersion",
              "description": "Specific FDX version for which to get the capability. Optional",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "V1.0",
                "V2.0",
                "V2.1",
                "V3.0",
                "V4.0",
                "V4.1",
                "V4.2",
                "V4.5",
                "V4.6",
                "V4.6.1",
                "V4.6.2",
                "V5.0",
                "V5.0.0",
                "V5.0.1",
                "V5.0.2",
                "V5.0.3",
                "V5.1",
                "V5.1.0",
                "V5.1.1",
                "V5.1.2",
                "V5.2",
                "V5.2.0",
                "V5.2.1",
                "V5.2.2",
                "V5.2.3",
                "V5.2.4",
                "V5.3",
                "V5.3.0",
                "V5.3.1",
                "V5.3.2",
                "V5.3.3",
                "V6.0.0",
                "V6.1.0",
                "V6.2.0"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resultType",
              "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "lightweight",
              "enum": [
                "details",
                "lightweight"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Capabilityentity"
        }
      ]
    },
    {
      "path": "/certification-metrics",
      "operations": [
        {
          "method": "GET",
          "summary": "Get certification performance metrics for this implementer's APIs",
          "nickname": "getCertificationMetrics",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "operationId",
              "description": "Specific operationId for which to get the metrics. Optional",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "getConsentGrant",
                "getConsentRevocation",
                "revokeConsentGrant",
                "getAccount",
                "getAccountAssetTransferNetworks",
                "getAccountContact",
                "getAccountPaymentNetworks",
                "getAccountStatement",
                "getAccountTransactionImages",
                "getRewardProgram",
                "getRewardProgramCategories",
                "searchForAccounts",
                "searchForAccountStatements",
                "searchForAccountTransactions",
                "searchRewardPrograms",
                "getCustomer",
                "getCustomerInfo",
                "getCustomers",
                "createNotificationSubscription",
                "deleteNotificationSubscription",
                "getNotifications",
                "getNotificationSubscription",
                "publishNotification",
                "reportSuspectedFraudIncident",
                "getAvailability",
                "getCapability",
                "getCertificationMetrics",
                "cancelPayment",
                "cancelRecurringPayment",
                "cancelTransfer",
                "createPayee",
                "createPaymentInitiationParty",
                "createPaymentMethod",
                "deletePayee",
                "deletePaymentInitiationParty",
                "deletePaymentMethodRegistration",
                "getPayee",
                "getPayment",
                "getPaymentInitiationParty",
                "getPaymentMethodRegistration",
                "getPaymentsForRecurringPayment",
                "getRecurringPayment",
                "getTransfer",
                "listPaymentInitiationParties",
                "requestAccountTransfer",
                "schedulePayment",
                "scheduleRecurringPayment",
                "searchForPayees",
                "searchForPayments",
                "searchForRecurringPayments",
                "searchForTransfers",
                "updatePayee",
                "updatePayment",
                "updatePaymentInitiationParty",
                "updatePaymentMethodRegistration",
                "updateRecurringPayment",
                "getPayrollReport",
                "getPayrollReports",
                "createRecipient",
                "deleteRecipient",
                "getRecipient",
                "updateRecipient",
                "getRegistryRecipient",
                "getRegistryRecipients",
                "createTaxForm",
                "getTaxForm",
                "searchForTaxForms",
                "updateTaxForm",
                "getResource",
                "getResources"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "CertificationMetricsentity"
        }
      ]
    },
    {
      "path": "/transfers",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for transfers",
          "nickname": "searchForTransfers",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "updatedSince",
              "description": "Return items that have been created or updated since the nextUpdateId",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "searchStartTransferDate",
              "description": "Start time for use in retrieval of transfers by transfer date",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "searchEndTransferDate",
              "description": "End time for use in retrieval of transfers by transfer date",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "searchFromAccountIds",
              "description": "Search for transfers by source account",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "searchToAccountIds",
              "description": "Search for transfers by source account",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "searchStatuses",
              "description": "Search for transfers by source account",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "searchTransferIds",
              "description": "Search for transfers by id",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Start or end date value is not in the ISO 8601 format"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Transfersentity"
        },
        {
          "method": "POST",
          "summary": "Create a transfer between accounts",
          "nickname": "requestAccountTransfer",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Data of the transfer request",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "TransferforCreateentity1"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Source account does not have sufficient funds"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Account not authorized for transfer"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Requested transfer is invalid"
            },
            {
              "code": 409,
              "responseModel": "Error1",
              "message": "Duplicate transfer request"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Transferentity"
        }
      ]
    },
    {
      "path": "/transfers/{transferId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a transfer been accounts",
          "nickname": "getTransfer",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "transferId",
              "description": "Transfer identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Transferentity"
        },
        {
          "method": "DELETE",
          "summary": "Cancel a transfer between accounts",
          "nickname": "cancelTransfer",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "transferId",
              "description": "Transfer identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Transferentity"
        }
      ]
    },
    {
      "path": "/payees",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for payees",
          "nickname": "searchForPayees",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "updatedSince",
              "description": "Return items that have been created or updated since the nextUpdateId",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Payeesentity"
        },
        {
          "method": "POST",
          "summary": "Create a payee",
          "nickname": "createPayee",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PayeeForUpdateentity1"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 409,
              "responseModel": "Payeeentity",
              "message": "Duplicate Request"
            }
          ],
          "uniqueItems": false,
          "$ref": "Payeeentity"
        }
      ]
    },
    {
      "path": "/payees/{payeeId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a payee",
          "nickname": "getPayee",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "payeeId",
              "description": "Payee Identifier. Uniquely identifies a payee",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Payee with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Payeeentity"
        },
        {
          "method": "PATCH",
          "summary": "Used to update an existing payee. The payee type must match the existing payee. This call updates the payee's fields to the values provided. If a field is not provided, the payee's field is not updated",
          "nickname": "updatePayee",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "payeeId",
              "description": "Payee Identifier. Uniquely identifies a payee",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PayeeForUpdateentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Input sent by client does not satisfy API specification"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Payee with provided ID was not found"
            },
            {
              "code": 409,
              "responseModel": "Payeeentity",
              "message": "Duplicate Request"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Payeeentity"
        },
        {
          "method": "DELETE",
          "summary": "Delete a payee",
          "nickname": "deletePayee",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "payeeId",
              "description": "Payee Identifier. Uniquely identifies a payee",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Payee cannot be modified or deleted"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Payee with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Payeeentity"
        }
      ]
    },
    {
      "path": "/payment-initiation-parties",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a payment initiation party associated with a customer profile",
          "nickname": "createPaymentInitiationParty",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PaymentInitiationPartyentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartyCreateResponseentity"
        },
        {
          "method": "GET",
          "summary": "Retrieve the payment initiation parties associated with a customer profile",
          "nickname": "listPaymentInitiationParties",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartiesentity"
        }
      ]
    },
    {
      "path": "/payment-initiation-parties/{paymentInitiationPartyId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve the payment initiation party details by ID",
          "nickname": "getPaymentInitiationParty",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartyentity"
        },
        {
          "method": "PATCH",
          "summary": "Update the payment initiation party associated with a customer profile",
          "nickname": "updatePaymentInitiationParty",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PaymentInitiationPartyentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "DELETE",
          "summary": "Remove the payment initiation party associated with a customer profile",
          "nickname": "deletePaymentInitiationParty",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/payment-initiation-parties/{paymentInitiationPartyId}/payment-methods",
      "operations": [
        {
          "method": "POST",
          "summary": "Registration of a payment initiation party to a payment method",
          "nickname": "createPaymentMethod",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PaymentInitiationPartyToPaymentMethodentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartyMethodCreateResponseentity"
        }
      ]
    },
    {
      "path": "/payment-initiation-parties/{paymentInitiationPartyId}/payment-methods/{paymentMethodRegistrationId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve the details of a payment method registered with a payment initiation party",
          "nickname": "getPaymentMethodRegistration",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentMethodRegistrationId",
              "description": "Registration identifier between a payment initiation party and a payment method",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartyToPaymentMethodentity"
        },
        {
          "method": "DELETE",
          "summary": "Remove the registered payment method from a payment initiation party",
          "nickname": "deletePaymentMethodRegistration",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentMethodRegistrationId",
              "description": "Registration identifier between a payment initiation party and a payment method",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "PATCH",
          "summary": "Update the payment method registration associated with payment initiation party",
          "nickname": "updatePaymentMethodRegistration",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentInitiationPartyId",
              "description": "This is an unique identifier of a payment initiation party",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentMethodRegistrationId",
              "description": "Registration identifier between a payment initiation party and a payment method",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PaymentInitiationPartyToPaymentMethodentity"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/payments",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for payments",
          "nickname": "searchForPayments",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "updatedSince",
              "description": "Return items that have been created or updated since the nextUpdateId",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Paymentsentity"
        },
        {
          "method": "POST",
          "summary": "Schedule a payment",
          "nickname": "schedulePayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PaymentForUpdateentity1"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Request is invalid"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Requested payment is invalid"
            },
            {
              "code": 409,
              "responseModel": "Paymententity",
              "message": "Duplicate Request"
            },
            {
              "code": 422,
              "responseModel": "Error1",
              "message": "Account type not supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Paymententity"
        }
      ]
    },
    {
      "path": "/payments/{paymentId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a payment",
          "nickname": "getPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentId",
              "description": "Payment Identifier. Uniquely identifies a payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "A payment with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Paymententity"
        },
        {
          "method": "PATCH",
          "summary": "Update a payment",
          "nickname": "updatePayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentId",
              "description": "Payment Identifier. Uniquely identifies a payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "PaymentForUpdateentity2"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Request is invalid"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Requested payment change is invalid"
            },
            {
              "code": 409,
              "responseModel": "Paymententity",
              "message": "Duplicate Request"
            },
            {
              "code": 422,
              "responseModel": "Error1",
              "message": "Account type not supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Paymententity"
        },
        {
          "method": "DELETE",
          "summary": "Cancel a payment",
          "nickname": "cancelPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "paymentId",
              "description": "Payment Identifier. Uniquely identifies a payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Payment cannot be modified or cancelled at this time. Likely due to the state that it is in"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "A payment with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Paymententity"
        }
      ]
    },
    {
      "path": "/recurring-payments",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for recurring payments",
          "nickname": "searchForRecurringPayments",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "updatedSince",
              "description": "Return items that have been created or updated since the nextUpdateId",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RecurringPaymentsentity"
        },
        {
          "method": "POST",
          "summary": "Schedule a recurring payment",
          "nickname": "scheduleRecurringPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "RecurringPaymentforUpdateentity1"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Request is invalid"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Requested payment is invalid"
            },
            {
              "code": 409,
              "responseModel": "RecurringPaymententity",
              "message": "Duplicate Request"
            },
            {
              "code": 422,
              "responseModel": "Error1",
              "message": "Account type not supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RecurringPaymententity"
        }
      ]
    },
    {
      "path": "/recurring-payments/{recurringPaymentId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a recurring payment",
          "nickname": "getRecurringPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "recurringPaymentId",
              "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "A recurring payment with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RecurringPaymententity"
        },
        {
          "method": "PATCH",
          "summary": "Update a recurring payment",
          "nickname": "updateRecurringPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "recurringPaymentId",
              "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "idempotency-key",
              "description": "Used to de-duplicate requests",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "RecurringPaymentforUpdateentity2"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Request is invalid"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Requested recurring payment change is invalid"
            },
            {
              "code": 409,
              "responseModel": "RecurringPaymententity",
              "message": "Duplicate Request"
            },
            {
              "code": 422,
              "responseModel": "Error1",
              "message": "Account type not supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RecurringPaymententity"
        },
        {
          "method": "DELETE",
          "summary": "Cancel a recurring payment",
          "nickname": "cancelRecurringPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "recurringPaymentId",
              "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Recurring payment cannot be modified or cancelled at this time. Likely due to the state that it is in"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "A recurring payment with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "RecurringPaymententity"
        }
      ]
    },
    {
      "path": "/recurring-payments/{recurringPaymentId}/payments",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for payments associated with the recurring payment",
          "nickname": "getPaymentsForRecurringPayment",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "recurringPaymentId",
              "description": "Recurring Payment Identifier. Uniquely identifies a recurring payment",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "updatedSince",
              "description": "Return items that have been created or updated since the nextUpdateId",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "A recurring payment with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Paymentsentity"
        }
      ]
    },
    {
      "path": "/payroll/reports",
      "operations": [
        {
          "method": "GET",
          "summary": "Search for the employee's latest payroll report",
          "nickname": "getPayrollReports",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "reportType",
              "description": "Whether to retrieve Verification of Employment (\"VOE\") or Verification of Income and Employment (\"VOIE\") reports",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "enum": [
                "VOE",
                "VOIE"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resultType",
              "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "lightweight",
              "enum": [
                "details",
                "lightweight"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Input sent by client does not satisfy API specification"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PayrollReportListentity"
        }
      ]
    },
    {
      "path": "/payroll/reports/{reportId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve the employee's specified payroll report",
          "nickname": "getPayrollReport",
          "parameters": [
            {
              "name": "reportId",
              "description": "Specific reportId to retrieve",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Required input data not sent"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Payroll Report with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "PayrollReportentity"
        }
      ]
    },
    {
      "path": "/register",
      "operations": [
        {
          "method": "POST",
          "summary": "Request to Register Recipient by Creating a Recipient Record",
          "nickname": "createRecipient",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "RecipientRequest"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "RecipientProvider"
        }
      ]
    },
    {
      "path": "/register/{clientId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a specific recipient data identified with clientId",
          "nickname": "getRecipient",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "description": "Client Identifier. Uniquely identifies a Client",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "RecipientProvider"
        },
        {
          "method": "PUT",
          "summary": "Update data for a specific recipient identified with clientId",
          "nickname": "updateRecipient",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "description": "Client Identifier. Uniquely identifies a Client",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "RecipientRequest"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "RecipientProvider"
        },
        {
          "method": "DELETE",
          "summary": "Delete data for a specific recipient identified with clientId",
          "nickname": "deleteRecipient",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "description": "Client Identifier. Uniquely identifies a Client",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/recipients",
      "operations": [
        {
          "method": "GET",
          "summary": "Get recipients",
          "nickname": "getRegistryRecipients",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Recipientrecordsatecosystemregistry"
        }
      ]
    },
    {
      "path": "/recipients/{recipientId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a specific recipient",
          "nickname": "getRegistryRecipient",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "recipientId",
              "description": "Recipient Identifier. Uniquely identifies a Recipient",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Recipientrecordatecosystemregistry"
        }
      ]
    },
    {
      "path": "/tax-forms",
      "operations": [
        {
          "method": "POST",
          "summary": "Submit the data for a specific tax document",
          "nickname": "createTaxForm",
          "parameters": [
            {
              "name": "Authorization",
              "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "TaxStatement1"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Tax Form type is not supported"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "TaxStatement2"
        },
        {
          "method": "GET",
          "summary": "Get the full lists of tax document data and tax form images available for a specific year for the current authorized customer",
          "nickname": "searchForTaxForms",
          "parameters": [
            {
              "name": "Authorization",
              "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Accept",
              "description": "Use the [Accept HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) to indicate one or more content types to request for the search result response. Use `application/json` to request data, `application/pdf`, `application/zip` or `image/*` MIME-types to request images. In comma-separated array format using values typically from './fdxapi.components.yaml#/components/schemas/ContentTypes' enumeration. Use in combination with TaxDataTypeQuery parameter to request `application/json` responses in 'JSON' or 'BASE64_PDF' format for tax form data",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountId",
              "description": "Account Identifier for use in searching or authorization. Optional",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "taxYear",
              "description": "Tax year in which to search for tax forms. Optional",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "2018",
              "maximum": "2050",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "taxForms",
              "description": "One or more tax form type enums for the specific documents being requested. Comma separated",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "taxDataType",
              "description": "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BASE64_PDF",
                "JSON"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resultType",
              "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "lightweight",
              "enum": [
                "details",
                "lightweight"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "TaxBasicAuth": []
          },
          "produces": [
            "application/zip",
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Request is invalid or parameter values are not supported"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Tax Form not Found"
            },
            {
              "code": 406,
              "responseModel": "Error1",
              "message": "Content Type not Supported"
            },
            {
              "code": 409,
              "responseModel": "Error1",
              "message": "Tax forms are not currently available for this account or this year"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "TaxStatementList"
        }
      ]
    },
    {
      "path": "/tax-forms/{taxFormId}",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update tax document. Allows you to upload and replace binaries or json document",
          "nickname": "updateTaxForm",
          "parameters": [
            {
              "name": "taxFormId",
              "description": "The unique ID for this tax form or tax statement",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Authorization",
              "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "TaxStatement6"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 415,
              "responseModel": "Error1",
              "message": "Server does not support the content type uploaded"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        },
        {
          "method": "GET",
          "summary": "Get the form image or TaxStatement as json for a single tax document for the customer. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. See `AcceptHeader` definition for typical values",
          "nickname": "getTaxForm",
          "parameters": [
            {
              "name": "taxFormId",
              "description": "The unique ID for this tax form or tax statement",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Authorization",
              "description": "The [Authorization HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization) provides credentials to allow access to a protected resources",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Accept",
              "description": "Use the [Accept HTTP request header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept) to indicate one or more content types to request for the search result response. Use `application/json` to request data, `application/pdf`, `application/zip` or `image/*` MIME-types to request images. In comma-separated array format using values typically from './fdxapi.components.yaml#/components/schemas/ContentTypes' enumeration. Use in combination with TaxDataTypeQuery parameter to request `application/json` responses in 'JSON' or 'BASE64_PDF' format for tax form data",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "taxDataType",
              "description": "Use taxDataType to request `application/json` tax form data response in 'JSON' or 'BASE64_PDF' format. Omit if either format is acceptable. Used in combination with AcceptHeader requesting `application/json` response",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BASE64_PDF",
                "JSON"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "TaxBasicAuth": []
          },
          "produces": [
            "application/pdf",
            "application/zip",
            "image/gif",
            "image/jpeg",
            "image/tiff",
            "image/png",
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Account ID is required for searching or validating authorization"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Tax Form for provided Tax Form ID was not found"
            },
            {
              "code": 406,
              "responseModel": "Error1",
              "message": "Content Type not Supported"
            },
            {
              "code": 409,
              "responseModel": "Error1",
              "message": "Tax forms are not currently available for this account or this year"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "TaxStatement4"
        }
      ]
    },
    {
      "path": "/resources",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve all the resources",
          "nickname": "getResources",
          "parameters": [
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resultType",
              "description": "Flag to indicate if you want a lightweight array of metadata (AccountDescriptor or Tax or Operations) or full item details (Account or a Tax subclass or Availability details). If set to 'lightweight', should only return the fields associated with the metadata entity. This field is not required, defaults to lightweight",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "lightweight",
              "enum": [
                "details",
                "lightweight"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "offset",
              "description": "Opaque cursor used by the provider to send the next set of records",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "limit",
              "description": "Number of elements that the consumer wishes to receive. Providers should implement reasonable default/maximum/minimum values based on their internal architecture and update their documentation accordingly",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Input sent by client does not satisfy API specification"
            },
            {
              "code": 401,
              "responseModel": "Error1",
              "message": "Request lacks valid authentication credentials for the target resource"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Data not found for request parameters"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "ResourceListentity"
        }
      ]
    },
    {
      "path": "/resources/{resourceId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve the details of the identified resource",
          "nickname": "getResource",
          "parameters": [
            {
              "name": "resourceId",
              "description": "Specific resourceId for which to retrieve details",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "x-fapi-interaction-id",
              "description": "Unique identifier for this interaction",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "FDX-API-Actor-Type",
              "description": "Identifies whether the customer is present (USER) or it is a BATCH operation",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "enum": [
                "BATCH",
                "USER"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "bearerAuth": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "Error1",
              "message": "Required input data not sent"
            },
            {
              "code": 404,
              "responseModel": "Error1",
              "message": "Resource with provided ID was not found"
            },
            {
              "code": 500,
              "responseModel": "Error1",
              "message": "Catch-all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error"
            },
            {
              "code": 501,
              "responseModel": "Error1",
              "message": "Error when FdxVersion in Header is not one of those implemented at backend"
            },
            {
              "code": 503,
              "responseModel": "Error1",
              "message": "System is down for maintenance"
            }
          ],
          "uniqueItems": false,
          "$ref": "Resourceentity"
        }
      ]
    }
  ],
  "models": {
    "ConsentGrantentity": {
      "id": "ConsentGrantentity",
      "description": "Record of user consent",
      "required": [],
      "properties": {
        "id": {
          "description": "The persistent identifier of the consent",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "The current status of the consent",
          "enum": [
            "ACTIVE",
            "EXPIRED",
            "REVOKED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "parties": {
          "description": "The non-end user parties participating in the Consent Grant",
          "items": {
            "$ref": "Partyentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "createdTime": {
          "description": "When the consent was initially granted",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "expirationTime": {
          "description": "When the consent grant will become expired",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "updatedTime": {
          "description": "When the consent grant was updated",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "durationType": {
          "description": "The type of duration of the consent",
          "enum": [
            "ONE_TIME",
            "PERSISTENT",
            "TIME_BOUND"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "durationPeriod": {
          "description": "The consent duration in days from day of original grant",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "lookbackPeriod": {
          "description": "Period, in days, for which historical data may be requested; measured from request time, not grant time",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "The permissioned resource entities",
          "items": {
            "$ref": "ConsentGrantResourceentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "links": {
          "description": "Links for related Consent Grant records",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ConsentGrantResourceentity": {
      "id": "ConsentGrantResourceentity",
      "description": "Entity of permissioned resources",
      "required": [
        "resourceType",
        "resourceId",
        "dataClusters"
      ],
      "properties": {
        "resourceType": {
          "description": "Type of resource to be permissioned",
          "enum": [
            "ACCOUNT",
            "CUSTOMER",
            "DOCUMENT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "resourceId": {
          "description": "Identifier of resource to be permissioned",
          "uniqueItems": false,
          "type": "string"
        },
        "dataClusters": {
          "description": "Names of clusters of data elements permissioned",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ConsentRequestentity": {
      "id": "ConsentRequestentity",
      "description": "Details of request to create new consent grant. This schema is to be used in POST request to Data Provider's `POST /par` endpoint using the Pushed Authorization Request (PAR) method",
      "required": [],
      "properties": {
        "durationType": {
          "description": "The type of duration of the consent",
          "enum": [
            "ONE_TIME",
            "PERSISTENT",
            "TIME_BOUND"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "durationPeriod": {
          "description": "The consent duration in days from day of original grant",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "lookbackPeriod": {
          "description": "Period, in days, for which historical data may be requested; measured from request time, not grant time",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "The requested resource entities",
          "items": {
            "$ref": "ConsentRequestedResourceentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ConsentRequestedResourceentity": {
      "id": "ConsentRequestedResourceentity",
      "description": "Details of requested resource and data clusters",
      "required": [
        "resourceType",
        "dataClusters"
      ],
      "properties": {
        "resourceType": {
          "description": "Type of resource permission requested",
          "enum": [
            "ACCOUNT",
            "CUSTOMER",
            "DOCUMENT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "dataClusters": {
          "description": "Names of clusters of data elements requested",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ConsentRevocationentity": {
      "id": "ConsentRevocationentity",
      "description": "Details of request to revoke consent grant",
      "required": [],
      "properties": {
        "status": {
          "description": "The status of the consent = REVOKED",
          "enum": [
            "ACTIVE",
            "EXPIRED",
            "REVOKED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "The reason for consent revocation",
          "enum": [
            "BUSINESS_RULE",
            "USER_ACTION"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "initiator": {
          "description": "The party initiating consent revocation",
          "enum": [
            "DATA_ACCESS_PLATFORM",
            "DATA_PROVIDER",
            "DATA_RECIPIENT",
            "INDIVIDUAL",
            "MERCHANT",
            "VENDOR"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "updatedTime": {
          "description": "When the consent grant was revoked",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ConsentRevocationListentity": {
      "id": "ConsentRevocationListentity",
      "description": "List of consent grant revocation requests",
      "required": [],
      "properties": {
        "revocations": {
          "description": "The list of revocation requests",
          "items": {
            "$ref": "ConsentRevocationentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Consentrevocationrequestentity": {
      "id": "Consentrevocationrequestentity",
      "description": "Details of request to revoke consent grant",
      "required": [],
      "properties": {
        "reason": {
          "description": "The reason for consent revocation",
          "enum": [
            "BUSINESS_RULE",
            "USER_ACTION"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "initiator": {
          "description": "The party initiating revocation",
          "enum": [
            "DATA_ACCESS_PLATFORM",
            "DATA_PROVIDER",
            "DATA_RECIPIENT",
            "INDIVIDUAL",
            "MERCHANT",
            "VENDOR"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FDXOAuthTokenIntrospectionResponse": {
      "id": "FDXOAuthTokenIntrospectionResponse",
      "description": "FDX response enabling transport of ConsentGrant details extended from [JSON Web Token (JWT) Profile for OAuth 2.0 Access Tokens](https://datatracker.ietf.org/doc/html/rfc9068)",
      "required": [],
      "properties": {
        "active": {
          "description": "Flag indicating whether 'ConsentGrant' is active",
          "uniqueItems": false,
          "type": "boolean"
        },
        "iss": {
          "description": "Issuer claim 'iss' identifies the principal that issued the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "uniqueItems": false,
          "type": "string"
        },
        "sub": {
          "description": "Subject claim 'sub' identifies the principal that is the subject of the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "uniqueItems": false,
          "type": "string"
        },
        "aud": {
          "description": "Audience claim 'aud' identifies the recipients for whom the JWT is intended. May be a single StringOrURI value or an array of [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) values",
          "uniqueItems": false,
          "type": "string"
        },
        "exp": {
          "description": "Expiration Time claim 'exp' identifies the time on or after which the JWT MUST NOT be accepted Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "iat": {
          "description": "Issued At claim 'iat' identifies the time at which the JWT was issued. Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "jti": {
          "description": "JWT ID claim 'jti' provides a unique identifier for the JWT. Contains a case-sensitive string value",
          "uniqueItems": false,
          "type": "string"
        },
        "client_id": {
          "description": "The unique client identifier for the Data Recipient granted the consent",
          "uniqueItems": false,
          "type": "string"
        },
        "scope": {
          "description": "Space-delimited array of any number of scopes from those in FdxOauthScope, plus 'openid' and 'offline_access'",
          "uniqueItems": false,
          "type": "string"
        },
        "fdxConsentId": {
          "description": "Unique ID for a consent grant",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FDXJWTProfile": {
      "id": "FDXJWTProfile",
      "description": "FDX JWT Profile enabling transport of ConsentGrant details in OAuth 'access_token', extended from [JSON Web Token (JWT) Profile for OAuth 2.0 Access Tokens](https://datatracker.ietf.org/doc/html/rfc9068)",
      "required": [],
      "properties": {
        "iss": {
          "description": "Issuer claim 'iss' identifies the principal that issued the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "uniqueItems": false,
          "type": "string"
        },
        "sub": {
          "description": "Subject claim 'sub' identifies the principal that is the subject of the JWT. Contains a [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "uniqueItems": false,
          "type": "string"
        },
        "aud": {
          "description": "Audience claim 'aud' identifies the recipients for whom the JWT is intended. May be a single StringOrURI value or an array of [StringOrURI](https://datatracker.ietf.org/doc/html/rfc7519#section-2) values",
          "uniqueItems": false,
          "type": "string"
        },
        "exp": {
          "description": "Expiration Time claim 'exp' identifies the time on or after which the JWT MUST NOT be accepted Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "iat": {
          "description": "Issued At claim 'iat' identifies the time at which the JWT was issued. Contains a number which is a [NumericDate](https://datatracker.ietf.org/doc/html/rfc7519#section-2) value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "jti": {
          "description": "JWT ID claim 'jti' provides a unique identifier for the JWT. Contains a case-sensitive string value",
          "uniqueItems": false,
          "type": "string"
        },
        "client_id": {
          "description": "The unique client identifier for the Data Recipient granted the consent",
          "uniqueItems": false,
          "type": "string"
        },
        "scope": {
          "description": "Space-delimited array of any number of scopes from those in FdxOauthScope, plus 'openid' and 'offline_access'",
          "uniqueItems": false,
          "type": "string"
        },
        "fdxConsentId": {
          "description": "Unique ID for a consent grant",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Error1": {
      "id": "Error1",
      "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account. See the error codes and descriptions defined in the latest FDX API Specification document, section 6.2 Errors",
      "required": [],
      "properties": {
        "code": {
          "description": "Error code defined by FDX API Specification or Data Provider indicating the error situation which has occurred",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "End user displayable information which might help the customer diagnose an error",
          "uniqueItems": false,
          "type": "string"
        },
        "debugMessage": {
          "description": "Message used to debug the root cause of the error. Contents should not be used in consumer's business logic. Can change at any time and should only be used for consumer to communicate with the data provider about an issue. Provider can include an error GUID in message for their use.",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "HATEOASLink": {
      "id": "HATEOASLink",
      "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
      "required": [
        "href"
      ],
      "properties": {
        "href": {
          "description": "URL to invoke the action on the resource",
          "uniqueItems": false,
          "type": "string"
        },
        "action": {
          "description": "HTTP Method to use for the request",
          "enum": [
            "DELETE",
            "GET",
            "PATCH",
            "POST",
            "PUT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "rel": {
          "description": "Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)",
          "uniqueItems": false,
          "type": "string"
        },
        "types": {
          "description": "Content-types that can be used in the Accept header",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Partyentity": {
      "id": "Partyentity",
      "description": "FDX Participant - an entity or person that is a part of a FDX API transaction",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "description": "Human recognizable common name",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Extensible string enum identifying the type of the party",
          "enum": [
            "DATA_ACCESS_PLATFORM",
            "DATA_PROVIDER",
            "DATA_RECIPIENT",
            "INDIVIDUAL",
            "MERCHANT",
            "VENDOR"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "homeUri": {
          "description": "URI for party, where an end user could learn more about the company or application involved in the data sharing chain",
          "uniqueItems": false,
          "type": "string"
        },
        "logoUri": {
          "description": "URI for a logo asset to be displayed to the end user",
          "uniqueItems": false,
          "type": "string"
        },
        "registry": {
          "description": "The registry containing the party's registration with name and id: FDX, GLEIF, ICANN, PRIVATE",
          "enum": [
            "FDX",
            "GLEIF",
            "ICANN",
            "PRIVATE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "registeredEntityName": {
          "description": "Registered name of party",
          "uniqueItems": false,
          "type": "string"
        },
        "registeredEntityId": {
          "description": "Registered id of party",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountentity": {
      "id": "Accountentity",
      "description": "An abstract account entity that concrete account entities extend",
      "required": [],
      "properties": {
        "parentAccountId": {
          "description": "Long-term persistent identity of the parent account. This is used to group accounts",
          "uniqueItems": false,
          "type": "string"
        },
        "lineOfBusiness": {
          "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
          "uniqueItems": false,
          "type": "string"
        },
        "routingTransitNumber": {
          "description": "The routing transit number (RTN) associated with the account number at the owning institution. This also serves as the 3-digit Institution (FID) and 5-digit Transit numbers for Canadian institutions, including leading zeroes",
          "uniqueItems": false,
          "type": "string"
        },
        "balanceType": {
          "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
          "enum": [
            "ASSET",
            "LIABILITY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "contact": {
          "description": "Contact information associated with this account",
          "uniqueItems": false,
          "$ref": "AccountContactentity2"
        },
        "interestRate": {
          "description": "Interest Rate of Account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestRateType": {
          "description": "FIXED or VARIABLE",
          "enum": [
            "FIXED",
            "VARIABLE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "interestRateAsOf": {
          "description": "Date of account's interest rate",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "priorInterestRate": {
          "description": "Previous Interest Rate of Account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestRateIndex": {
          "description": "Variable rate index name such as EONIA, EURIBOR, EURREPO, FEFUND, LIBOR, PRIME, SOFR, SONIA, etc.",
          "uniqueItems": false,
          "type": "string"
        },
        "earlyPenaltyFlag": {
          "description": "Flag that indicates if there is an early penalty for withdrawal/payoff",
          "uniqueItems": false,
          "type": "boolean"
        },
        "transferIn": {
          "description": "Account is eligible for incoming transfers",
          "uniqueItems": false,
          "type": "boolean"
        },
        "transferOut": {
          "description": "Account is eligible for outgoing transfers",
          "uniqueItems": false,
          "type": "boolean"
        },
        "billPayStatus": {
          "description": "Defines account's ability to participate in bill payments",
          "enum": [
            "ACTIVE",
            "AVAILABLE",
            "NOT_AVAILABLE",
            "PENDING"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "micrNumber": {
          "description": "MICR Number",
          "uniqueItems": false,
          "type": "string"
        },
        "lastActivityDate": {
          "description": "Date that last transaction occurred on account",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "rewardProgramId": {
          "description": "Long-term persistent identity of rewards program associated with this account",
          "uniqueItems": false,
          "type": "string"
        },
        "transactionsIncluded": {
          "description": "Default is false. If present and true, a call to retrieve transactions will not return any further details about this account. This is an optimization that allows an FDX API server to return transactions and account details in a single call",
          "uniqueItems": false,
          "type": "boolean"
        },
        "domicile": {
          "description": "The country and region of the account's legal jurisdiction",
          "uniqueItems": false,
          "$ref": "Domicileentity1"
        }
      },
      "subTypes": [
        "AnnuityAccountentity",
        "CommercialAccountentity",
        "DepositAccountentity",
        "DigitalWalletaccountentity",
        "InsuranceAccountentity",
        "InvestmentAccountentity",
        "LineofCreditAccountentity",
        "LoanAccountentity"
      ],
      "discriminator": ""
    },
    "AccountContactentity": {
      "id": "AccountContactentity",
      "description": "Contact information for the account",
      "required": [],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "holders": {
          "description": "Owners of the account",
          "items": {
            "$ref": "AccountHolderentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AccountDescriptorentity": {
      "id": "AccountDescriptorentity",
      "description": "This descriptor provides minimal information about the account for use in lightweight arrays",
      "required": [
        "accountCategory"
      ],
      "properties": {
        "accountCategory": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountId": {
          "description": "Long-term persistent identity of the account, though not an account number. This identity must be unique to the owning institution",
          "uniqueItems": false,
          "type": "string"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this account",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "accountType": {
          "description": "Account type",
          "enum": [
            "401A",
            "401K",
            "403B",
            "529",
            "ANNUITY",
            "AUTOLOAN",
            "BROKERAGEPRODUCT",
            "CD",
            "CHARGE",
            "CHECKING",
            "COMMERCIALDEPOSIT",
            "COMMERCIALINVESTMENT",
            "COMMERCIALLINEOFCREDIT",
            "COMMERCIALLOAN",
            "COVERDELL",
            "CREDITCARD",
            "DEFERREDPROFITSHARINGPLAN",
            "DEFINEDBENEFIT",
            "DIGITALASSET",
            "DIGITALWALLET",
            "ESCROW",
            "ESOP",
            "FIXEDANNUITY",
            "GUARDIAN",
            "HOMEEQUITYLOAN",
            "HOMELINEOFCREDIT",
            "INDIVIDUALPENSIONPLAN",
            "INSTALLMENT",
            "INSTITUTIONALTRUST",
            "INVESTMENTACCOUNT",
            "IRA",
            "KEOGH",
            "LIFEINCOMEFUND",
            "LINEOFCREDIT",
            "LOAN",
            "LOCKEDINRETIREMENTACCOUNT",
            "LOCKEDINRETIREMENTINCOMEFUND",
            "LOCKEDINRETIREMENTSAVINGSPLAN",
            "LONGTERMDISABILITY",
            "MILITARYLOAN",
            "MONEYMARKET",
            "MORTGAGE",
            "NONQUALIFIEDPLAN",
            "OTHERDEPOSIT",
            "OTHERINVESTMENT",
            "PERSONALLOAN",
            "POOLEDREGISTEREDPENSIONPLAN",
            "PREPAID",
            "PRESCRIBEDREGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDDISABILITYSAVINGSPLAN",
            "REGISTEREDEDUCATIONSAVINGSPLAN",
            "REGISTEREDPENSIONPLAN",
            "REGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDRETIREMENTSAVINGSPLAN",
            "RESTRICTEDLIFEINCOMEFUND",
            "RESTRICTEDLOCKEDINSAVINGSPLAN",
            "ROLLOVER",
            "ROTH",
            "SARSEP",
            "SAVINGS",
            "SHORTTERMDISABILITY",
            "SMBLOAN",
            "SPECIFIEDPENSIONPLAN",
            "STUDENTLOAN",
            "TAXABLE",
            "TAXFREESAVINGSACCOUNT",
            "TDA",
            "TERM",
            "TRUST",
            "UGMA",
            "UNIVERSALLIFE",
            "UTMA",
            "VARIABLEANNUITY",
            "WHOLELIFE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumber": {
          "description": "Full account number for the end user for this account at the owning institution. If not masked this is sensitive data which should only be exchanged if encrypted. For detailed information on implementing encryption see \"Part 4 End to End Encryption\" of the FDX API Security Model document in the Security section of the latest FDX Release download",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumberDisplay": {
          "description": "Account display number for the end user's handle at the owning institution. This is to be displayed by the Interface Provider",
          "uniqueItems": false,
          "type": "string"
        },
        "productName": {
          "description": "Marketed product name for this account. Used in UIs to assist in account selection",
          "uniqueItems": false,
          "type": "string"
        },
        "nickname": {
          "description": "Name given by the user. Used in UIs to assist in account selection",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Account status. Suggested values are: OPEN, CLOSED, PENDINGOPEN, PENDINGCLOSE, PAID, DELINQUENT, NEGATIVECURRENTBALANCE, RESTRICTED",
          "enum": [
            "CLOSED",
            "DELINQUENT",
            "NEGATIVECURRENTBALANCE",
            "OPEN",
            "PAID",
            "PENDINGCLOSE",
            "PENDINGOPEN",
            "RESTRICTED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of account",
          "uniqueItems": false,
          "type": "string"
        },
        "accountOpenDate": {
          "description": "Account opening date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "accountCloseDate": {
          "description": "Account closing date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "currency": {
          "description": "Account currency",
          "uniqueItems": false,
          "$ref": "Currencyentity4"
        },
        "fiAttributes": {
          "description": "Array of Financial institution-specific attributes",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      },
      "subTypes": [
        "Accountentity"
      ],
      "discriminator": "accountCategory"
    },
    "AccountHolderentity": {
      "id": "AccountHolderentity",
      "description": "Extends `Customer` and adds a `relationship` field to define the customer's relationship with an account",
      "required": [],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateOfBirth": {
          "description": "The person's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "taxId": {
          "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)",
          "uniqueItems": false,
          "type": "string"
        },
        "taxIdCountry": {
          "description": "Country originating the Customer's taxId element",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "governmentId": {
          "description": "A federal (such as passport) or state (such as driver's license) issued identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "customerId": {
          "description": "Long-term persistent identity of the customer. This identity must be unique to the owning institution",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of entity. One of BUSINESS or CONSUMER",
          "enum": [
            "BUSINESS",
            "CONSUMER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The customer's name",
          "uniqueItems": false,
          "$ref": "CustomerNameentity"
        },
        "businessCustomer": {
          "description": "The business customer information, only used if 'type' is 'BUSINESS'.",
          "uniqueItems": false,
          "$ref": "BusinessCustomerentity"
        },
        "customerStartDate": {
          "description": "The customer's start date at the financial institution",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "lastActivityDate": {
          "description": "The customer's date of last account activity at the financial institution",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "accounts": {
          "description": "List of accounts related to this customer",
          "items": {
            "$ref": "CustomertoAccountRelationshipentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "relationship": {
          "description": "Customer's relationship to the account",
          "enum": [
            "AUTHORIZED_USER",
            "BUSINESS",
            "FOR_BENEFIT_OF",
            "FOR_BENEFIT_OF_PRIMARY",
            "FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED",
            "FOR_BENEFIT_OF_SECONDARY",
            "FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED",
            "FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED",
            "POWER_OF_ATTORNEY",
            "PRIMARY",
            "PRIMARY_BORROWER",
            "PRIMARY_JOINT",
            "PRIMARY_JOINT_TENANTS",
            "SECONDARY",
            "SECONDARY_BORROWER",
            "SECONDARY_JOINT",
            "SECONDARY_JOINT_TENANTS",
            "SOLE_OWNER",
            "TRUSTEE",
            "UNIFORM_TRANSFER_TO_MINOR"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentNetworkSupportedbyAccount": {
      "id": "PaymentNetworkSupportedbyAccount",
      "description": "This provides details required to execute a transaction against the account within the payment network",
      "required": [],
      "properties": {
        "bankId": {
          "description": "Bank identifier used by the payment network. Typically the 9-digit routing transit number (RTN) associated with the account number at a US institution, or the 3-digit Institution (FID) and 5-digit Transit numbers for Canadian institutions, including leading zeroes",
          "uniqueItems": false,
          "type": "string"
        },
        "identifier": {
          "description": "The number used to identify the account within the payment network. If identifierType is ACCOUNT_NUMBER, this is the account number; if identifierType is TOKENIZED_ACCOUNT_NUMBER, this is a tokenized account number",
          "uniqueItems": false,
          "type": "string"
        },
        "identifierType": {
          "description": "Type of identifier, ACCOUNT_NUMBER or TOKENIZED_ACCOUNT_NUMBER",
          "enum": [
            "ACCOUNT_NUMBER",
            "TOKENIZED_ACCOUNT_NUMBER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of Canadian or U.S. payment network, CA_ACSS, CA_LVTS, US_ACH, US_CHIPS, US_FEDWIRE, US_RTP",
          "enum": [
            "CA_ACSS",
            "CA_LVTS",
            "US_ACH",
            "US_CHIPS",
            "US_FEDNOW",
            "US_FEDWIRE",
            "US_RTP"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "transferIn": {
          "description": "Can transfer funds to the account using this information",
          "uniqueItems": false,
          "type": "boolean"
        },
        "transferOut": {
          "description": "Can transfer funds from the account using this information",
          "uniqueItems": false,
          "type": "boolean"
        },
        "supportsRequestForPayment": {
          "description": "Can receive Request for Payments",
          "uniqueItems": false,
          "type": "boolean"
        },
        "transferLimits": {
          "description": "The amount limits for transfers",
          "uniqueItems": false,
          "$ref": "Incomingandoutgoingtransferlimits2"
        }
      }
    },
    "Arrayofaccountpaymentnetworks": {
      "id": "Arrayofaccountpaymentnetworks",
      "description": "An optionally paginated array of payment networks supported by the account",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "paymentNetworks": {
          "description": "Array of payment networks",
          "items": {
            "$ref": "PaymentNetworkSupportedbyAccount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Accountsentity": {
      "id": "Accountsentity",
      "description": "An optionally paginated array of accounts",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "accounts": {
          "description": "An array of accounts with entity types dependent on the account type (deposit, investment, loan, line of credit, annuity, insurance, commercial, or digital wallet)",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AnnuityAccountentity": {
      "id": "AnnuityAccountentity",
      "description": "An annuity account type",
      "required": [],
      "properties": {
        "payoutType": {
          "description": "Indicates type of payout such as immediate or deferred",
          "enum": [
            "DEFERRED",
            "IMMEDIATE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "policyProductType": {
          "description": "The type of annuity product, e.g. Fixed or Variable",
          "enum": [
            "FIXED",
            "VARIABLE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "payoutAmount": {
          "description": "Amount paid out, based on mode frequency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payoutMode": {
          "description": "Frequency of annuity payments",
          "enum": [
            "ANNUALLY",
            "BIWEEKLY",
            "DAILY",
            "MONTHLY",
            "SEMIANNUALLY",
            "SEMIMONTHLY",
            "WEEKLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "payoutStartDate": {
          "description": "Date the payout starts",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "payoutEndDate": {
          "description": "Date the payout ends",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "numberModalPayouts": {
          "description": "Total number of payouts",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "surrenderValue": {
          "description": "Cash surrender value (net) available if contract is surrendered",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payoutChangePercentage": {
          "description": "Percentage of the accumulated value to be paid to the payee each year; used exclusive of payoutChangeAmount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payoutChangeAmount": {
          "description": "Incremental modal amount (positive or negative) by which the payout amount will be changed; used exclusive of payoutPercentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "periodCertainType": {
          "description": "The number of modal periods comprising the duration of the certain period of an annuity payout",
          "enum": [
            "5_YEAR",
            "10_YEAR",
            "20_YEAR",
            "30_YEAR",
            "NONE"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AssetTransferNetwork": {
      "id": "AssetTransferNetwork",
      "description": "Information required to facilitate asset transfer from this account",
      "required": [],
      "properties": {
        "identifier": {
          "description": "The number used to identify the account within the asset transfer network. If identifierType is ACCOUNT_NUMBER, this is the account number; if identifierType is TOKENIZED_ACCOUNT_NUMBER, this is a tokenized account number",
          "uniqueItems": false,
          "type": "string"
        },
        "identifierType": {
          "description": "Type of identifier",
          "enum": [
            "ACCOUNT_NUMBER",
            "TOKENIZED_ACCOUNT_NUMBER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "institutionName": {
          "description": "The name of the institution holding the account",
          "uniqueItems": false,
          "type": "string"
        },
        "institutionId": {
          "description": "Institution identifier used by the asset transfer network ie. the Depository Trust and Clearing Corporation code for the institution holding the account",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of asset transfer",
          "enum": [
            "CA_ATON",
            "US_ACATS",
            "US_DTC"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "jointAccount": {
          "description": "Whether this account has joint owners",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "AssetTransferNetworkList": {
      "id": "AssetTransferNetworkList",
      "description": "An array of asset transfer network details for this account",
      "required": [],
      "properties": {
        "assetTransferNetworks": {
          "description": "Array of asset transfer networks",
          "items": {
            "$ref": "AssetTransferNetwork"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Billsentity": {
      "id": "Billsentity",
      "description": "The payments due on an account",
      "required": [],
      "properties": {
        "totalPaymentDue": {
          "description": "Total payment due or next payment due.  Monthly payment due for loans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "minimumPaymentDue": {
          "description": "The minimum amount which is due",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dueDate": {
          "description": "The date that the payment is due",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "autoPayEnabled": {
          "description": "Whether the user's bill is paid automatically",
          "uniqueItems": false,
          "type": "boolean"
        },
        "autoPayAmount": {
          "description": "The amount of money the user has set to autopay this bill",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "autoPayDate": {
          "description": "The date the autopayment is set to trigger for this bill",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "pastDueAmount": {
          "description": "The amount that the user should have already paid. The value is negative if user owes money",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastPaymentAmount": {
          "description": "The amount of the most recent payment",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastPaymentDate": {
          "description": "The date of most recent payment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "statementBalance": {
          "description": "The amount of the last statement.  The value is negative if the user owes money",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "statementDate": {
          "description": "The date the statement was issued",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "CardArtentity": {
      "id": "CardArtentity",
      "description": "Art associated with the card",
      "required": [],
      "properties": {
        "label": {
          "description": "Display label for the specific image",
          "uniqueItems": false,
          "type": "string"
        },
        "imageUri": {
          "description": "The [URI](https://datatracker.ietf.org/doc/html/rfc2397) link of a PNG, JPG or GIF image with proportions defined by [ISO 8710 ID-1](https://en.wikipedia.org/wiki/ISO/IEC_7810) with 340x210 ratio and width no greater than 512 pixels. The image at this URI must be accessible at all times, with no additional authentication headers. Typically this is an image resource located in the data provider's public web site or Content Delivery Network",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CommercialAccountentity": {
      "id": "CommercialAccountentity",
      "description": "Information for a commercial account type",
      "required": [],
      "properties": {
        "balanceAsOf": {
          "description": "As-of date of balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "openingLedgerBalance": {
          "description": "Opening ledger balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "closingLedgerBalance": {
          "description": "Closing ledger balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentLedgerBalance": {
          "description": "Current ledger balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "openingAvailableBalance": {
          "description": "Opening available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentAvailableBalance": {
          "description": "Current available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "closingAvailableBalance": {
          "description": "Closing available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nextDayAvailableBalance": {
          "description": "Next day's available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "twoDaysPlusAvailableBalance": {
          "description": "Two days out's available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfOutstandingCredits": {
          "description": "Number of outstanding credit transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "outstandingCreditsAmount": {
          "description": "Total amount of outstanding credits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfOutstandingDebits": {
          "description": "Number of outstanding debit transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "outstandingDebitsAmount": {
          "description": "Total amount of outstanding debits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "Transactions on the commercial account",
          "items": {
            "$ref": "CommercialTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "commercialBalances": {
          "description": "A list of specific treasury management defined balances",
          "items": {
            "$ref": "CommercialBalanceentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CommercialBalanceentity": {
      "id": "CommercialBalanceentity",
      "description": "A specific treasury management defined balance",
      "required": [],
      "properties": {
        "commercialCode": {
          "description": "The code for a specific treasury management defined field",
          "uniqueItems": false,
          "$ref": "CommercialCodeentity1"
        },
        "amount": {
          "description": "The treasury management balance amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "memo": {
          "description": "Memo field for the treasury management balance amount",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CommercialCodeentity": {
      "id": "CommercialCodeentity",
      "description": "The code for a specific treasury management defined field.\nThe [X9 BTRS/BTR3 standard](https://x9.org/standards/btrs/) (formerly named BAI2) for corporate and treasury data elements is proposed to provide the basis of (or starting point for) representing summary, account, and transaction codes for the Corp/Treasury Entity, subject to any necessary modifications useful to the members of the FDX consortium and users of the API specification",
      "required": [],
      "properties": {
        "type": {
          "description": "The source of Treasury Management account definition; one of BAI, BTRS, ISO, SWIFT",
          "enum": [
            "BAI",
            "BTRS",
            "ISO",
            "SWIFT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "The code of the Treasury Management defined field",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CommercialTransactionentity": {
      "id": "CommercialTransactionentity",
      "description": "A transaction on a commercial account type",
      "required": [],
      "properties": {
        "immediateAvailableBalance": {
          "description": "Immediate available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nextDayAvailableBalance": {
          "description": "Next day available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "twoDaysPlusAvailableBalance": {
          "description": "Two days plus available balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "referenceBankId": {
          "description": "Reference bank id",
          "uniqueItems": false,
          "type": "string"
        },
        "referenceBranchId": {
          "description": "Reference branch id",
          "uniqueItems": false,
          "type": "string"
        },
        "referenceCustomerId": {
          "description": "Reference customer id",
          "uniqueItems": false,
          "type": "string"
        },
        "commercialCode": {
          "description": "The code for a specific treasury management defined field",
          "uniqueItems": false,
          "$ref": "CommercialCodeentity1"
        },
        "memo": {
          "description": "Memo field for the commercial transaction",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Contributionentity": {
      "id": "Contributionentity",
      "description": "Contribution information to an investment account",
      "required": [],
      "properties": {
        "securityId": {
          "description": "Unique identifier of security",
          "uniqueItems": false,
          "type": "string"
        },
        "securityIdType": {
          "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN",
          "enum": [
            "CINS",
            "CMC",
            "CME",
            "CUSIP",
            "ISIN",
            "ITSA",
            "NASDAQ",
            "SEDOL",
            "SICC",
            "VALOR",
            "WKN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "employerMatchPercentage": {
          "description": "Employer contribution match percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employerMatchAmount": {
          "description": "Employer contribution match amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeePreTaxAmount": {
          "description": "Employee pre-tax contribution amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeePreTaxPercentage": {
          "description": "Employee pre-tax contribution percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeAfterTaxAmount": {
          "description": "Employee after tax contribution amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeAfterTaxPercentage": {
          "description": "Employee after tax contribution percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeDeferPreTaxAmount": {
          "description": "Employee defer pre-tax contribution match amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeDeferPreTaxPercentage": {
          "description": "Employee defer pre-tax contribution match percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeYearToDate": {
          "description": "Employee total year to date contribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employerYearToDate": {
          "description": "Employer total year to date contribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributionPercentage": {
          "description": "Rollover contribution percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributionAmount": {
          "description": "Rollover contribution Amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Currencyentity": {
      "id": "Currencyentity",
      "description": "Represents an international currency",
      "required": [],
      "properties": {
        "currencyRate": {
          "description": "Currency rate between original and converted currency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "originalCurrencyCode": {
          "description": "Original ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DebtSecurityentity": {
      "id": "DebtSecurityentity",
      "description": "An investment in a debt security",
      "required": [],
      "properties": {
        "parValue": {
          "description": "Par value amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "debtType": {
          "description": "Debt type. One of COUPON, ZERO",
          "enum": [
            "COUPON",
            "ZERO"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "debtClass": {
          "description": "Classification of debt. One of TREASURY, MUNICIPAL, CORPORATE, OTHER",
          "enum": [
            "CORPORATE",
            "MUNICIPAL",
            "OTHER",
            "TREASURY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "couponRate": {
          "description": "Bond coupon rate for next closest call date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "couponDate": {
          "description": "Maturity date for next coupon",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "couponMatureFrequency": {
          "description": "When coupons mature. One of MONTHLY, QUARTERLY,  SEMIANNUAL, ANNUAL, OTHER",
          "enum": [
            "ANNUAL",
            "MONTHLY",
            "OTHER",
            "QUARTERLY",
            "SEMIANNUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "callPrice": {
          "description": "Bond call price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "yieldToCall": {
          "description": "Yield to next call",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "callDate": {
          "description": "Next call date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "callType": {
          "description": "Type of next call. One of CALL, PUT, PREFUND, MATURITY",
          "enum": [
            "CALL",
            "MATURITY",
            "PREFUND",
            "PUT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "yieldToMaturity": {
          "description": "Yield to maturity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondMaturityDate": {
          "description": "Bond maturity date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "DepositAccountentity": {
      "id": "DepositAccountentity",
      "description": "Information for a deposit account type",
      "required": [],
      "properties": {
        "balanceAsOf": {
          "description": "As-of date of balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "currentBalance": {
          "description": "Balance of funds in account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "openingDayBalance": {
          "description": "Day's opening fund balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Balance of funds available for use",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "annualPercentageYield": {
          "description": "Annual Percentage Yield",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestYtd": {
          "description": "YTD Interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "term": {
          "description": "Term of CD in months",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "maturityDate": {
          "description": "Maturity date for CDs",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "transactions": {
          "description": "Transactions on the deposit account",
          "items": {
            "$ref": "DepositTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DepositTransactionentity": {
      "id": "DepositTransactionentity",
      "description": "A transaction on a deposit account type",
      "required": [],
      "properties": {
        "transactionType": {
          "description": "CHECK, WITHDRAWAL, TRANSFER, POSDEBIT, ATMWITHDRAWAL, BILLPAYMENT, FEE, DEPOSIT, ADJUSTMENT, INTEREST, DIVIDEND, DIRECTDEPOSIT, ATMDEPOSIT, POSCREDIT",
          "enum": [
            "ADJUSTMENT",
            "ATMDEPOSIT",
            "ATMWITHDRAWAL",
            "BILLPAYMENT",
            "CHECK",
            "DEPOSIT",
            "DIRECTDEPOSIT",
            "DIVIDEND",
            "FEE",
            "INTEREST",
            "POSCREDIT",
            "POSDEBIT",
            "TRANSFER",
            "WITHDRAWAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "payee": {
          "description": "Payee name",
          "uniqueItems": false,
          "type": "string"
        },
        "checkNumber": {
          "description": "Check number",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DigitalWalletaccountentity": {
      "id": "DigitalWalletaccountentity",
      "description": "Information for a digital wallet account",
      "required": [],
      "properties": {
        "balanceAsOf": {
          "description": "As-of date of balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "currentBalance": {
          "description": "Balance of funds in account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "openingDayBalance": {
          "description": "Day's opening fund balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Balance of funds available for use",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "annualPercentageYield": {
          "description": "Annual Percentage Yield",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestYtd": {
          "description": "YTD Interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "Transactions on the digital wallet",
          "items": {
            "$ref": "DigitalWalletTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DigitalWalletTransactionentity": {
      "id": "DigitalWalletTransactionentity",
      "description": "A transaction on a digital wallet account",
      "required": [],
      "properties": {
        "transactionType": {
          "description": "ADJUSTMENT, BILL_PAYMENT, CREDIT, DEBIT, DEPOSIT, DIRECT_DEPOSIT, DIVIDEND, FEE, INTEREST, MERCHANT_PAYMENT, MERCHANT_REFUND, TRANSFER_IN, TRANSFER_OUT, WITHDRAWAL",
          "enum": [
            "ADJUSTMENT",
            "BILL_PAYMENT",
            "CREDIT",
            "DEBIT",
            "DEPOSIT",
            "DIRECT_DEPOSIT",
            "DIVIDEND",
            "FEE",
            "INTEREST",
            "MERCHANT_PAYMENT",
            "MERCHANT_REFUND",
            "TRANSFER_IN",
            "TRANSFER_OUT",
            "WITHDRAWAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "payee": {
          "description": "Payee name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FIPortionentity": {
      "id": "FIPortionentity",
      "description": "Financial Institution-specific asset allocation",
      "required": [],
      "properties": {
        "assetClass": {
          "description": "Financial Institution-specific asset class",
          "uniqueItems": false,
          "type": "string"
        },
        "percent": {
          "description": "Percentage of asset class that falls under this asset",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Holdingentity": {
      "id": "Holdingentity",
      "description": "A holding in an investment account",
      "required": [],
      "properties": {
        "holdingId": {
          "description": "Long term persistent identity of the holding",
          "uniqueItems": false,
          "type": "string"
        },
        "securityIds": {
          "description": "Unique identifiers for the security",
          "items": {
            "$ref": "SecurityIDentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "holdingName": {
          "description": "Holding name or security name",
          "uniqueItems": false,
          "type": "string"
        },
        "holdingType": {
          "description": "ANNUITY, BOND, CD, DIGITALASSET, MUTUALFUND, OPTION, OTHER, STOCK",
          "enum": [
            "ANNUITY",
            "BOND",
            "CD",
            "DIGITALASSET",
            "MUTUALFUND",
            "OPTION",
            "OTHER",
            "STOCK"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "holdingSubType": {
          "description": "MONEYMARKET, CASH",
          "enum": [
            "CASH",
            "MONEYMARKET"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "positionType": {
          "description": "LONG, SHORT",
          "enum": [
            "LONG",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "heldInAccount": {
          "description": "Sub-account CASH, MARGIN, SHORT, OTHER",
          "enum": [
            "CASH",
            "MARGIN",
            "OTHER",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "The description of the holding",
          "uniqueItems": false,
          "type": "string"
        },
        "symbol": {
          "description": "Ticker / Market symbol",
          "uniqueItems": false,
          "type": "string"
        },
        "originalPurchaseDate": {
          "description": "Date of original purchase",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "purchasedPrice": {
          "description": "Price of holding at the time of purchase",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentAmortizationFactor": {
          "description": "Ranges from 0.0 - 1.0 indicates the adjustment to the calculation of the market value. 'currentUnitPrice * quantity * currentAmortizationFactor =  marketValue'",
          "defaultValue": "1",
          "minimum": "0",
          "maximum": "1",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentUnitPrice": {
          "description": "Current unit price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "changeInPrice": {
          "description": "Change in current price compared to previous day's close",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentUnitPriceDate": {
          "description": "Current unit price as of date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "units": {
          "description": "Required for stock, mutual funds. Number of shares (with decimals)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "marketValue": {
          "description": "Market value at the time of data retrieved",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "faceValue": {
          "description": "Required for bonds. Face value at the time of data retrieved",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "averageCost": {
          "description": "Cost is average of all purchases for holding",
          "uniqueItems": false,
          "type": "boolean"
        },
        "cashAccount": {
          "description": "If true, indicates that this holding is used to maintain proceeds from sales, dividends, and other cash postings to the investment account",
          "uniqueItems": false,
          "type": "boolean"
        },
        "rate": {
          "description": "For CDs, bonds, and other rate based holdings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "expirationDate": {
          "description": "For CDs, bonds, and other time-based holdings",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "inv401kSource": {
          "description": "Source for money for this security. One of PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST",
          "enum": [
            "AFTERTAX",
            "MATCH",
            "OTHERNONVEST",
            "OTHERVEST",
            "PRETAX",
            "PROFITSHARING",
            "ROLLOVER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "currency": {
          "description": "Currency information if it is different from Account entity",
          "uniqueItems": false,
          "$ref": "Currencyentity1"
        },
        "assetClasses": {
          "description": "Percent breakdown by asset class",
          "items": {
            "$ref": "Portionentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiAssetClasses": {
          "description": "Percent breakdown by FI-specific asset class percentage breakdown",
          "items": {
            "$ref": "FIPortionentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiAttributes": {
          "description": "Array of FI-specific attributes",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "taxLots": {
          "description": "Breakdown by tax lot",
          "items": {
            "$ref": "TaxLotentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "digitalUnits": {
          "description": "Specify units to full precision with unlimited digits after decimal point",
          "uniqueItems": false,
          "type": "string"
        },
        "security": {
          "description": "The security of the Holding; one of DebtSecurity, MutualFundSecurity OptionSecurity, OtherSecurity, StockSecurity or SweepSecurity",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "InsuranceAccountentity": {
      "id": "InsuranceAccountentity",
      "description": "An insurance account type and properties such as category, premium, and payment term information",
      "required": [],
      "properties": {
        "policyPremium": {
          "description": "The amount of the user's premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "policyPremiumTerm": {
          "description": "The payment term for the premium",
          "enum": [
            "ANNUAL",
            "MONTHLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "policyStartDate": {
          "description": "The premium start date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyStatus": {
          "description": "The status of an insurance policy account",
          "enum": [
            "ACTIVE",
            "DEATH_CLAIM_PAID",
            "DEATH_CLAIM_PENDING",
            "EXPIRED",
            "GRACE_PERIOD",
            "LAPSE_PENDING",
            "TERMINATED",
            "WAIVER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "policyEndDate": {
          "description": "The premium end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyCoverageAmount": {
          "description": "Total amount of money the user is insured for",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "Transactions on the insurance account",
          "items": {
            "$ref": "InsuranceTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "bills": {
          "description": "Payments due on the insurance account",
          "items": {
            "$ref": "Billsentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "InsuranceTransactionentity": {
      "id": "InsuranceTransactionentity",
      "description": "An insurance transaction type",
      "required": [],
      "properties": {
        "transactionType": {
          "description": "The type of an insurance transaction",
          "enum": [
            "ADJUSTMENT",
            "FEE",
            "INTEREST",
            "PAYMENT"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "InvestmentAccountentity": {
      "id": "InvestmentAccountentity",
      "description": "An investment account type and information such as balances, transactions, holdings and privileges",
      "required": [],
      "properties": {
        "balanceAsOf": {
          "description": "As-of date for balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "allowedCheckWriting": {
          "description": "Check writing privileges",
          "uniqueItems": false,
          "type": "boolean"
        },
        "allowedOptionTrade": {
          "description": "Allowed to trade options",
          "uniqueItems": false,
          "type": "boolean"
        },
        "currentValue": {
          "description": "Total current value of all investments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "holdings": {
          "description": "Holdings in the investment account",
          "items": {
            "$ref": "Holdingentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "openOrders": {
          "description": "Open orders in the investment account",
          "items": {
            "$ref": "OpenOrderentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "contribution": {
          "description": "Describes how new contributions are distributed among the available securities",
          "items": {
            "$ref": "Contributionentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "vesting": {
          "description": "Provides the past, present, and future vesting schedule and percentages",
          "items": {
            "$ref": "Vestingentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "investmentLoans": {
          "description": "Investment loans in the account",
          "items": {
            "$ref": "InvestmentLoanentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "availableCashBalance": {
          "description": "Cash balance across all sub-accounts. Should include sweep funds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "margin": {
          "description": "Margin trading is allowed",
          "uniqueItems": false,
          "type": "boolean"
        },
        "marginBalance": {
          "description": "Margin balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "shortBalance": {
          "description": "Short balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverAmount": {
          "description": "Rollover amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employerName": {
          "description": "Name of the employer in investment 401k Plan",
          "uniqueItems": false,
          "type": "string"
        },
        "brokerId": {
          "description": "Unique identifier FI",
          "uniqueItems": false,
          "type": "string"
        },
        "planId": {
          "description": "Plan number for Investment 401k plan",
          "uniqueItems": false,
          "type": "string"
        },
        "calendarYearFor401K": {
          "description": "The calendar year for this 401k account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "balanceList": {
          "description": "List of balances. Aggregate of name value pairs",
          "items": {
            "$ref": "InvestmentBalanceentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dailyChange": {
          "description": "Daily change",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "percentageChange": {
          "description": "Percentage change",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "Transactions on the investment account",
          "items": {
            "$ref": "InvestmentTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pensionSource": {
          "description": "Pension sources in the investment account",
          "items": {
            "$ref": "PensionSourceentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "InvestmentBalanceentity": {
      "id": "InvestmentBalanceentity",
      "description": "A point-in-time balance of the investment account",
      "required": [],
      "properties": {
        "balanceName": {
          "description": "Name of the balance",
          "uniqueItems": false,
          "type": "string"
        },
        "balanceDescription": {
          "description": "Description of balance",
          "uniqueItems": false,
          "type": "string"
        },
        "balanceType": {
          "description": "AMOUNT, PERCENTAGE",
          "enum": [
            "AMOUNT",
            "PERCENTAGE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "balanceValue": {
          "description": "Value of named balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "balanceDate": {
          "description": "Date as of this balance",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "currency": {
          "description": "Currency if different from that of account",
          "uniqueItems": false,
          "$ref": "Currencyentity2"
        }
      }
    },
    "InvestmentLoanentity": {
      "id": "InvestmentLoanentity",
      "description": "Any loan information against an investment account",
      "required": [],
      "properties": {
        "loanId": {
          "description": "Unique identifier for this loan",
          "uniqueItems": false,
          "type": "string"
        },
        "loanDescription": {
          "description": "Description of loan",
          "uniqueItems": false,
          "type": "string"
        },
        "initialLoanBalance": {
          "description": "Initial loan balance amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanStartDate": {
          "description": "Start date of the loan",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "currentLoanBalance": {
          "description": "Current loan principal balance amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dateAsOf": {
          "description": "Date and time of current loan balance",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "loanRate": {
          "description": "Loan annual interest rate for the loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanPaymentAmount": {
          "description": "Loan payment amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanPaymentFrequency": {
          "description": "WEEKLY, BIWEEKLY, TWICEMONTHLY, MONTHLY, FOURWEEKS, BIMONTHLY, QUARTERLY, SEMIANNUALLY, ANNUALLY, OTHER",
          "enum": [
            "ANNUALLY",
            "BIMONTHLY",
            "BIWEEKLY",
            "FOURWEEKS",
            "MONTHLY",
            "OTHER",
            "QUARTERLY",
            "SEMIANNUALLY",
            "TWICEMONTHLY",
            "WEEKLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "loanPaymentInitial": {
          "description": "Initial number of loan payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanPaymentsRemaining": {
          "description": "Remaining number of loan payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "loanMaturityDate": {
          "description": "Expected loan end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "loanInterestToDate": {
          "description": "Total interest paid to date on this loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanTotalProjectedInterest": {
          "description": "Total projected interest to be paid on this loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanNextPaymentDate": {
          "description": "The next payment date for the loan",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "InvestmentTransactionentity": {
      "id": "InvestmentTransactionentity",
      "description": "Specific transaction information",
      "required": [],
      "properties": {
        "transactionType": {
          "description": "PURCHASED, SOLD, PURCHASEDTOCOVER, ADJUSTMENT, PURCHASETOOPEN, PURCHASETOCLOSE, SOLDTOOPEN, SOLDTOCLOSE, INTEREST, MARGININTEREST, REINVESTOFINCOME, RETURNOFCAPITAL, TRANSFER, CONTRIBUTION, FEE, OPTIONEXERCISE, OPTIONEXPIRATION, DIVIDEND, DIVIDENDREINVEST, SPLIT, CLOSURE, INCOME, EXPENSE, CLOSUREOPT, INVEXPENSE, JRNLSEC, JRNLFUND, OTHER, DIV, SRVCHG, DEP, DEPOSIT, ATM, POS, XFER, CHECK, PAYMENT, CASH, DIRECTDEP, DIRECTDEBIT, REPEATPMT",
          "enum": [
            "ADJUSTMENT",
            "AIRDROP",
            "ATM",
            "CASH",
            "CHECK",
            "CLOSURE",
            "CLOSUREOPT",
            "CONTRIBUTION",
            "DEP",
            "DEPOSIT",
            "DIRECTDEBIT",
            "DIRECTDEP",
            "DIV",
            "DIVIDEND",
            "DIVIDENDREINVEST",
            "EXPENSE",
            "FEE",
            "FORKED",
            "INCOME",
            "INTEREST",
            "INVEXPENSE",
            "JRNLFUND",
            "JRNLSEC",
            "MARGININTEREST",
            "MINED",
            "OPTIONEXERCISE",
            "OPTIONEXPIRATION",
            "OTHER",
            "PAYMENT",
            "POS",
            "PURCHASED",
            "PURCHASEDTOCOVER",
            "PURCHASETOCLOSE",
            "PURCHASETOOPEN",
            "REINVESTOFINCOME",
            "REPEATPMT",
            "RETURNOFCAPITAL",
            "SOLD",
            "SOLDTOCLOSE",
            "SOLDTOOPEN",
            "SPLIT",
            "SRVCHG",
            "STAKED",
            "TRANSFER",
            "WITHDRAWAL",
            "XFER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "shares": {
          "description": "Required for stock, mutual funds. Number of shares (with decimals). Negative numbers indicate securities are being removed from the account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "faceValue": {
          "description": "Cash value for bonds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "price": {
          "description": "Unit purchase price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "securityId": {
          "description": "Unique identifier of security",
          "uniqueItems": false,
          "type": "string"
        },
        "securityIdType": {
          "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN",
          "enum": [
            "CINS",
            "CMC",
            "CME",
            "CUSIP",
            "ISIN",
            "ITSA",
            "NASDAQ",
            "SEDOL",
            "SICC",
            "VALOR",
            "WKN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "securityType": {
          "description": "BOND, DEBT, DIGITALASSET, MUTUALFUND, OPTION, OTHER, STOCK, SWEEP",
          "enum": [
            "BOND",
            "DEBT",
            "DIGITALASSET",
            "MUTUALFUND",
            "OPTION",
            "OTHER",
            "STOCK",
            "SWEEP"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "symbol": {
          "description": "Ticker symbol",
          "uniqueItems": false,
          "type": "string"
        },
        "markup": {
          "description": "Portion of unit price that is attributed to the dealer markup",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "commission": {
          "description": "Transaction commission",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxes": {
          "description": "Taxes on the trade",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fees": {
          "description": "Fees applied to the trade",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "load": {
          "description": "Load on the transaction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "inv401kSource": {
          "description": "Source of money. One of PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST",
          "enum": [
            "AFTERTAX",
            "MATCH",
            "OTHERNONVEST",
            "OTHERVEST",
            "PRETAX",
            "PROFITSHARING",
            "ROLLOVER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "confirmationNumber": {
          "description": "Confirmation number of the transaction",
          "uniqueItems": false,
          "type": "string"
        },
        "fractionalCash": {
          "description": "Cash for fractional units (used for stock splits)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "incomeType": {
          "description": "Type of investment income. One of CGLONG (capital gains-long term), CGSHORT (capital gains-short term), MISC",
          "enum": [
            "CGLONG",
            "CGSHORT",
            "MISC"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "oldUnits": {
          "description": "Number of shares before split",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "splitRatioNumerator": {
          "description": "Split ratio numerator",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "splitRatioDenominator": {
          "description": "Split ratio denominator",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "newUnits": {
          "description": "Number of shares after split",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "subAccountSec": {
          "description": "Sub-account security Type. One of CASH, MARGIN, SHORT, OTHERS",
          "enum": [
            "CASH",
            "MARGIN",
            "OTHER",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "subAccountFund": {
          "description": "From which account money came in. One of CASH, MARGIN, SHORT, OTHERS",
          "enum": [
            "CASH",
            "MARGIN",
            "OTHER",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "loanId": {
          "description": "For 401k accounts only. This indicates the transaction was due to a loan or a loan repayment",
          "uniqueItems": false,
          "type": "string"
        },
        "loanPrincipal": {
          "description": "How much loan pre-payment is principal",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "loanInterest": {
          "description": "How much loan pre-payment is interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payrollDate": {
          "description": "The date for the 401k transaction was obtained in payroll",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "priorYearContrib": {
          "description": "Indicates this buy was made using prior year's contribution",
          "uniqueItems": false,
          "type": "boolean"
        },
        "withholding": {
          "description": "Federal tax withholding",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExempt": {
          "description": "Tax-exempt transaction",
          "uniqueItems": false,
          "type": "boolean"
        },
        "gain": {
          "description": "For sales",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateWithholding": {
          "description": "State tax withholding",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "penalty": {
          "description": "Indicates amount withheld due to a penalty",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "runningBalance": {
          "description": "Running balance of the position",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unitPrice": {
          "description": "Price per commonly-quoted unit. Does not include markup/markdown, unitprice. Share price for stocks, mutual funds, and others. Percentage of par for bonds. Per share (not contract) for options",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "units": {
          "description": "For security-based actions other than stock splits, quantity. Shares for stocks, mutual funds, and others. Face value for bonds. Contracts for options",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unitType": {
          "description": "SHARES, CURRENCY",
          "enum": [
            "CURRENCY",
            "SHARES"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "transactionReason": {
          "description": "Reason for this transaction; CALL (the debt was called), SELL (the debt was sold), MATURITY (the debt reached maturity)",
          "enum": [
            "CALL",
            "MATURITY",
            "SELL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "accruedInterest": {
          "description": "Accrued interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferAction": {
          "description": "Transfer direction",
          "enum": [
            "IN",
            "OUT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "positionType": {
          "description": "LONG, SHORT",
          "enum": [
            "LONG",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "digitalUnits": {
          "description": "Full precision unit number, unlimited digits after decimal point",
          "uniqueItems": false,
          "type": "string"
        },
        "settlementTimestamp": {
          "description": "When the trade settled",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LineItementity": {
      "id": "LineItementity",
      "description": "A line item within a transaction",
      "required": [],
      "properties": {
        "description": {
          "description": "The description of the line item",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "The amount of money attributable to this line item",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "checkNumber": {
          "description": "Check number",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "memo": {
          "description": "Secondary item description",
          "uniqueItems": false,
          "type": "string"
        },
        "reference": {
          "description": "A reference number",
          "uniqueItems": false,
          "type": "string"
        },
        "imageIds": {
          "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "links": {
          "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "LineofCreditAccountentity": {
      "id": "LineofCreditAccountentity",
      "description": "A line of credit account",
      "required": [],
      "properties": {
        "balanceAsOf": {
          "description": "As-of date for balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "creditLine": {
          "description": "Credit limit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "availableCredit": {
          "description": "Available credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nextPaymentAmount": {
          "description": "Amount of next payment",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nextPaymentDate": {
          "description": "Due date of next payment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "principalBalance": {
          "description": "Principal balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentBalance": {
          "description": "Current balance of the line of credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "minimumPaymentAmount": {
          "description": "Minimum payment amount, which is due at the date specified in `nextPaymentDate`",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastPaymentAmount": {
          "description": "Last payment amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastPaymentDate": {
          "description": "Last payment date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "pastDueAmount": {
          "description": "Past Due Amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastStmtBalance": {
          "description": "Last Statement Balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastStmtDate": {
          "description": "Last Statement Date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "purchasesApr": {
          "description": "Purchases APR",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "advancesApr": {
          "description": "Advances APR",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cashAdvanceLimit": {
          "description": "Cash advance limit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "availableCash": {
          "description": "Available cash",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "financeCharges": {
          "description": "Finance charges",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cardNetwork": {
          "description": "Card network, e.g. \"VISA\", \"MASTERCARD\", \"AMERICAN_EXPRESS\", \"DISCOVER\", \"INTERLINK\", \"STAR\" etc.",
          "uniqueItems": false,
          "type": "string"
        },
        "cardArt": {
          "description": "Any Art associated to the Card related to the account",
          "uniqueItems": false,
          "$ref": "CardArtentity2"
        },
        "transactions": {
          "description": "Transactions on the line-of-credit account",
          "items": {
            "$ref": "LineofCreditTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "LineofCreditTransactionentity": {
      "id": "LineofCreditTransactionentity",
      "description": "A line of credit transaction",
      "required": [],
      "properties": {
        "transactionType": {
          "description": "CHECK, WITHDRAWAL, PAYMENT, FEE, ADJUSTMENT, INTEREST, PURCHASE",
          "enum": [
            "ADJUSTMENT",
            "CHECK",
            "FEE",
            "INTEREST",
            "PAYMENT",
            "PURCHASE",
            "WITHDRAWAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "checkNumber": {
          "description": "Check number",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "paymentDetails": {
          "description": "Breakdown of payment details",
          "uniqueItems": false,
          "$ref": "PaymentDetailsentity"
        }
      }
    },
    "LoanAccountentity": {
      "id": "LoanAccountentity",
      "description": "A loan account type",
      "required": [],
      "properties": {
        "balanceAsOf": {
          "description": "As-of date for balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "principalBalance": {
          "description": "Principal balance of loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "escrowBalance": {
          "description": "Escrow balance of loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "originalPrincipal": {
          "description": "Original principal of loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "originatingDate": {
          "description": "Loan origination date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "loanTerm": {
          "description": "Term of loan in months",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "totalNumberOfPayments": {
          "description": "Total number of payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "nextPaymentAmount": {
          "description": "Amount of next payment",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nextPaymentDate": {
          "description": "Date of next payment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "paymentFrequency": {
          "description": "DAILY, WEEKLY, BIWEEKLY, SEMIMONTHLY, MONTHLY, SEMIANNUALLY, ANNUALLY",
          "enum": [
            "ANNUALLY",
            "BIWEEKLY",
            "DAILY",
            "MONTHLY",
            "SEMIANNUALLY",
            "SEMIMONTHLY",
            "WEEKLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "compoundingPeriod": {
          "description": "DAILY, WEEKLY, BIWEEKLY, SEMIMONTHLY, MONTHLY, SEMIANNUALLY, ANNUALLY",
          "enum": [
            "ANNUALLY",
            "BIWEEKLY",
            "DAILY",
            "MONTHLY",
            "SEMIANNUALLY",
            "SEMIMONTHLY",
            "WEEKLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "payOffAmount": {
          "description": "Payoff amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastPaymentAmount": {
          "description": "Last payment amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastPaymentDate": {
          "description": "Last payment date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "maturityDate": {
          "description": "Maturity date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "interestPaidYearToDate": {
          "description": "Interest paid year to date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transactions": {
          "description": "Transactions on the loan account",
          "items": {
            "$ref": "LoanTransactionentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "LoanTransactionentity": {
      "id": "LoanTransactionentity",
      "description": "A transaction on a loan account",
      "required": [],
      "properties": {
        "transactionType": {
          "description": "PAYMENT, FEE, ADJUSTMENT, INTEREST",
          "enum": [
            "ADJUSTMENT",
            "DOUBLE_UP_PAYMENT",
            "FEE",
            "INTEREST",
            "LUMP_SUM_PAYMENT",
            "PAYMENT",
            "PAYOFF",
            "SKIP_PAYMENT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "paymentDetails": {
          "description": "Breakdown of payment details",
          "uniqueItems": false,
          "$ref": "PaymentDetailsentity"
        }
      }
    },
    "MutualFundSecurityentity": {
      "id": "MutualFundSecurityentity",
      "description": "A mutual fund",
      "required": [],
      "properties": {
        "mutualFundType": {
          "description": "Mutual fund type. One of OPENEND, CLOSEEND, OTHER",
          "enum": [
            "CLOSEEND",
            "OPENEND",
            "OTHER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "unitsStreet": {
          "description": "Units in the FI's street name, positive quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unitsUser": {
          "description": "Units in user's name directly, positive  quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "reinvestDividends": {
          "description": "Reinvest dividends",
          "uniqueItems": false,
          "type": "boolean"
        },
        "reinvestCapitalGains": {
          "description": "Reinvest capital gains",
          "uniqueItems": false,
          "type": "boolean"
        },
        "yield": {
          "description": "Current yield reported as portion of the fund's assets",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "yieldAsOfDate": {
          "description": "As-of date for yield value",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "OpenOrderentity": {
      "id": "OpenOrderentity",
      "description": "An open investment transaction order",
      "required": [],
      "properties": {
        "orderId": {
          "description": "Long-term persistent identity of the order. Id for this order transaction",
          "uniqueItems": false,
          "type": "string"
        },
        "securityId": {
          "description": "Unique identifier of security",
          "uniqueItems": false,
          "type": "string"
        },
        "securityIdType": {
          "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN",
          "enum": [
            "CINS",
            "CMC",
            "CME",
            "CUSIP",
            "ISIN",
            "ITSA",
            "NASDAQ",
            "SEDOL",
            "SICC",
            "VALOR",
            "WKN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "symbol": {
          "description": "Market symbol",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of order",
          "uniqueItems": false,
          "type": "string"
        },
        "units": {
          "description": "Number of units (shares or bonds etc.)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "orderType": {
          "description": "Type of order. One of BUY, SELL, BUYTOCOVER, BUYTOOPEN, SELLTOCOVER, SELLTOOPEN,  SELLSHORT, SELLCLOSE",
          "enum": [
            "BUY",
            "BUYTOCOVER",
            "BUYTOOPEN",
            "SELL",
            "SELLCLOSE",
            "SELLSHORT",
            "SELLTOCOVER",
            "SELLTOOPEN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "orderDate": {
          "description": "Order date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "unitPrice": {
          "description": "Unit price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unitType": {
          "description": "Type of unit. One of SHARES, CURRENCY",
          "enum": [
            "CURRENCY",
            "SHARES"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "orderDuration": {
          "description": "This order is good for DAY, GOODTILLCANCEL, IMMEDIATE",
          "enum": [
            "DAY",
            "GOODTILLCANCEL",
            "IMMEDIATE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "subAccount": {
          "description": "CASH, MARGIN, SHORT, OTHER",
          "enum": [
            "CASH",
            "MARGIN",
            "OTHER",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "limitPrice": {
          "description": "Limit price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stopPrice": {
          "description": "Stop price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "inv401kSource": {
          "description": "For 401(k) accounts, source of money for this order. PRETAX, AFTERTAX, MATCH, PROFITSHARING, ROLLOVER, OTHERVEST, OTHERNONVEST. Default if not present is OTHERNONVEST",
          "enum": [
            "AFTERTAX",
            "MATCH",
            "OTHERNONVEST",
            "OTHERVEST",
            "PRETAX",
            "PROFITSHARING",
            "ROLLOVER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "OptionSecurityentity": {
      "id": "OptionSecurityentity",
      "description": "An option",
      "required": [],
      "properties": {
        "secured": {
          "description": "How the option is secured. One of NAKED, COVERED",
          "enum": [
            "COVERED",
            "NAKED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "optionType": {
          "description": "Option type. One of PUT, CALL",
          "enum": [
            "CALL",
            "PUT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "strikePrice": {
          "description": "Strike price / Unit price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "expireDate": {
          "description": "Expiration date of option",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "sharesPerContract": {
          "description": "Shares per contract",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "OtherSecurityentity": {
      "id": "OtherSecurityentity",
      "description": "Any other kind of security",
      "required": [],
      "properties": {
        "typeDescription": {
          "description": "Description of other security",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "OccurrencebasedlimitsforaPaymentNetwork": {
      "id": "OccurrencebasedlimitsforaPaymentNetwork",
      "description": "This provides the occurrence-based limits applied to the account within the payment network",
      "required": [],
      "properties": {
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account using the timeframe limits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account using the timeframe limits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "TimeframebasedlimitsforaPaymentNetwork": {
      "id": "TimeframebasedlimitsforaPaymentNetwork",
      "description": "This provides the time-based limits applied to the account within the payment network",
      "required": [],
      "properties": {
        "resetsOn": {
          "description": "Date/time at which this timeframe will reset next",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "maxOccurrence": {
          "description": "Maximum number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "remainingOccurrence": {
          "description": "Remaining number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Timeandoccurrencebasedtransferlimits": {
      "id": "Timeandoccurrencebasedtransferlimits",
      "description": "The transfer amount limits for each timeframe or occurrence",
      "required": [],
      "properties": {
        "day": {
          "description": "The transfer limits for the current day",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork5"
        },
        "week": {
          "description": "The transfer limits for the current week",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork1"
        },
        "month": {
          "description": "The transfer limits for the current month",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork2"
        },
        "year": {
          "description": "The transfer limits for the current year",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork3"
        },
        "transaction": {
          "description": "The transfer limits taking effect from all the timeframe limits",
          "uniqueItems": false,
          "$ref": "OccurrencebasedlimitsforaPaymentNetwork2"
        }
      }
    },
    "PensionSourceentity": {
      "id": "PensionSourceentity",
      "description": "The source of pension funds",
      "required": [],
      "properties": {
        "displayName": {
          "description": "Name of the source",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Benefit Amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "paymentOption": {
          "description": "Form of payment",
          "uniqueItems": false,
          "type": "string"
        },
        "asOfDate": {
          "description": "Date benefit was calculated",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "frequency": {
          "description": "ANNUALLY, BIWEEKLY, DAILY, MONTHLY, SEMIANNUALLY, SEMIMONTHLY, WEEKLY",
          "enum": [
            "ANNUALLY",
            "BIWEEKLY",
            "DAILY",
            "MONTHLY",
            "SEMIANNUALLY",
            "SEMIMONTHLY",
            "WEEKLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Assumed retirement date. As of date amount is payable",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Portionentity": {
      "id": "Portionentity",
      "description": "An asset allocation with class and percentage",
      "required": [],
      "properties": {
        "assetClass": {
          "description": "The asset class for this allocation",
          "enum": [
            "DOMESTICBOND",
            "INTLBOND",
            "INTLSTOCK",
            "LARGESTOCK",
            "MONEYMARKET",
            "OTHER",
            "SMALLSTOCK"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "percent": {
          "description": "The percentage of this allocation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "RewardBalanceentity": {
      "id": "RewardBalanceentity",
      "description": "Reward program balance",
      "required": [],
      "properties": {
        "name": {
          "description": "Name used to denominate the balance",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "The type of the reward balance - CASHBACK, MILES, POINTS",
          "enum": [
            "CASHBACK",
            "MILES",
            "POINTS"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "balance": {
          "description": "Total units available for redemption at time of download",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "accruedYtd": {
          "description": "Total units accrued in the current program year at time of download",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "redeemedYtd": {
          "description": "Total units redeemed in the current program year at time of download",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifying": {
          "description": "Balance used for qualifying purposes",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fiAttributes": {
          "description": "Array of FI-specific attributes",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RewardCategoriesentity": {
      "id": "RewardCategoriesentity",
      "description": "An optionally paginated array of reward categories",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "rewardCategories": {
          "description": "Array of reward categories",
          "items": {
            "$ref": "RewardCategoryentity"
          },
          "uniqueItems": true,
          "type": "array"
        }
      }
    },
    "RewardCategoryentity": {
      "id": "RewardCategoryentity",
      "description": "Reward category used to calculate rewards on a transaction",
      "required": [],
      "properties": {
        "rewardProgramId": {
          "description": "Long term persistent identity of the reward program",
          "uniqueItems": false,
          "type": "string"
        },
        "categoryName": {
          "description": "Reward category name",
          "uniqueItems": false,
          "type": "string"
        },
        "categoryId": {
          "description": "Long term persistent identity of the reward category",
          "uniqueItems": false,
          "type": "string"
        },
        "multiplier": {
          "description": "Factor used to calculate rewards accrued",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the reward category",
          "uniqueItems": false,
          "type": "string"
        },
        "fiAttributes": {
          "description": "Array of FI-specific attributes",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RewardProgramMembershipentity": {
      "id": "RewardProgramMembershipentity",
      "description": "Details of a single membership in a reward programs",
      "required": [],
      "properties": {
        "accountIds": {
          "description": "accountIds associated to the reward program",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "type": "array"
        },
        "customerId": {
          "description": "Long-term persistent identity of the associated Customer",
          "uniqueItems": false,
          "type": "string"
        },
        "memberId": {
          "description": "Long term persistent identity of the program member",
          "uniqueItems": false,
          "type": "string"
        },
        "memberNumber": {
          "description": "Reward program membership number",
          "uniqueItems": false,
          "type": "string"
        },
        "memberTier": {
          "description": "If the reward program is tiered, member's current tier",
          "uniqueItems": false,
          "type": "string"
        },
        "businessOrConsumer": {
          "description": "BUSINESS or CONSUMER membership",
          "enum": [
            "BUSINESS",
            "CONSUMER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "balances": {
          "description": "Array of balances",
          "items": {
            "$ref": "RewardBalanceentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RewardProgramentity": {
      "id": "RewardProgramentity",
      "description": "Reward program detail",
      "required": [],
      "properties": {
        "rewardProgramId": {
          "description": "Long term persistent identity of the reward program",
          "uniqueItems": false,
          "type": "string"
        },
        "programName": {
          "description": "Name of reward program",
          "uniqueItems": false,
          "type": "string"
        },
        "programUrl": {
          "description": "URL of reward program",
          "uniqueItems": false,
          "type": "string"
        },
        "memberships": {
          "description": "Array of reward memberships",
          "items": {
            "$ref": "RewardProgramMembershipentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiAttributes": {
          "description": "Array of FI-specific attributes",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RewardProgramsentity": {
      "id": "RewardProgramsentity",
      "description": "An optionally paginated array of reward programs",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "rewardPrograms": {
          "description": "Array of reward programs",
          "items": {
            "$ref": "RewardProgramentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Securityentity": {
      "id": "Securityentity",
      "description": "A base Security entity which defines the type of this security",
      "required": [
        "securityCategory"
      ],
      "properties": {
        "securityCategory": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      },
      "subTypes": [
        "DebtSecurityentity",
        "MutualFundSecurityentity",
        "OptionSecurityentity",
        "OtherSecurityentity",
        "StockSecurityentity",
        "SweepSecurityentity"
      ],
      "discriminator": "securityCategory"
    },
    "SecurityIDentity": {
      "id": "SecurityIDentity",
      "description": "Unique identifier for a security",
      "required": [],
      "properties": {
        "id": {
          "description": "Security identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "idType": {
          "description": "CINS, CMC, CME, CUSIP, ISIN, ITSA, NASDAQ, SEDOL, SICC, VALOR, WKN",
          "enum": [
            "CINS",
            "CMC",
            "CME",
            "CUSIP",
            "ISIN",
            "ITSA",
            "NASDAQ",
            "SEDOL",
            "SICC",
            "VALOR",
            "WKN"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Statemententity": {
      "id": "Statemententity",
      "description": "An account statement",
      "required": [],
      "properties": {
        "accountId": {
          "description": "Corresponds to accountId in Account entity",
          "uniqueItems": false,
          "type": "string"
        },
        "statementId": {
          "description": "Long-term persistent identity of the statement",
          "uniqueItems": false,
          "type": "string"
        },
        "statementDate": {
          "description": "Date of the statement",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "description": {
          "description": "Description of statement",
          "uniqueItems": false,
          "type": "string"
        },
        "links": {
          "description": "The links to retrieve this account statement, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Availability status of statement",
          "enum": [
            "AVAILABLE",
            "PROCESSING",
            "FAILED"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Anarrayofstatements": {
      "id": "Anarrayofstatements",
      "description": "A paginated array of account statements",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "statements": {
          "description": "An array of Statement, each with its HATEOAS link to retrieve the account statement",
          "items": {
            "$ref": "Statemententity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "StockSecurityentity": {
      "id": "StockSecurityentity",
      "description": "A stock security",
      "required": [],
      "properties": {
        "unitsStreet": {
          "description": "The units in the FI's street name as a positive quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unitsUser": {
          "description": "The units in user's name directly as a positive quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "reinvestDividends": {
          "description": "Selection to reinvest dividends",
          "uniqueItems": false,
          "type": "boolean"
        },
        "stockType": {
          "description": "COMMON, PREFERRED, CONVERTIBLE, OTHER",
          "enum": [
            "COMMON",
            "CONVERTIBLE",
            "OTHER",
            "PREFERRED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "yield": {
          "description": "The current yield",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "yieldAsOfDate": {
          "description": "Yield as-of date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "SweepSecurityentity": {
      "id": "SweepSecurityentity",
      "description": "A sweep security",
      "required": [],
      "properties": {
        "currentBalance": {
          "description": "Balance of funds in account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "availableBalance": {
          "description": "Balance of funds available for use",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "balanceAsOf": {
          "description": "As-of date of balances",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "checks": {
          "description": "Whether or not checks can be written on the account",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "TaxLotentity": {
      "id": "TaxLotentity",
      "description": "Block of securities receiving the same tax treatment",
      "required": [],
      "properties": {
        "originalPurchaseDate": {
          "description": "Lot acquired date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "quantity": {
          "description": "Lot quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "purchasedPrice": {
          "description": "Original purchase price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "costBasis": {
          "description": "Total amount of money spent acquiring this lot including any fees or commission expenses incurred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentValue": {
          "description": "Lot market value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "positionType": {
          "description": "LONG, SHORT",
          "enum": [
            "LONG",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Transaction": {
      "id": "Transaction",
      "description": "Base entity for financial transactions",
      "required": [
        "accountCategory"
      ],
      "properties": {
        "accountCategory": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountId": {
          "description": "Corresponds to AccountId in Account",
          "uniqueItems": false,
          "type": "string"
        },
        "transactionId": {
          "description": "Long term persistent identity of the transaction (unique to account)",
          "uniqueItems": false,
          "type": "string"
        },
        "referenceTransactionId": {
          "description": "For reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction",
          "uniqueItems": false,
          "type": "string"
        },
        "postedTimestamp": {
          "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "transactionTimestamp": {
          "description": "The date and time that the transaction was added to the server backend systems",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "The description of the transaction, such as information about a merchant's name or place of business in a manner that is user friendly and accessible to the customer",
          "uniqueItems": false,
          "type": "string"
        },
        "memo": {
          "description": "Secondary transaction description",
          "uniqueItems": false,
          "type": "string"
        },
        "debitCreditMemo": {
          "description": "DEBIT, CREDIT, MEMO",
          "enum": [
            "CREDIT",
            "DEBIT",
            "MEMO"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "category": {
          "description": "Transaction category, preferably MCC or SIC.",
          "uniqueItems": false,
          "type": "string"
        },
        "subCategory": {
          "description": "Transaction category detail specifying the standard of the transaction category. For example, \"MCC\"",
          "uniqueItems": false,
          "type": "string"
        },
        "reference": {
          "description": "A tracking reference identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "PENDING, MEMO, POSTED, AUTHORIZATION",
          "enum": [
            "AUTHORIZATION",
            "MEMO",
            "PENDING",
            "POSTED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "The amount of money in the account currency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAmount": {
          "description": "The amount of money in the foreign currency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignCurrency": {
          "description": "The ISO 4217 code of the foreign currency",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "imageIds": {
          "description": "Array of Image Identifiers (unique to this transaction) used to retrieve Images of check or transaction receipt",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "lineItem": {
          "description": "Breakdown of the transaction details",
          "items": {
            "$ref": "LineItementity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "reward": {
          "description": "Rewards earned with this transaction",
          "uniqueItems": false,
          "$ref": "TransactionRewardentity2"
        },
        "fiAttributes": {
          "description": "Array of FI-specific attributes",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "links": {
          "description": "Links (unique to this transaction) used to retrieve images of checks or transaction receipts",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      },
      "subTypes": [
        "CommercialTransactionentity",
        "DepositTransactionentity",
        "DigitalWalletTransactionentity",
        "InsuranceTransactionentity",
        "InvestmentTransactionentity",
        "LineofCreditTransactionentity",
        "LoanTransactionentity"
      ],
      "discriminator": "accountCategory"
    },
    "TransactionRewardentity": {
      "id": "TransactionRewardentity",
      "description": "Rewards earned on a transaction",
      "required": [],
      "properties": {
        "categoryId": {
          "description": "Long term persistent identity of the reward category. This ID is mapped to a category definition returned by calling the getRewardProgramCategories operation",
          "uniqueItems": false,
          "type": "string"
        },
        "accrued": {
          "description": "Reward units accrued on this transaction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjusted": {
          "description": "Reward units adjusted on this transaction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Transactionsentity": {
      "id": "Transactionsentity",
      "description": "Optionally paginated array of transactions",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "transactions": {
          "description": "An array of transactions with entity type dependent on the account type (commercial, deposit, insurance, investment, line of credit, loan or digital wallet)",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Incomingandoutgoingtransferlimits": {
      "id": "Incomingandoutgoingtransferlimits",
      "description": "The amount limits for incoming and outgoing transfers",
      "required": [],
      "properties": {
        "out": {
          "description": "Limits for outgoing transfers from the account",
          "uniqueItems": false,
          "$ref": "Timeandoccurrencebasedtransferlimits3"
        },
        "in": {
          "description": "Limits for incoming transfers to the account",
          "uniqueItems": false,
          "$ref": "Timeandoccurrencebasedtransferlimits1"
        }
      }
    },
    "Vestingentity": {
      "id": "Vestingentity",
      "description": "Represents the vesting of ownership of an investment account",
      "required": [],
      "properties": {
        "vestingDate": {
          "description": "Vesting date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "symbol": {
          "description": "Security symbol",
          "uniqueItems": false,
          "type": "string"
        },
        "strikePrice": {
          "description": "Strike price",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "vestingPercentage": {
          "description": "Vesting percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherVestAmount": {
          "description": "Other vested amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherVestPercentage": {
          "description": "Other vested percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "vestedBalance": {
          "description": "Vested balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unVestedBalance": {
          "description": "Unvested balance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "vestedQuantity": {
          "description": "Vested quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unVestedQuantity": {
          "description": "Unvested quantity",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "AccountContactentity2": {
      "id": "AccountContactentity2",
      "description": "Contact information associated with this account",
      "required": [],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "holders": {
          "description": "Owners of the account",
          "items": {
            "$ref": "AccountHolderentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "BusinessCustomerentity": {
      "id": "BusinessCustomerentity",
      "description": "The business customer information, only used if 'type' is 'BUSINESS'.",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of business customer",
          "uniqueItems": false,
          "type": "string"
        },
        "registeredAgents": {
          "description": "A list of registered agents who act on behalf of the business customer",
          "items": {
            "$ref": "CustomerNameentity1"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "registeredId": {
          "description": "The registered tax identification number (TIN) or other identifier of business customer",
          "uniqueItems": false,
          "type": "string"
        },
        "industryCode": {
          "description": "Industry code and type",
          "uniqueItems": false,
          "$ref": "Industrycode"
        },
        "domicile": {
          "description": "The country and region of the business customer's location",
          "uniqueItems": false,
          "$ref": "Domicileentity"
        }
      }
    },
    "CardArtentity2": {
      "id": "CardArtentity2",
      "description": "Any Art associated to the Card related to the account",
      "required": [],
      "properties": {
        "label": {
          "description": "Display label for the specific image",
          "uniqueItems": false,
          "type": "string"
        },
        "imageUri": {
          "description": "The [URI](https://datatracker.ietf.org/doc/html/rfc2397) link of a PNG, JPG or GIF image with proportions defined by [ISO 8710 ID-1](https://en.wikipedia.org/wiki/ISO/IEC_7810) with 340x210 ratio and width no greater than 512 pixels. The image at this URI must be accessible at all times, with no additional authentication headers. Typically this is an image resource located in the data provider's public web site or Content Delivery Network",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CommercialCodeentity1": {
      "id": "CommercialCodeentity1",
      "description": "The code for a specific treasury management defined field",
      "required": [],
      "properties": {
        "type": {
          "description": "The source of Treasury Management account definition; one of BAI, BTRS, ISO, SWIFT",
          "enum": [
            "BAI",
            "BTRS",
            "ISO",
            "SWIFT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "The code of the Treasury Management defined field",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Currencyentity1": {
      "id": "Currencyentity1",
      "description": "Currency information if it is different from Account entity",
      "required": [],
      "properties": {
        "currencyRate": {
          "description": "Currency rate between original and converted currency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "originalCurrencyCode": {
          "description": "Original ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Currencyentity2": {
      "id": "Currencyentity2",
      "description": "Currency if different from that of account",
      "required": [],
      "properties": {
        "currencyRate": {
          "description": "Currency rate between original and converted currency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "originalCurrencyCode": {
          "description": "Original ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Currencyentity4": {
      "id": "Currencyentity4",
      "description": "Account currency",
      "required": [],
      "properties": {
        "currencyRate": {
          "description": "Currency rate between original and converted currency",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "originalCurrencyCode": {
          "description": "Original ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CustomerNameentity": {
      "id": "CustomerNameentity",
      "description": "The customer's name",
      "required": [],
      "properties": {
        "first": {
          "description": "First name",
          "uniqueItems": false,
          "type": "string"
        },
        "middle": {
          "description": "Middle initial",
          "uniqueItems": false,
          "type": "string"
        },
        "last": {
          "description": "Last name",
          "uniqueItems": false,
          "type": "string"
        },
        "suffix": {
          "description": "Generational or academic suffix",
          "uniqueItems": false,
          "type": "string"
        },
        "prefix": {
          "description": "Name prefix, e.g. Mr.",
          "uniqueItems": false,
          "type": "string"
        },
        "company": {
          "description": "Company name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CustomerNameentity1": {
      "id": "CustomerNameentity1",
      "description": "The name of an individual in their role as a customer",
      "required": [],
      "properties": {
        "first": {
          "description": "First name",
          "uniqueItems": false,
          "type": "string"
        },
        "middle": {
          "description": "Middle initial",
          "uniqueItems": false,
          "type": "string"
        },
        "last": {
          "description": "Last name",
          "uniqueItems": false,
          "type": "string"
        },
        "suffix": {
          "description": "Generational or academic suffix",
          "uniqueItems": false,
          "type": "string"
        },
        "prefix": {
          "description": "Name prefix, e.g. Mr.",
          "uniqueItems": false,
          "type": "string"
        },
        "company": {
          "description": "Company name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CustomertoAccountRelationshipentity": {
      "id": "CustomertoAccountRelationshipentity",
      "description": "Describes an account related to a customer",
      "required": [],
      "properties": {
        "accountId": {
          "description": "Account ID of the related account",
          "uniqueItems": false,
          "type": "string"
        },
        "links": {
          "description": "Links to the account, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "relationship": {
          "description": "Type of relationship to the account",
          "enum": [
            "AUTHORIZED_USER",
            "BUSINESS",
            "FOR_BENEFIT_OF",
            "FOR_BENEFIT_OF_PRIMARY",
            "FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED",
            "FOR_BENEFIT_OF_SECONDARY",
            "FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED",
            "FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED",
            "POWER_OF_ATTORNEY",
            "PRIMARY",
            "PRIMARY_BORROWER",
            "PRIMARY_JOINT",
            "PRIMARY_JOINT_TENANTS",
            "SECONDARY",
            "SECONDARY_BORROWER",
            "SECONDARY_JOINT",
            "SECONDARY_JOINT_TENANTS",
            "SOLE_OWNER",
            "TRUSTEE",
            "UNIFORM_TRANSFER_TO_MINOR"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeliveryAddress": {
      "id": "DeliveryAddress",
      "description": "A delivery address and its location type",
      "required": [],
      "properties": {
        "line1": {
          "description": "Address line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "line2": {
          "description": "Address line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "line3": {
          "description": "Address line 3",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "City",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of address location. One of BUSINESS, DELIVERY, HOME, MAILING",
          "enum": [
            "BUSINESS",
            "DELIVERY",
            "HOME",
            "MAILING"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Domicileentity": {
      "id": "Domicileentity",
      "description": "The country and region of the business customer's location",
      "required": [],
      "properties": {
        "region": {
          "description": "Country sub-division; state or province or territory",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "ISO 3166 Country Code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Domicileentity1": {
      "id": "Domicileentity1",
      "description": "The country and region of the account's legal jurisdiction",
      "required": [],
      "properties": {
        "region": {
          "description": "Country sub-division; state or province or territory",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "ISO 3166 Country Code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FIAttributeentity": {
      "id": "FIAttributeentity",
      "description": "Financial Institution provider-specific attribute",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of attribute",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "Value of attribute",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Incomingandoutgoingtransferlimits2": {
      "id": "Incomingandoutgoingtransferlimits2",
      "description": "The amount limits for transfers",
      "required": [],
      "properties": {
        "out": {
          "description": "Limits for outgoing transfers from the account",
          "uniqueItems": false,
          "$ref": "Timeandoccurrencebasedtransferlimits3"
        },
        "in": {
          "description": "Limits for incoming transfers to the account",
          "uniqueItems": false,
          "$ref": "Timeandoccurrencebasedtransferlimits1"
        }
      }
    },
    "Industrycode": {
      "id": "Industrycode",
      "description": "Industry code and type",
      "required": [],
      "properties": {
        "type": {
          "description": "Code type",
          "enum": [
            "BCLASS",
            "BICS",
            "GICS",
            "MOODYS",
            "NAICS",
            "OTHER",
            "SIC"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Code value",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "OccurrencebasedlimitsforaPaymentNetwork2": {
      "id": "OccurrencebasedlimitsforaPaymentNetwork2",
      "description": "The transfer limits taking effect from all the timeframe limits",
      "required": [],
      "properties": {
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account using the timeframe limits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account using the timeframe limits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "PageMetadata": {
      "id": "PageMetadata",
      "description": "Offset IDs for navigating result sets",
      "required": [],
      "properties": {
        "nextOffset": {
          "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific",
          "uniqueItems": false,
          "type": "string"
        },
        "prevOffset": {
          "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific",
          "uniqueItems": false,
          "type": "string"
        },
        "totalElements": {
          "description": "Total number of elements",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PageMetadataLinks": {
      "id": "PageMetadataLinks",
      "description": "Resource URLs for navigating result sets",
      "required": [],
      "properties": {
        "next": {
          "description": "Resource URL for retrieving next dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        },
        "prev": {
          "description": "Resource URL for retrieving previous dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "PaymentDetailsentity": {
      "id": "PaymentDetailsentity",
      "description": "Breakdown of payment details",
      "required": [],
      "properties": {
        "principalAmount": {
          "description": "The amount of payment applied to principal",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestAmount": {
          "description": "The amount of payment applied to interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "insuranceAmount": {
          "description": "The amount of payment applied to life/health/accident insurance on the loan",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "escrowAmount": {
          "description": "The amount of payment applied to escrow",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "pmiAmount": {
          "description": "The amount of payment applied to PMI",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "feesAmount": {
          "description": "The amount of payment applied to fees",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "TelephoneNumber": {
      "id": "TelephoneNumber",
      "description": "Standard for international phone numbers",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of phone number: HOME, BUSINESS, CELL, FAX",
          "enum": [
            "BUSINESS",
            "CELL",
            "FAX",
            "HOME"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "number": {
          "description": "Telephone subscriber number defined by ITU-T recommendation E.164",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Timeandoccurrencebasedtransferlimits1": {
      "id": "Timeandoccurrencebasedtransferlimits1",
      "description": "Limits for incoming transfers to the account",
      "required": [],
      "properties": {
        "day": {
          "description": "The transfer limits for the current day",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork5"
        },
        "week": {
          "description": "The transfer limits for the current week",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork1"
        },
        "month": {
          "description": "The transfer limits for the current month",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork2"
        },
        "year": {
          "description": "The transfer limits for the current year",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork3"
        },
        "transaction": {
          "description": "The transfer limits taking effect from all the timeframe limits",
          "uniqueItems": false,
          "$ref": "OccurrencebasedlimitsforaPaymentNetwork2"
        }
      }
    },
    "Timeandoccurrencebasedtransferlimits3": {
      "id": "Timeandoccurrencebasedtransferlimits3",
      "description": "Limits for outgoing transfers from the account",
      "required": [],
      "properties": {
        "day": {
          "description": "The transfer limits for the current day",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork5"
        },
        "week": {
          "description": "The transfer limits for the current week",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork1"
        },
        "month": {
          "description": "The transfer limits for the current month",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork2"
        },
        "year": {
          "description": "The transfer limits for the current year",
          "uniqueItems": false,
          "$ref": "TimeframebasedlimitsforaPaymentNetwork3"
        },
        "transaction": {
          "description": "The transfer limits taking effect from all the timeframe limits",
          "uniqueItems": false,
          "$ref": "OccurrencebasedlimitsforaPaymentNetwork2"
        }
      }
    },
    "TimeframebasedlimitsforaPaymentNetwork1": {
      "id": "TimeframebasedlimitsforaPaymentNetwork1",
      "description": "The transfer limits for the current week",
      "required": [],
      "properties": {
        "resetsOn": {
          "description": "Date/time at which this timeframe will reset next",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "maxOccurrence": {
          "description": "Maximum number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "remainingOccurrence": {
          "description": "Remaining number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TimeframebasedlimitsforaPaymentNetwork2": {
      "id": "TimeframebasedlimitsforaPaymentNetwork2",
      "description": "The transfer limits for the current month",
      "required": [],
      "properties": {
        "resetsOn": {
          "description": "Date/time at which this timeframe will reset next",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "maxOccurrence": {
          "description": "Maximum number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "remainingOccurrence": {
          "description": "Remaining number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TimeframebasedlimitsforaPaymentNetwork3": {
      "id": "TimeframebasedlimitsforaPaymentNetwork3",
      "description": "The transfer limits for the current year",
      "required": [],
      "properties": {
        "resetsOn": {
          "description": "Date/time at which this timeframe will reset next",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "maxOccurrence": {
          "description": "Maximum number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "remainingOccurrence": {
          "description": "Remaining number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TimeframebasedlimitsforaPaymentNetwork5": {
      "id": "TimeframebasedlimitsforaPaymentNetwork5",
      "description": "The transfer limits for the current day",
      "required": [],
      "properties": {
        "resetsOn": {
          "description": "Date/time at which this timeframe will reset next",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "transferMaxAmount": {
          "description": "Maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transferRemainingAmount": {
          "description": "Remaining value of the maximum limit of funds that can be transferred to/from the account in this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "maxOccurrence": {
          "description": "Maximum number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "remainingOccurrence": {
          "description": "Remaining number of transfers that can be made in this direction for this timeframe",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TransactionRewardentity2": {
      "id": "TransactionRewardentity2",
      "description": "Rewards earned with this transaction",
      "required": [],
      "properties": {
        "categoryId": {
          "description": "Long term persistent identity of the reward category. This ID is mapped to a category definition returned by calling the getRewardProgramCategories operation",
          "uniqueItems": false,
          "type": "string"
        },
        "accrued": {
          "description": "Reward units accrued on this transaction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjusted": {
          "description": "Reward units adjusted on this transaction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "CustomersEntity": {
      "id": "CustomersEntity",
      "description": "List of customers",
      "required": [],
      "properties": {
        "page": {
          "description": "Information required to paginate results",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Links used to paginate results",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks1"
        },
        "customers": {
          "description": "Array of customers",
          "items": {
            "$ref": "Customerentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Customerentity": {
      "id": "Customerentity",
      "description": "Represents a customer",
      "required": [],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateOfBirth": {
          "description": "The person's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "taxId": {
          "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)",
          "uniqueItems": false,
          "type": "string"
        },
        "taxIdCountry": {
          "description": "Country originating the Customer's taxId element",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "governmentId": {
          "description": "A federal (such as passport) or state (such as driver's license) issued identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "customerId": {
          "description": "Long-term persistent identity of the customer. This identity must be unique to the owning institution",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of entity. One of BUSINESS or CONSUMER",
          "enum": [
            "BUSINESS",
            "CONSUMER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The customer's name",
          "uniqueItems": false,
          "$ref": "CustomerNameentity"
        },
        "businessCustomer": {
          "description": "The business customer information, only used if 'type' is 'BUSINESS'.",
          "uniqueItems": false,
          "$ref": "BusinessCustomerentity"
        },
        "customerStartDate": {
          "description": "The customer's start date at the financial institution",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "lastActivityDate": {
          "description": "The customer's date of last account activity at the financial institution",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "accounts": {
          "description": "List of accounts related to this customer",
          "items": {
            "$ref": "CustomertoAccountRelationshipentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PageMetadataLinks1": {
      "id": "PageMetadataLinks1",
      "description": "Links used to paginate results",
      "required": [],
      "properties": {
        "next": {
          "description": "Resource URL for retrieving next dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        },
        "prev": {
          "description": "Resource URL for retrieving previous dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "Notificationentity": {
      "id": "Notificationentity",
      "description": "Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload",
      "required": [
        "notificationId",
        "type",
        "sentOn",
        "category",
        "publisher",
        "notificationPayload"
      ],
      "properties": {
        "notificationId": {
          "description": "Id of notification",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of notification",
          "enum": [
            "BALANCE",
            "CONSENT_REVOKED",
            "CONSENT_UPDATED",
            "CUSTOM",
            "PLANNED_OUTAGE",
            "RISK",
            "SERVICE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "sentOn": {
          "description": "Time notification was sent",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "category": {
          "description": "Category of notification",
          "enum": [
            "CONSENT",
            "FRAUD",
            "MAINTENANCE",
            "NEW_DATA",
            "SECURITY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "severity": {
          "description": "Notification severity",
          "enum": [
            "EMERGENCY",
            "ALERT",
            "WARNING",
            "NOTICE",
            "INFO"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "priority": {
          "description": "Notification priority",
          "enum": [
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "publisher": {
          "description": "Publisher of notification",
          "uniqueItems": false,
          "$ref": "Partyentity"
        },
        "subscriber": {
          "description": "Subscriber to this notification",
          "uniqueItems": false,
          "$ref": "Partyentity"
        },
        "notificationPayload": {
          "description": "Notification-specific key-value paired data",
          "uniqueItems": false,
          "$ref": "NotificationPayloadentity2"
        },
        "url": {
          "description": "URL to retrieve further details related to notification",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "NotificationPayloadentity": {
      "id": "NotificationPayloadentity",
      "description": "Custom key-value pairs payload for a notification",
      "required": [],
      "properties": {
        "id": {
          "description": "ID for the origination entity related to the notification",
          "uniqueItems": false,
          "type": "string"
        },
        "idType": {
          "description": "Type of entity causing origination of the notification with the given ID",
          "enum": [
            "ACCOUNT",
            "CONSENT",
            "CUSTOMER",
            "MAINTENANCE",
            "PARTY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom key-value pairs for a notification",
          "uniqueItems": false,
          "$ref": "FIAttributeentity"
        }
      }
    },
    "Notificationsentity": {
      "id": "Notificationsentity",
      "description": "A paginated array of Notifications",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "notifications": {
          "description": "An array of Notifications",
          "items": {
            "$ref": "Notificationentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "NotificationSubscriptionentity": {
      "id": "NotificationSubscriptionentity",
      "description": "Provides the fields of a notification subscription",
      "required": [
        "type",
        "category",
        "callbackUrl",
        "subscriber"
      ],
      "properties": {
        "type": {
          "description": "Type of notification",
          "enum": [
            "BALANCE",
            "CONSENT_REVOKED",
            "CONSENT_UPDATED",
            "CUSTOM",
            "PLANNED_OUTAGE",
            "RISK",
            "SERVICE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "category": {
          "description": "Category of notification",
          "enum": [
            "CONSENT",
            "FRAUD",
            "MAINTENANCE",
            "NEW_DATA",
            "SECURITY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "callbackUrl": {
          "description": "Callback URL. Previous callback URL will be updated with latest.",
          "uniqueItems": false,
          "type": "string"
        },
        "subscriber": {
          "description": "The Party who is subscribing to the notification",
          "uniqueItems": false,
          "$ref": "Partyentity"
        },
        "effectiveDate": {
          "description": "Effective date of notification",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "subscriptionId": {
          "description": "Subscription id of notification",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "NotificationPayloadentity2": {
      "id": "NotificationPayloadentity2",
      "description": "Notification-specific key-value paired data",
      "required": [],
      "properties": {
        "id": {
          "description": "ID for the origination entity related to the notification",
          "uniqueItems": false,
          "type": "string"
        },
        "idType": {
          "description": "Type of entity causing origination of the notification with the given ID",
          "enum": [
            "ACCOUNT",
            "CONSENT",
            "CUSTOMER",
            "MAINTENANCE",
            "PARTY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom key-value pairs for a notification",
          "uniqueItems": false,
          "$ref": "FIAttributeentity"
        }
      }
    },
    "SuspectedFraudIncidententity": {
      "id": "SuspectedFraudIncidententity",
      "description": "Notification of suspected fraud",
      "required": [],
      "properties": {
        "type": {
          "description": "Extensible string enum identifying the type of suspected fraud. Initially this will always be set to \"ACCOUNT_TAKEOVER\". Additional values may be defined in the future",
          "uniqueItems": false,
          "type": "string"
        },
        "suspectedIncidentId": {
          "description": "Unique identifier for the suspected fraud incident",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "Free text justification for suspecting fraud",
          "uniqueItems": false,
          "type": "string"
        },
        "fiAttributes": {
          "description": "Array of financial institution-specific attributes. Can be used to provide additional structured context on the suspected fraud for the FI to use in determining a resolution",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "reporter": {
          "description": "Identity of the party responsible for identifying and reporting the suspected fraud. This might be the DP, DAP, a vendor, a payment network, or other entity",
          "uniqueItems": false,
          "$ref": "Partyentity"
        }
      }
    },
    "Availabilityentity": {
      "id": "Availabilityentity",
      "description": "Response object for /availability API",
      "required": [],
      "properties": {
        "status": {
          "description": "Status of API availability",
          "enum": [
            "ALIVE",
            "PARTIAL",
            "MAINTENANCE",
            "DOWN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of availability status",
          "uniqueItems": false,
          "type": "string"
        },
        "operationId": {
          "description": "Operation ID (e.g. name) for this Availability",
          "enum": [
            "getConsentGrant",
            "getConsentRevocation",
            "revokeConsentGrant",
            "getAccount",
            "getAccountAssetTransferNetworks",
            "getAccountContact",
            "getAccountPaymentNetworks",
            "getAccountStatement",
            "getAccountTransactionImages",
            "getRewardProgram",
            "getRewardProgramCategories",
            "searchForAccounts",
            "searchForAccountStatements",
            "searchForAccountTransactions",
            "searchRewardPrograms",
            "getCustomer",
            "getCustomerInfo",
            "getCustomers",
            "createNotificationSubscription",
            "deleteNotificationSubscription",
            "getNotifications",
            "getNotificationSubscription",
            "publishNotification",
            "reportSuspectedFraudIncident",
            "getAvailability",
            "getCapability",
            "getCertificationMetrics",
            "cancelPayment",
            "cancelRecurringPayment",
            "cancelTransfer",
            "createPayee",
            "createPaymentInitiationParty",
            "createPaymentMethod",
            "deletePayee",
            "deletePaymentInitiationParty",
            "deletePaymentMethodRegistration",
            "getPayee",
            "getPayment",
            "getPaymentInitiationParty",
            "getPaymentMethodRegistration",
            "getPaymentsForRecurringPayment",
            "getRecurringPayment",
            "getTransfer",
            "listPaymentInitiationParties",
            "requestAccountTransfer",
            "schedulePayment",
            "scheduleRecurringPayment",
            "searchForPayees",
            "searchForPayments",
            "searchForRecurringPayments",
            "searchForTransfers",
            "updatePayee",
            "updatePayment",
            "updatePaymentInitiationParty",
            "updatePaymentMethodRegistration",
            "updateRecurringPayment",
            "getPayrollReport",
            "getPayrollReports",
            "createRecipient",
            "deleteRecipient",
            "getRecipient",
            "updateRecipient",
            "getRegistryRecipient",
            "getRegistryRecipients",
            "createTaxForm",
            "getTaxForm",
            "searchForTaxForms",
            "updateTaxForm",
            "getResource",
            "getResources"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "plannedAvailability": {
          "description": "Provider's plan for API availability",
          "items": {
            "$ref": "PlannedAvailabilityentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AvailabilityListentity": {
      "id": "AvailabilityListentity",
      "description": "Response object for /availability API",
      "required": [],
      "properties": {
        "availability": {
          "description": "Zero or more API availability metrics",
          "items": {
            "$ref": "Availabilityentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Capabilityentity": {
      "id": "Capabilityentity",
      "description": "The response object for the API /capability request",
      "required": [],
      "properties": {
        "fdxVersions": {
          "description": "The FDX schema versions supported by one or more operations",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "allowedConnections": {
          "description": "The number of concurrent connections allowed for this client",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "activeConnections": {
          "description": "The current number of active connections for this client",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "messageFormat": {
          "description": "Defaults to JSON",
          "enum": [
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "operations": {
          "description": "The FDX API endpoints supported",
          "items": {
            "$ref": "Operationentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "jwksUrl": {
          "description": "The URL to retrieve the JWKS public keys from the data provider, needed to enable payload level encryption above the TLS layer",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "CertificationMetricentity": {
      "id": "CertificationMetricentity",
      "description": "A single certification performance metric",
      "required": [],
      "properties": {
        "reportStartTimestamp": {
          "description": "When the reported metrics period began",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "reportEndTimestamp": {
          "description": "When the reported metrics period ended",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "metricsName": {
          "description": "Any provider descriptive name for the measurement. Optional, can be omitted if operationIds are returned",
          "uniqueItems": false,
          "type": "string"
        },
        "operationIds": {
          "description": "One or more Operation IDs for which these metrics apply. Optional, can be omitted if metricsName is returned",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "responseTimeAverage": {
          "description": "The self-reported average response time in milliseconds for all combined data responses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "averageUpTime": {
          "description": "See the Certification Performance section that describes how this measurement will be calculated, defines the % of availability during the measurement",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "reportTimestamp": {
          "description": "Time when these performance and availability metrics were created",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CertificationMetricsentity": {
      "id": "CertificationMetricsentity",
      "description": "Response object for /certification-metrics API",
      "required": [],
      "properties": {
        "metrics": {
          "description": "Zero or more certification performance metrics",
          "items": {
            "$ref": "CertificationMetricentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Operationentity": {
      "id": "Operationentity",
      "description": "Definition of a supported API for the /capability response object",
      "required": [],
      "properties": {
        "id": {
          "description": "Operation ID (e.g. name) of this API",
          "enum": [
            "getConsentGrant",
            "getConsentRevocation",
            "revokeConsentGrant",
            "getAccount",
            "getAccountAssetTransferNetworks",
            "getAccountContact",
            "getAccountPaymentNetworks",
            "getAccountStatement",
            "getAccountTransactionImages",
            "getRewardProgram",
            "getRewardProgramCategories",
            "searchForAccounts",
            "searchForAccountStatements",
            "searchForAccountTransactions",
            "searchRewardPrograms",
            "getCustomer",
            "getCustomerInfo",
            "getCustomers",
            "createNotificationSubscription",
            "deleteNotificationSubscription",
            "getNotifications",
            "getNotificationSubscription",
            "publishNotification",
            "reportSuspectedFraudIncident",
            "getAvailability",
            "getCapability",
            "getCertificationMetrics",
            "cancelPayment",
            "cancelRecurringPayment",
            "cancelTransfer",
            "createPayee",
            "createPaymentInitiationParty",
            "createPaymentMethod",
            "deletePayee",
            "deletePaymentInitiationParty",
            "deletePaymentMethodRegistration",
            "getPayee",
            "getPayment",
            "getPaymentInitiationParty",
            "getPaymentMethodRegistration",
            "getPaymentsForRecurringPayment",
            "getRecurringPayment",
            "getTransfer",
            "listPaymentInitiationParties",
            "requestAccountTransfer",
            "schedulePayment",
            "scheduleRecurringPayment",
            "searchForPayees",
            "searchForPayments",
            "searchForRecurringPayments",
            "searchForTransfers",
            "updatePayee",
            "updatePayment",
            "updatePaymentInitiationParty",
            "updatePaymentMethodRegistration",
            "updateRecurringPayment",
            "getPayrollReport",
            "getPayrollReports",
            "createRecipient",
            "deleteRecipient",
            "getRecipient",
            "updateRecipient",
            "getRegistryRecipient",
            "getRegistryRecipients",
            "createTaxForm",
            "getTaxForm",
            "searchForTaxForms",
            "updateTaxForm",
            "getResource",
            "getResources"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "availability": {
          "description": "Whether and how this API is currently supported",
          "uniqueItems": false,
          "$ref": "Availabilityentity1"
        },
        "alsoSupported": {
          "description": "Additional FDX API endpoints supported at this API, e.g. Transactions within Accounts, or TxImages within Transactions",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "version": {
          "description": "Data provider's implementation version number for this operation, which is unrelated to the FDX API version",
          "uniqueItems": false,
          "type": "string"
        },
        "fdxVersions": {
          "description": "FDX schema versions supported at this endpoint",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "cutOffTime": {
          "description": "Cut off time for same-day execution of activity request submitted to this API. Alternatively, the as-of time when EOD account balances are typically set",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "link": {
          "description": "General HATEOAS link for this API, specifying supported action (GET, POST, etc) and contentTypes (application/json, image/png, etc), but without any path parameter values",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "PlannedAvailabilityentity": {
      "id": "PlannedAvailabilityentity",
      "description": "Provider's plan for API availability",
      "required": [],
      "properties": {
        "status": {
          "description": "API availability status for this time period",
          "enum": [
            "ALIVE",
            "PARTIAL",
            "MAINTENANCE",
            "DOWN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of API availability status",
          "uniqueItems": false,
          "type": "string"
        },
        "startTime": {
          "description": "Start time for this status period",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "End time for this status period",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Availabilityentity1": {
      "id": "Availabilityentity1",
      "description": "Whether and how this API is currently supported",
      "required": [],
      "properties": {
        "status": {
          "description": "Status of API availability",
          "enum": [
            "ALIVE",
            "PARTIAL",
            "MAINTENANCE",
            "DOWN"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of availability status",
          "uniqueItems": false,
          "type": "string"
        },
        "operationId": {
          "description": "Operation ID (e.g. name) for this Availability",
          "enum": [
            "getConsentGrant",
            "getConsentRevocation",
            "revokeConsentGrant",
            "getAccount",
            "getAccountAssetTransferNetworks",
            "getAccountContact",
            "getAccountPaymentNetworks",
            "getAccountStatement",
            "getAccountTransactionImages",
            "getRewardProgram",
            "getRewardProgramCategories",
            "searchForAccounts",
            "searchForAccountStatements",
            "searchForAccountTransactions",
            "searchRewardPrograms",
            "getCustomer",
            "getCustomerInfo",
            "getCustomers",
            "createNotificationSubscription",
            "deleteNotificationSubscription",
            "getNotifications",
            "getNotificationSubscription",
            "publishNotification",
            "reportSuspectedFraudIncident",
            "getAvailability",
            "getCapability",
            "getCertificationMetrics",
            "cancelPayment",
            "cancelRecurringPayment",
            "cancelTransfer",
            "createPayee",
            "createPaymentInitiationParty",
            "createPaymentMethod",
            "deletePayee",
            "deletePaymentInitiationParty",
            "deletePaymentMethodRegistration",
            "getPayee",
            "getPayment",
            "getPaymentInitiationParty",
            "getPaymentMethodRegistration",
            "getPaymentsForRecurringPayment",
            "getRecurringPayment",
            "getTransfer",
            "listPaymentInitiationParties",
            "requestAccountTransfer",
            "schedulePayment",
            "scheduleRecurringPayment",
            "searchForPayees",
            "searchForPayments",
            "searchForRecurringPayments",
            "searchForTransfers",
            "updatePayee",
            "updatePayment",
            "updatePaymentInitiationParty",
            "updatePaymentMethodRegistration",
            "updateRecurringPayment",
            "getPayrollReport",
            "getPayrollReports",
            "createRecipient",
            "deleteRecipient",
            "getRecipient",
            "updateRecipient",
            "getRegistryRecipient",
            "getRegistryRecipients",
            "createTaxForm",
            "getTaxForm",
            "searchForTaxForms",
            "updateTaxForm",
            "getResource",
            "getResources"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "plannedAvailability": {
          "description": "Provider's plan for API availability",
          "items": {
            "$ref": "PlannedAvailabilityentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ISO93622014BusinessIdentifierCodeentity": {
      "id": "ISO93622014BusinessIdentifierCodeentity",
      "description": "[ISO 9362:2014](https://www.swift.com/standards/data-standards/bic-business-identifier-code)\nBusiness Identifier Code for Financial Institutions\n(see [whitepaper](https://www.swift.com/swift-resource/14256/download))\nDeprecated and superceded by `Iso9362BusinessIdCode2022` (ISO 9362:2022). BICFIDec2014Identifier will be\nremoved after multi-year transition from 9362:2014",
      "required": [],
      "properties": {
        "bicFIDec2014Id": {
          "description": "Business identifier code of the financial institution",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Branchentity": {
      "id": "Branchentity",
      "description": "Details on the Branch that is owning the destination account",
      "required": [],
      "properties": {
        "branchId": {
          "description": "Branch number",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the branch",
          "uniqueItems": false,
          "type": "string"
        },
        "locations": {
          "description": "Location of the branch",
          "items": {
            "$ref": "PaymentDeliveryAddressentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "financialInstitution": {
          "description": "Financial institution associated with the branch",
          "uniqueItems": false,
          "$ref": "FinancialInstitutionentity2"
        }
      }
    },
    "DirectDepositentity": {
      "id": "DirectDepositentity",
      "description": "Direct deposit details",
      "required": [],
      "properties": {
        "directDepositId": {
          "description": "Unique identifier of the direct deposit configuration",
          "uniqueItems": false,
          "type": "string"
        },
        "registrationTypeCode": {
          "description": "Type code of a registration for a direct deposit account",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ElectronicAddressentity": {
      "id": "ElectronicAddressentity",
      "description": "Electronic address details",
      "required": [],
      "properties": {
        "emailAddressText": {
          "description": "Value of the email address",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ExternalAccountIdSchemeentity": {
      "id": "ExternalAccountIdSchemeentity",
      "description": "External account identification scheme",
      "required": [],
      "properties": {
        "idCode": {
          "description": "Identification code",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ExternalFinancialInstitutionIdSchemeentity": {
      "id": "ExternalFinancialInstitutionIdSchemeentity",
      "description": "External financial institution identification scheme",
      "required": [],
      "properties": {
        "idCode": {
          "description": "Identification code",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FinancialInstitutionentity": {
      "id": "FinancialInstitutionentity",
      "description": "Details of the Financial Institution that is owning the destination account",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of the financial institution",
          "uniqueItems": false,
          "type": "string"
        },
        "fiId": {
          "description": "Financial institution identifier",
          "uniqueItems": false,
          "type": "object"
        },
        "locations": {
          "description": "Location of the financial institution",
          "items": {
            "$ref": "PaymentDeliveryAddressentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "GenericAccountIdentificationentity": {
      "id": "GenericAccountIdentificationentity",
      "description": "Generic account identifier entity",
      "required": [],
      "properties": {
        "accountId": {
          "description": "Account identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "issuerName": {
          "description": "Name of the issuer",
          "uniqueItems": false,
          "type": "string"
        },
        "idScheme": {
          "description": "Identification scheme associated with the generic account",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "GenericFinancialInstitutionIdentity": {
      "id": "GenericFinancialInstitutionIdentity",
      "description": "Generic financial institution identifier entity",
      "required": [],
      "properties": {
        "fiId": {
          "description": "Financial institution identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "issuerName": {
          "description": "Issuer name",
          "uniqueItems": false,
          "type": "string"
        },
        "idScheme": {
          "description": "Identification scheme associated with the generic financial institution",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "GovernmentIssuedPartyIdentificationentity": {
      "id": "GovernmentIssuedPartyIdentificationentity",
      "description": "Government issued identification document that is used to uniquely\nidentify a person or business",
      "required": [],
      "properties": {
        "idNumber": {
          "description": "Identification number",
          "uniqueItems": false,
          "type": "string"
        },
        "issuedDate": {
          "description": "Issued date",
          "uniqueItems": false,
          "type": "string"
        },
        "expiryDate": {
          "description": "Expiry date",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of the identification",
          "enum": [
            "DRIVERLICENSE",
            "PASSPORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuingCountryName": {
          "description": "Name of the issuing country",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "IBAN2007Identifierentity": {
      "id": "IBAN2007Identifierentity",
      "description": "IBAN 2007 account identifier",
      "required": [],
      "properties": {
        "iban2007Id": {
          "description": "Value of the account identifier",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ISO93622022BusinessIdentifierCodeentity": {
      "id": "ISO93622022BusinessIdentifierCodeentity",
      "description": "[ISO 9362:2022](https://www.swift.com/standards/data-standards/bic-business-identifier-code)\nBusiness Identifier Code for Financial Institutions\n(see [whitepaper](https://www.swift.com/swift-resource/14256/download)), supercedes ISO 9362:2014",
      "required": [],
      "properties": {
        "businessIdCode2022": {
          "description": "ISO 9362:2022 business identifier code of the financial institution",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Merchantentity": {
      "id": "Merchantentity",
      "description": "Business or person to whom bill payments can be sent for products or services",
      "required": [
        "status"
      ],
      "properties": {
        "displayName": {
          "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "CustomerNameentity"
        },
        "address": {
          "description": "Address of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "DeliveryAddress1"
        },
        "phone": {
          "description": "Phone number of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "TelephoneNumber"
        },
        "merchantAccountIds": {
          "description": "Account identifier(s) the customer has with the merchant",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "payeeId": {
          "description": "Persistent unique identifier for a merchant payee",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Defines the Merchant's lifecycle",
          "enum": [
            "ACTIVE",
            "DELETED",
            "PENDING",
            "REJECTED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "expiresTimestamp": {
          "description": "Describes when the entity will be automatically deleted. The entity will not go into the \"DELETED\" state. If this value is null or not provided, the entity will not expire automatically",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MerchantForUpdateentity": {
      "id": "MerchantForUpdateentity",
      "description": "Merchant's fields to be updated. Describes the fields that can be updated by the client. Supported fields could be server dependent",
      "required": [],
      "properties": {
        "displayName": {
          "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "CustomerNameentity"
        },
        "address": {
          "description": "Address of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "DeliveryAddress1"
        },
        "phone": {
          "description": "Phone number of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "TelephoneNumber"
        },
        "merchantAccountIds": {
          "description": "Account identifier(s) the customer has with the merchant",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "OrganizationNameentity": {
      "id": "OrganizationNameentity",
      "description": "Logical grouping of name attributes that are particular to\nan Organization type of payment initiation party",
      "required": [],
      "properties": {
        "companyName": {
          "description": "Name value of the organization",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PartyGroupentity": {
      "id": "PartyGroupentity",
      "description": "Entity that allows payment initiation parties to be grouped using\nspecific business rules. Each payment initiation party can belong to\nmany groups.",
      "required": [],
      "properties": {
        "groupId": {
          "description": "Unique identifier of a group of payment initiation parties",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Associated name with the group of payment initiation parties",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Payeeentity": {
      "id": "Payeeentity",
      "description": "Payee to whom funds can be transferred. Can be extended to support additional types of payees",
      "required": [
        "merchant"
      ],
      "properties": {
        "merchant": {
          "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated",
          "uniqueItems": false,
          "$ref": "Merchantentity1"
        }
      }
    },
    "PayeeForUpdateentity": {
      "id": "PayeeForUpdateentity",
      "description": "Payee's fields to be updated",
      "required": [
        "merchant"
      ],
      "properties": {
        "merchant": {
          "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated",
          "uniqueItems": false,
          "$ref": "MerchantForUpdateentity1"
        }
      }
    },
    "Payeesentity": {
      "id": "Payeesentity",
      "description": "A list of payees",
      "required": [
        "payees"
      ],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "updates": {
          "description": "Update IDs for retrieving updates since query",
          "uniqueItems": false,
          "$ref": "UpdatesMetadataentity2"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "SynchronizableArrayLinksentity2"
        },
        "payees": {
          "description": "Payees retrieved by the operation",
          "items": {
            "$ref": "Payeeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Paymententity": {
      "id": "Paymententity",
      "description": "Represents a payment",
      "required": [
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate",
        "paymentId",
        "status"
      ],
      "properties": {
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "paymentId": {
          "description": "Uniquely identifies a payment. Used within the API to reference a payment",
          "uniqueItems": false,
          "type": "string"
        },
        "recurringPaymentId": {
          "description": "The recurring payment that spawned this payment. Null if payment is not associated with a recurring payment",
          "uniqueItems": false,
          "type": "string"
        },
        "scheduledTimestamp": {
          "description": "When the payment was scheduled",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "processedTimestamp": {
          "description": "When the payment was processed",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "failedTimestamp": {
          "description": "When the payment failed. Includes when the payment was determined to lack sufficient funds",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "cancelledTimestamp": {
          "description": "When the payment was cancelled",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "startedProcessingTimestamp": {
          "description": "When the payment execution started",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Defines the status of the payment",
          "enum": [
            "CANCELLED",
            "FAILED",
            "NOFUNDS",
            "PROCESSED",
            "PROCESSING",
            "SCHEDULED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "links": {
          "description": "Links to related payment entities",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PaymentDeliveryAddressentity": {
      "id": "PaymentDeliveryAddressentity",
      "description": "A single location for a party. A party (e.g. Branch) can have multiple registered\nlocations; street addresses, email addresses and/or telephone numbers",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of delivery address",
          "enum": [
            "BUSINESS",
            "DELIVERY",
            "HOME",
            "MAILING"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "Value of the address",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "PaymentForUpdateentity": {
      "id": "PaymentForUpdateentity",
      "description": "Payment entity used for creation and update of a payment",
      "required": [
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate"
      ],
      "properties": {
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "PaymentGenericAccountentity": {
      "id": "PaymentGenericAccountentity",
      "description": "Payment Generic Account information",
      "required": [],
      "properties": {
        "accountNumber": {
          "description": "Unique identifier of the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountType": {
          "description": "Account type",
          "enum": [
            "401A",
            "401K",
            "403B",
            "529",
            "ANNUITY",
            "AUTOLOAN",
            "BROKERAGEPRODUCT",
            "CD",
            "CHARGE",
            "CHECKING",
            "COMMERCIALDEPOSIT",
            "COMMERCIALINVESTMENT",
            "COMMERCIALLINEOFCREDIT",
            "COMMERCIALLOAN",
            "COVERDELL",
            "CREDITCARD",
            "DEFERREDPROFITSHARINGPLAN",
            "DEFINEDBENEFIT",
            "DIGITALASSET",
            "DIGITALWALLET",
            "ESCROW",
            "ESOP",
            "FIXEDANNUITY",
            "GUARDIAN",
            "HOMEEQUITYLOAN",
            "HOMELINEOFCREDIT",
            "INDIVIDUALPENSIONPLAN",
            "INSTALLMENT",
            "INSTITUTIONALTRUST",
            "INVESTMENTACCOUNT",
            "IRA",
            "KEOGH",
            "LIFEINCOMEFUND",
            "LINEOFCREDIT",
            "LOAN",
            "LOCKEDINRETIREMENTACCOUNT",
            "LOCKEDINRETIREMENTINCOMEFUND",
            "LOCKEDINRETIREMENTSAVINGSPLAN",
            "LONGTERMDISABILITY",
            "MILITARYLOAN",
            "MONEYMARKET",
            "MORTGAGE",
            "NONQUALIFIEDPLAN",
            "OTHERDEPOSIT",
            "OTHERINVESTMENT",
            "PERSONALLOAN",
            "POOLEDREGISTEREDPENSIONPLAN",
            "PREPAID",
            "PRESCRIBEDREGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDDISABILITYSAVINGSPLAN",
            "REGISTEREDEDUCATIONSAVINGSPLAN",
            "REGISTEREDPENSIONPLAN",
            "REGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDRETIREMENTSAVINGSPLAN",
            "RESTRICTEDLIFEINCOMEFUND",
            "RESTRICTEDLOCKEDINSAVINGSPLAN",
            "ROLLOVER",
            "ROTH",
            "SARSEP",
            "SAVINGS",
            "SHORTTERMDISABILITY",
            "SMBLOAN",
            "SPECIFIEDPENSIONPLAN",
            "STUDENTLOAN",
            "TAXABLE",
            "TAXFREESAVINGSACCOUNT",
            "TDA",
            "TERM",
            "TRUST",
            "UGMA",
            "UNIVERSALLIFE",
            "UTMA",
            "VARIABLEANNUITY",
            "WHOLELIFE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Account name",
          "uniqueItems": false,
          "type": "string"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Identifier of the payment generic account",
          "uniqueItems": false,
          "type": "object"
        },
        "branch": {
          "description": "Branch details associated with this account",
          "uniqueItems": false,
          "$ref": "Branchentity1"
        }
      }
    },
    "PaymentInitiationPartiesentity": {
      "id": "PaymentInitiationPartiesentity",
      "description": "Payment initiation party summaries",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "paymentInitiationParties": {
          "description": "Payment initiation party summaries",
          "items": {
            "$ref": "PaymentInitiationPartySummaryentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PaymentInitiationPartyentity": {
      "id": "PaymentInitiationPartyentity",
      "description": "Party details for FI payment initiation. Each payment initiation party\nwill have a separate entry per FI customer, for example we\nmight have multiple payment initiation parties that represent the same\nphysical person; since they are registered for separate\ncustomers they will have separate entries.",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "description": "Human recognizable common name",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Extensible string enum identifying the type of the party",
          "enum": [
            "DATA_ACCESS_PLATFORM",
            "DATA_PROVIDER",
            "DATA_RECIPIENT",
            "INDIVIDUAL",
            "MERCHANT",
            "VENDOR"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "homeUri": {
          "description": "URI for party, where an end user could learn more about the company or application involved in the data sharing chain",
          "uniqueItems": false,
          "type": "string"
        },
        "logoUri": {
          "description": "URI for a logo asset to be displayed to the end user",
          "uniqueItems": false,
          "type": "string"
        },
        "registry": {
          "description": "The registry containing the party's registration with name and id: FDX, GLEIF, ICANN, PRIVATE",
          "enum": [
            "FDX",
            "GLEIF",
            "ICANN",
            "PRIVATE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "registeredEntityName": {
          "description": "Registered name of party",
          "uniqueItems": false,
          "type": "string"
        },
        "registeredEntityId": {
          "description": "Registered id of party",
          "uniqueItems": false,
          "type": "string"
        },
        "partyGroups": {
          "description": "The PartyGroups to which this initiation party belongs.\nOptional, can be omitted if party belongs to no groups.",
          "items": {
            "$ref": "PartyGroupentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "paymentInitiationPartyName": {
          "description": "Name entity associated with the payment initiation party",
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartyNameentity1"
        },
        "governmentIssuedPartyIds": {
          "description": "Government-issued identification documents that are\nused to uniquely identify this payment initiation party",
          "items": {
            "$ref": "GovernmentIssuedPartyIdentificationentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "paymentMethods": {
          "description": "Registrations between this payment initiation party and its payment methods",
          "items": {
            "$ref": "PaymentInitiationPartyToPaymentMethodentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "locations": {
          "description": "Delivery addresses associated with this payment initiation party",
          "items": {
            "$ref": "PaymentDeliveryAddressentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "expiresTimestamp": {
          "description": "Describes when the entity will be automatically deleted. The entity\nwill not go into the \"DELETED\" state. If this value is null or not\nprovided, the entity will not expire automatically",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Current status of the payment initiation party entry",
          "enum": [
            "ACTIVE",
            "DELETED",
            "PENDING",
            "REJECTED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "contactPreferences": {
          "description": "Contact methods for this payment initiation party",
          "items": {
            "$ref": "PaymentInitiationPartyContactMethodentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PaymentInitiationPartyContactMethodentity": {
      "id": "PaymentInitiationPartyContactMethodentity",
      "description": "A contact method for a payment initiation party.",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of the contact preference",
          "enum": [
            "CELL",
            "EMAIL",
            "FAX",
            "LETTER",
            "PHONE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "Address details associated with this contact preference",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "PaymentInitiationPartyCreateResponseentity": {
      "id": "PaymentInitiationPartyCreateResponseentity",
      "description": "Entity that stores FI payment initiation party details. Each payment\ninitiation party  will have a separate entry per FI customer, e.g. we\nmight have multiple payment initiation parties that represent the same\nphysical person, nevertheless since they are registered for separate\ncustomers then they will have separate entries.",
      "required": [],
      "properties": {
        "paymentInitiationPartyId": {
          "description": "Unique identifier of a payment initiation party",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentInitiationPartyMethodCreateResponseentity": {
      "id": "PaymentInitiationPartyMethodCreateResponseentity",
      "description": "Registration between a payment initiation party and a Payment Method",
      "required": [],
      "properties": {
        "registrationId": {
          "description": "Registration identifier between a payment initiation party and a payment method",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentInitiationPartyNameentity": {
      "id": "PaymentInitiationPartyNameentity",
      "description": "Generic entity that stores various names associated with a payment initiation party",
      "required": [],
      "properties": {
        "aliasName": {
          "description": "Alias name",
          "uniqueItems": false,
          "type": "string"
        },
        "detail": {
          "description": "Details of the name",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "PaymentInitiationPartySummaryentity": {
      "id": "PaymentInitiationPartySummaryentity",
      "description": "Summary of a payment initiation party",
      "required": [],
      "properties": {
        "paymentInitiationPartyId": {
          "description": "Unique identifier of a payment initiation party",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Details of the name",
          "uniqueItems": false,
          "$ref": "PaymentInitiationPartyNameentity3"
        }
      }
    },
    "PaymentInitiationPartyToPaymentMethodentity": {
      "id": "PaymentInitiationPartyToPaymentMethodentity",
      "description": "Registration between a payment initiation party and a Payment Method",
      "required": [],
      "properties": {
        "registrationId": {
          "description": "Registration ID",
          "uniqueItems": false,
          "type": "string"
        },
        "paymentMethod": {
          "description": "Payment method details",
          "uniqueItems": false,
          "$ref": "PaymentMethodentity2"
        },
        "account": {
          "description": "Account details",
          "uniqueItems": false,
          "type": "object"
        },
        "locations": {
          "description": "Address associated with the payment method registration of a payment initiation party",
          "items": {
            "$ref": "PaymentDeliveryAddressentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PaymentMethodentity": {
      "id": "PaymentMethodentity",
      "description": "A method of payment, also known as a payment type or payment rail",
      "required": [],
      "properties": {
        "paymentMethodId": {
          "description": "Unique identifier of the payment method",
          "uniqueItems": false,
          "type": "string"
        },
        "externalLocalInstrument1Code": {
          "description": "Unique identifier code of the payment method rail as documented\ninternally to the FI. This is aligned with ISO 20022 pain.001,\ntransaction level",
          "uniqueItems": false,
          "type": "string"
        },
        "externalClearingSystemIdentification1Code": {
          "description": "Unique identifier code of the external clearing system.\nThis is aligned with ISO 20022 pacs.008 group level. It can be\nused to send the payment rail for the payment. ISO has already\nlisted codes in the fields which indicates the payment rail like\n\"ACH\" for ACH, \"ACS\" for EFT Payments, \"LVT\" for Canada LVTS,\n\"LYX\" for Lynx Canada, etc.",
          "uniqueItems": false,
          "type": "string"
        },
        "externalClearingSystemIdentification1Proprietary": {
          "description": "For few examples where the payment rail is not part of the ISO 20022 scope",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentMethodCreditAccountentity": {
      "id": "PaymentMethodCreditAccountentity",
      "description": "A payment initiation party's payment method that credits an account",
      "required": [],
      "properties": {
        "accountRegistrationId": {
          "description": "Unique identifier of the registration of the destination account to the\npayment method associated with a particular payment initiation party",
          "uniqueItems": false,
          "type": "string"
        },
        "directDeposit": {
          "description": "Direct deposit details",
          "uniqueItems": false,
          "$ref": "DirectDepositentity"
        },
        "destinationAccount": {
          "description": "Destination account details",
          "uniqueItems": false,
          "$ref": "PaymentGenericAccountentity1"
        }
      }
    },
    "PaymentMethodDebitAccountentity": {
      "id": "PaymentMethodDebitAccountentity",
      "description": "A payment initiation party's payment method that debits an account",
      "required": [],
      "properties": {
        "accountRegistrationId": {
          "description": "Unique identifier of the registration of the sending account to the\npayment method associated with a particular payment initiation party",
          "uniqueItems": false,
          "type": "string"
        },
        "sendingAccount": {
          "description": "Sending account details",
          "uniqueItems": false,
          "$ref": "PaymentGenericAccountentity2"
        }
      }
    },
    "PaymentMethodId": {
      "id": "PaymentMethodId",
      "description": "FI's unique identifier for the method of payment",
      "required": [],
      "properties": {
        "paymentMethodId": {
          "description": "Unique identifier of the payment method",
          "uniqueItems": false,
          "type": "string"
        },
        "externalLocalInstrument1Code": {
          "description": "Unique identifier code of the payment method rail as documented\ninternally to the FI. This is aligned with ISO 20022 pain.001,\ntransaction level",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentMethodSystemCode": {
      "id": "PaymentMethodSystemCode",
      "description": "Unique identifier code of the external clearing system. Aligned with ISO 20022 pacs.008 group level",
      "required": [],
      "properties": {
        "externalClearingSystemIdentification1Code": {
          "description": "Unique identifier code of the external clearing system.\nThis is aligned with ISO 20022 pacs.008 group level. It can be\nused to send the payment rail for the payment. ISO has already\nlisted codes in the fields which indicates the payment rail like\n\"ACH\" for ACH, \"ACS\" for EFT Payments, \"LVT\" for Canada LVTS,\n\"LYX\" for Lynx Canada, etc.",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentMethodSystemProprietary": {
      "id": "PaymentMethodSystemProprietary",
      "description": "Proprietary identifier of the external clearing system when the payment rail is not part of the ISO 20022 scope",
      "required": [],
      "properties": {
        "externalClearingSystemIdentification1Proprietary": {
          "description": "For few examples where the payment rail is not part of the ISO 20022 scope",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Paymentsentity": {
      "id": "Paymentsentity",
      "description": "A list of payments",
      "required": [
        "payments"
      ],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "updates": {
          "description": "Update IDs for retrieving updates since query",
          "uniqueItems": false,
          "$ref": "UpdatesMetadataentity2"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "SynchronizableArrayLinksentity2"
        },
        "payments": {
          "description": "Payments retrieved by the operation",
          "items": {
            "$ref": "Paymententity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ProprietaryAccountIdSchemeentity": {
      "id": "ProprietaryAccountIdSchemeentity",
      "description": "Proprietary account identification scheme, as per ISO 20022 v1.",
      "required": [],
      "properties": {
        "proprietaryName": {
          "description": "This property is related to the name of the identification scheme,\nin the proprietary system, as per ISO 20022 v1.",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ProprietaryFinancialInstitutionIdSchemeentity": {
      "id": "ProprietaryFinancialInstitutionIdSchemeentity",
      "description": "Proprietary financial institution identification scheme, as per ISO 20022 v1.",
      "required": [],
      "properties": {
        "name": {
          "description": "This property is related to the name of the identification scheme,\nin the proprietary system, as per ISO 20022 v1",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RecurringPaymententity": {
      "id": "RecurringPaymententity",
      "description": "A recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
      "required": [
        "frequency",
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate",
        "status"
      ],
      "properties": {
        "frequency": {
          "description": "Defines how often the payment repeats",
          "enum": [
            "WEEKLY",
            "BIWEEKLY",
            "TWICEMONTHLY",
            "MONTHLY",
            "FOURWEEKS",
            "BIMONTHLY",
            "QUARTERLY",
            "SEMIANNUALLY",
            "ANNUALLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "duration": {
          "description": "Defines how long the payment repeats for",
          "uniqueItems": false,
          "$ref": "RecurringPaymentDurationentity2"
        },
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "recurringPaymentId": {
          "description": "Uniquely identifies a recurring payment. Used within the API to reference a recurring payment",
          "uniqueItems": false,
          "type": "string"
        },
        "scheduledTimestamp": {
          "description": "When the recurring payment was scheduled",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "cancelledTimestamp": {
          "description": "When the recurring payment was cancelled",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "processedTimestamp": {
          "description": "When the last payment executed",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "failedTimestamp": {
          "description": "When the recurring payment failed",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Defines the status of the recurring payment",
          "enum": [
            "CANCELLED",
            "FAILED",
            "PROCESSED",
            "SCHEDULED"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RecurringPaymentDurationentity": {
      "id": "RecurringPaymentDurationentity",
      "description": "Describes a payment's duration",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Type of duration",
          "enum": [
            "NOEND",
            "NUMBEROFTIMES"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "numberOfTimes": {
          "description": "Maximum number of times a payment is to be sent. Required if type is set to NUMBEROFTIMES",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "RecurringPaymentforUpdateentity": {
      "id": "RecurringPaymentforUpdateentity",
      "description": "Used to create or update a recurring payment. Financial institution is free to adjust the payment date to accommodate weekends and holidays",
      "required": [
        "frequency",
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate"
      ],
      "properties": {
        "frequency": {
          "description": "Defines how often the payment repeats",
          "enum": [
            "WEEKLY",
            "BIWEEKLY",
            "TWICEMONTHLY",
            "MONTHLY",
            "FOURWEEKS",
            "BIMONTHLY",
            "QUARTERLY",
            "SEMIANNUALLY",
            "ANNUALLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "duration": {
          "description": "Defines how long the payment repeats for",
          "uniqueItems": false,
          "$ref": "RecurringPaymentDurationentity2"
        },
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "RecurringPaymentsentity": {
      "id": "RecurringPaymentsentity",
      "description": "A list of recurring payments",
      "required": [
        "recurringPayments"
      ],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "updates": {
          "description": "Update IDs for retrieving updates since query",
          "uniqueItems": false,
          "$ref": "UpdatesMetadataentity2"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "SynchronizableArrayLinksentity2"
        },
        "recurringPayments": {
          "description": "Recurring payments retrieved by the operation",
          "items": {
            "$ref": "RecurringPaymententity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SynchronizableArrayentity": {
      "id": "SynchronizableArrayentity",
      "description": "Base class for results that can be synchronized over time. A synchronizable array is also paginated",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "updates": {
          "description": "Update IDs for retrieving updates since query",
          "uniqueItems": false,
          "$ref": "UpdatesMetadataentity2"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "SynchronizableArrayLinksentity2"
        }
      }
    },
    "SynchronizableArrayLinksentity": {
      "id": "SynchronizableArrayLinksentity",
      "description": "Resource URLs for retrieving changes, next or previous datasets",
      "required": [],
      "properties": {
        "next": {
          "description": "Resource URL for retrieving next dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        },
        "prev": {
          "description": "Resource URL for retrieving previous dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        },
        "updates": {
          "description": "Resource URL for retrieving updates since last request",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "Transferentity": {
      "id": "Transferentity",
      "description": "A single transfer of money. Refer to Transfers for a list of multiple transfers.",
      "required": [],
      "properties": {
        "transferId": {
          "description": "Client generated, long-term persistent identity of the transfer action. This ID should be maintained and returned by institution",
          "uniqueItems": false,
          "type": "string"
        },
        "fromAccountId": {
          "description": "Long-term persistent identity of the source account",
          "uniqueItems": false,
          "type": "string"
        },
        "toAccountId": {
          "description": "Long-term persistent identity of the destination account",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Positive amount of money to be transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "memo": {
          "description": "User-entered reason for transfer",
          "uniqueItems": false,
          "type": "string"
        },
        "paymentDetails": {
          "description": "Payment details",
          "uniqueItems": false,
          "$ref": "PaymentDetailsentity"
        },
        "referenceId": {
          "description": "Long-term persistent identifier for transfer attempt",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "CANCELLED, FAILED, NOFUNDS, PROCESSED, PROCESSING, SCHEDULED",
          "enum": [
            "CANCELLED",
            "FAILED",
            "NOFUNDS",
            "PROCESSED",
            "PROCESSING",
            "SCHEDULED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "transferTime": {
          "description": "Date of transfer attempt",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TransferforCreateentity": {
      "id": "TransferforCreateentity",
      "description": "Used to request a transfer",
      "required": [],
      "properties": {
        "transferId": {
          "description": "Client generated, long-term persistent identity of the transfer action. This ID should be maintained and returned by institution",
          "uniqueItems": false,
          "type": "string"
        },
        "fromAccountId": {
          "description": "Long-term persistent identity of the source account",
          "uniqueItems": false,
          "type": "string"
        },
        "toAccountId": {
          "description": "Long-term persistent identity of the destination account",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Positive amount of money to be transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "memo": {
          "description": "User-entered reason for transfer",
          "uniqueItems": false,
          "type": "string"
        },
        "paymentDetails": {
          "description": "Payment details",
          "uniqueItems": false,
          "$ref": "PaymentDetailsentity"
        }
      }
    },
    "Transfersentity": {
      "id": "Transfersentity",
      "description": "A list of transfers",
      "required": [
        "transfers"
      ],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "updates": {
          "description": "Update IDs for retrieving updates since query",
          "uniqueItems": false,
          "$ref": "UpdatesMetadataentity2"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "SynchronizableArrayLinksentity2"
        },
        "transfers": {
          "description": "Transfers retrieved by the operation",
          "items": {
            "$ref": "Transferentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "UpdatesMetadataentity": {
      "id": "UpdatesMetadataentity",
      "description": "Change IDs for synchronizable result sets",
      "required": [],
      "properties": {
        "nextUpdateId": {
          "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Address": {
      "id": "Address",
      "description": "U.S. domestic address or a foreign address with country other than 'US'",
      "required": [],
      "properties": {
        "line1": {
          "description": "Address line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "line2": {
          "description": "Address line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "line3": {
          "description": "Address line 3",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "City",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Branchentity1": {
      "id": "Branchentity1",
      "description": "Branch details associated with this account",
      "required": [],
      "properties": {
        "branchId": {
          "description": "Branch number",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the branch",
          "uniqueItems": false,
          "type": "string"
        },
        "locations": {
          "description": "Location of the branch",
          "items": {
            "$ref": "PaymentDeliveryAddressentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "financialInstitution": {
          "description": "Financial institution associated with the branch",
          "uniqueItems": false,
          "$ref": "FinancialInstitutionentity2"
        }
      }
    },
    "DeliveryAddress1": {
      "id": "DeliveryAddress1",
      "description": "Address of the merchant used to execute the payment",
      "required": [],
      "properties": {
        "line1": {
          "description": "Address line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "line2": {
          "description": "Address line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "line3": {
          "description": "Address line 3",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "City",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Type of address location. One of BUSINESS, DELIVERY, HOME, MAILING",
          "enum": [
            "BUSINESS",
            "DELIVERY",
            "HOME",
            "MAILING"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FinancialInstitutionentity2": {
      "id": "FinancialInstitutionentity2",
      "description": "Financial institution associated with the branch",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of the financial institution",
          "uniqueItems": false,
          "type": "string"
        },
        "fiId": {
          "description": "Financial institution identifier",
          "uniqueItems": false,
          "type": "object"
        },
        "locations": {
          "description": "Location of the financial institution",
          "items": {
            "$ref": "PaymentDeliveryAddressentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Individualname": {
      "id": "Individualname",
      "description": "First name, middle initial, last name, suffix fields",
      "required": [],
      "properties": {
        "first": {
          "description": "First name",
          "uniqueItems": false,
          "type": "string"
        },
        "middle": {
          "description": "Middle initial",
          "uniqueItems": false,
          "type": "string"
        },
        "last": {
          "description": "Last name",
          "uniqueItems": false,
          "type": "string"
        },
        "suffix": {
          "description": "Generational or academic suffix",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Merchantentity1": {
      "id": "Merchantentity1",
      "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated",
      "required": [
        "status"
      ],
      "properties": {
        "displayName": {
          "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "CustomerNameentity"
        },
        "address": {
          "description": "Address of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "DeliveryAddress1"
        },
        "phone": {
          "description": "Phone number of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "TelephoneNumber"
        },
        "merchantAccountIds": {
          "description": "Account identifier(s) the customer has with the merchant",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "payeeId": {
          "description": "Persistent unique identifier for a merchant payee",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Defines the Merchant's lifecycle",
          "enum": [
            "ACTIVE",
            "DELETED",
            "PENDING",
            "REJECTED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "expiresTimestamp": {
          "description": "Describes when the entity will be automatically deleted. The entity will not go into the \"DELETED\" state. If this value is null or not provided, the entity will not expire automatically",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MerchantForUpdateentity1": {
      "id": "MerchantForUpdateentity1",
      "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated",
      "required": [],
      "properties": {
        "displayName": {
          "description": "User defined name for the merchant. Used by the customer to identify the merchant. Not used by the system to process payments",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "CustomerNameentity"
        },
        "address": {
          "description": "Address of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "DeliveryAddress1"
        },
        "phone": {
          "description": "Phone number of the merchant used to execute the payment",
          "uniqueItems": false,
          "$ref": "TelephoneNumber"
        },
        "merchantAccountIds": {
          "description": "Account identifier(s) the customer has with the merchant",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PayeeForUpdateentity1": {
      "id": "PayeeForUpdateentity1",
      "description": "The data of the Payee to be updated",
      "required": [
        "merchant"
      ],
      "properties": {
        "merchant": {
          "description": "When payee is a merchant, typically a business from which goods or services are rendered, this field will be populated",
          "uniqueItems": false,
          "$ref": "MerchantForUpdateentity1"
        }
      }
    },
    "PaymentForUpdateentity1": {
      "id": "PaymentForUpdateentity1",
      "description": "The data of the Payment to be scheduled",
      "required": [
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate"
      ],
      "properties": {
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "PaymentForUpdateentity2": {
      "id": "PaymentForUpdateentity2",
      "description": "The data of the Payment to be updated",
      "required": [
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate"
      ],
      "properties": {
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "PaymentGenericAccountentity1": {
      "id": "PaymentGenericAccountentity1",
      "description": "Destination account details",
      "required": [],
      "properties": {
        "accountNumber": {
          "description": "Unique identifier of the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountType": {
          "description": "Account type",
          "enum": [
            "401A",
            "401K",
            "403B",
            "529",
            "ANNUITY",
            "AUTOLOAN",
            "BROKERAGEPRODUCT",
            "CD",
            "CHARGE",
            "CHECKING",
            "COMMERCIALDEPOSIT",
            "COMMERCIALINVESTMENT",
            "COMMERCIALLINEOFCREDIT",
            "COMMERCIALLOAN",
            "COVERDELL",
            "CREDITCARD",
            "DEFERREDPROFITSHARINGPLAN",
            "DEFINEDBENEFIT",
            "DIGITALASSET",
            "DIGITALWALLET",
            "ESCROW",
            "ESOP",
            "FIXEDANNUITY",
            "GUARDIAN",
            "HOMEEQUITYLOAN",
            "HOMELINEOFCREDIT",
            "INDIVIDUALPENSIONPLAN",
            "INSTALLMENT",
            "INSTITUTIONALTRUST",
            "INVESTMENTACCOUNT",
            "IRA",
            "KEOGH",
            "LIFEINCOMEFUND",
            "LINEOFCREDIT",
            "LOAN",
            "LOCKEDINRETIREMENTACCOUNT",
            "LOCKEDINRETIREMENTINCOMEFUND",
            "LOCKEDINRETIREMENTSAVINGSPLAN",
            "LONGTERMDISABILITY",
            "MILITARYLOAN",
            "MONEYMARKET",
            "MORTGAGE",
            "NONQUALIFIEDPLAN",
            "OTHERDEPOSIT",
            "OTHERINVESTMENT",
            "PERSONALLOAN",
            "POOLEDREGISTEREDPENSIONPLAN",
            "PREPAID",
            "PRESCRIBEDREGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDDISABILITYSAVINGSPLAN",
            "REGISTEREDEDUCATIONSAVINGSPLAN",
            "REGISTEREDPENSIONPLAN",
            "REGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDRETIREMENTSAVINGSPLAN",
            "RESTRICTEDLIFEINCOMEFUND",
            "RESTRICTEDLOCKEDINSAVINGSPLAN",
            "ROLLOVER",
            "ROTH",
            "SARSEP",
            "SAVINGS",
            "SHORTTERMDISABILITY",
            "SMBLOAN",
            "SPECIFIEDPENSIONPLAN",
            "STUDENTLOAN",
            "TAXABLE",
            "TAXFREESAVINGSACCOUNT",
            "TDA",
            "TERM",
            "TRUST",
            "UGMA",
            "UNIVERSALLIFE",
            "UTMA",
            "VARIABLEANNUITY",
            "WHOLELIFE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Account name",
          "uniqueItems": false,
          "type": "string"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Identifier of the payment generic account",
          "uniqueItems": false,
          "type": "object"
        },
        "branch": {
          "description": "Branch details associated with this account",
          "uniqueItems": false,
          "$ref": "Branchentity1"
        }
      }
    },
    "PaymentGenericAccountentity2": {
      "id": "PaymentGenericAccountentity2",
      "description": "Sending account details",
      "required": [],
      "properties": {
        "accountNumber": {
          "description": "Unique identifier of the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountType": {
          "description": "Account type",
          "enum": [
            "401A",
            "401K",
            "403B",
            "529",
            "ANNUITY",
            "AUTOLOAN",
            "BROKERAGEPRODUCT",
            "CD",
            "CHARGE",
            "CHECKING",
            "COMMERCIALDEPOSIT",
            "COMMERCIALINVESTMENT",
            "COMMERCIALLINEOFCREDIT",
            "COMMERCIALLOAN",
            "COVERDELL",
            "CREDITCARD",
            "DEFERREDPROFITSHARINGPLAN",
            "DEFINEDBENEFIT",
            "DIGITALASSET",
            "DIGITALWALLET",
            "ESCROW",
            "ESOP",
            "FIXEDANNUITY",
            "GUARDIAN",
            "HOMEEQUITYLOAN",
            "HOMELINEOFCREDIT",
            "INDIVIDUALPENSIONPLAN",
            "INSTALLMENT",
            "INSTITUTIONALTRUST",
            "INVESTMENTACCOUNT",
            "IRA",
            "KEOGH",
            "LIFEINCOMEFUND",
            "LINEOFCREDIT",
            "LOAN",
            "LOCKEDINRETIREMENTACCOUNT",
            "LOCKEDINRETIREMENTINCOMEFUND",
            "LOCKEDINRETIREMENTSAVINGSPLAN",
            "LONGTERMDISABILITY",
            "MILITARYLOAN",
            "MONEYMARKET",
            "MORTGAGE",
            "NONQUALIFIEDPLAN",
            "OTHERDEPOSIT",
            "OTHERINVESTMENT",
            "PERSONALLOAN",
            "POOLEDREGISTEREDPENSIONPLAN",
            "PREPAID",
            "PRESCRIBEDREGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDDISABILITYSAVINGSPLAN",
            "REGISTEREDEDUCATIONSAVINGSPLAN",
            "REGISTEREDPENSIONPLAN",
            "REGISTEREDRETIREMENTINCOMEFUND",
            "REGISTEREDRETIREMENTSAVINGSPLAN",
            "RESTRICTEDLIFEINCOMEFUND",
            "RESTRICTEDLOCKEDINSAVINGSPLAN",
            "ROLLOVER",
            "ROTH",
            "SARSEP",
            "SAVINGS",
            "SHORTTERMDISABILITY",
            "SMBLOAN",
            "SPECIFIEDPENSIONPLAN",
            "STUDENTLOAN",
            "TAXABLE",
            "TAXFREESAVINGSACCOUNT",
            "TDA",
            "TERM",
            "TRUST",
            "UGMA",
            "UNIVERSALLIFE",
            "UTMA",
            "VARIABLEANNUITY",
            "WHOLELIFE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Account name",
          "uniqueItems": false,
          "type": "string"
        },
        "currencyCode": {
          "description": "ISO 4217 currency code",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Identifier of the payment generic account",
          "uniqueItems": false,
          "type": "object"
        },
        "branch": {
          "description": "Branch details associated with this account",
          "uniqueItems": false,
          "$ref": "Branchentity1"
        }
      }
    },
    "PaymentInitiationPartyNameentity1": {
      "id": "PaymentInitiationPartyNameentity1",
      "description": "Name entity associated with the payment initiation party",
      "required": [],
      "properties": {
        "aliasName": {
          "description": "Alias name",
          "uniqueItems": false,
          "type": "string"
        },
        "detail": {
          "description": "Details of the name",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "PaymentInitiationPartyNameentity3": {
      "id": "PaymentInitiationPartyNameentity3",
      "description": "Details of the name",
      "required": [],
      "properties": {
        "aliasName": {
          "description": "Alias name",
          "uniqueItems": false,
          "type": "string"
        },
        "detail": {
          "description": "Details of the name",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "PaymentMethodentity2": {
      "id": "PaymentMethodentity2",
      "description": "Payment method details",
      "required": [],
      "properties": {
        "paymentMethodId": {
          "description": "Unique identifier of the payment method",
          "uniqueItems": false,
          "type": "string"
        },
        "externalLocalInstrument1Code": {
          "description": "Unique identifier code of the payment method rail as documented\ninternally to the FI. This is aligned with ISO 20022 pain.001,\ntransaction level",
          "uniqueItems": false,
          "type": "string"
        },
        "externalClearingSystemIdentification1Code": {
          "description": "Unique identifier code of the external clearing system.\nThis is aligned with ISO 20022 pacs.008 group level. It can be\nused to send the payment rail for the payment. ISO has already\nlisted codes in the fields which indicates the payment rail like\n\"ACH\" for ACH, \"ACS\" for EFT Payments, \"LVT\" for Canada LVTS,\n\"LYX\" for Lynx Canada, etc.",
          "uniqueItems": false,
          "type": "string"
        },
        "externalClearingSystemIdentification1Proprietary": {
          "description": "For few examples where the payment rail is not part of the ISO 20022 scope",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RecurringPaymentDurationentity2": {
      "id": "RecurringPaymentDurationentity2",
      "description": "Defines how long the payment repeats for",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Type of duration",
          "enum": [
            "NOEND",
            "NUMBEROFTIMES"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "numberOfTimes": {
          "description": "Maximum number of times a payment is to be sent. Required if type is set to NUMBEROFTIMES",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "RecurringPaymentforUpdateentity1": {
      "id": "RecurringPaymentforUpdateentity1",
      "description": "The data of the Recurring Payment to be scheduled",
      "required": [
        "frequency",
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate"
      ],
      "properties": {
        "frequency": {
          "description": "Defines how often the payment repeats",
          "enum": [
            "WEEKLY",
            "BIWEEKLY",
            "TWICEMONTHLY",
            "MONTHLY",
            "FOURWEEKS",
            "BIMONTHLY",
            "QUARTERLY",
            "SEMIANNUALLY",
            "ANNUALLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "duration": {
          "description": "Defines how long the payment repeats for",
          "uniqueItems": false,
          "$ref": "RecurringPaymentDurationentity2"
        },
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "RecurringPaymentforUpdateentity2": {
      "id": "RecurringPaymentforUpdateentity2",
      "description": "The data of the Recurring Payment to be updated",
      "required": [
        "frequency",
        "fromAccountId",
        "toPayeeId",
        "amount",
        "dueDate"
      ],
      "properties": {
        "frequency": {
          "description": "Defines how often the payment repeats",
          "enum": [
            "WEEKLY",
            "BIWEEKLY",
            "TWICEMONTHLY",
            "MONTHLY",
            "FOURWEEKS",
            "BIMONTHLY",
            "QUARTERLY",
            "SEMIANNUALLY",
            "ANNUALLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "duration": {
          "description": "Defines how long the payment repeats for",
          "uniqueItems": false,
          "$ref": "RecurringPaymentDurationentity2"
        },
        "fromAccountId": {
          "description": "ID of the account used to source funds for payment",
          "uniqueItems": false,
          "type": "string"
        },
        "toPayeeId": {
          "description": "ID of the payee to receive funds for the payment",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount for the payment. Must be positive",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantAccountId": {
          "description": "User's account identifier with the merchant",
          "uniqueItems": false,
          "type": "string"
        },
        "dueDate": {
          "description": "Date that the funds are scheduled to be delivered",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "SynchronizableArrayLinksentity2": {
      "id": "SynchronizableArrayLinksentity2",
      "description": "Resource URLs for navigating result sets",
      "required": [],
      "properties": {
        "next": {
          "description": "Resource URL for retrieving next dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        },
        "prev": {
          "description": "Resource URL for retrieving previous dataset",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        },
        "updates": {
          "description": "Resource URL for retrieving updates since last request",
          "uniqueItems": false,
          "$ref": "HATEOASLink"
        }
      }
    },
    "TransferforCreateentity1": {
      "id": "TransferforCreateentity1",
      "description": "Data of the transfer request",
      "required": [],
      "properties": {
        "transferId": {
          "description": "Client generated, long-term persistent identity of the transfer action. This ID should be maintained and returned by institution",
          "uniqueItems": false,
          "type": "string"
        },
        "fromAccountId": {
          "description": "Long-term persistent identity of the source account",
          "uniqueItems": false,
          "type": "string"
        },
        "toAccountId": {
          "description": "Long-term persistent identity of the destination account",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Positive amount of money to be transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "memo": {
          "description": "User-entered reason for transfer",
          "uniqueItems": false,
          "type": "string"
        },
        "paymentDetails": {
          "description": "Payment details",
          "uniqueItems": false,
          "$ref": "PaymentDetailsentity"
        }
      }
    },
    "UpdatesMetadataentity2": {
      "id": "UpdatesMetadataentity2",
      "description": "Update IDs for retrieving updates since query",
      "required": [],
      "properties": {
        "nextUpdateId": {
          "description": "Opaque identifier. Does not need to be numeric or have any specific pattern. Implementation specific",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BasePayrollRate": {
      "id": "BasePayrollRate",
      "description": "Provides a person's base pay rate",
      "required": [
        "rate",
        "rateType"
      ],
      "properties": {
        "rate": {
          "description": "The amount and currency of the base pay rate of employee",
          "uniqueItems": false,
          "$ref": "MonetaryAmount"
        },
        "rateType": {
          "description": "Whether the worker's rate is ANNUAL, DAILY, HOURLY, OTHER",
          "enum": [
            "ANNUAL",
            "DAILY",
            "HOURLY",
            "OTHER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Employeeentity": {
      "id": "Employeeentity",
      "description": "Represents an employee",
      "required": [
        "name"
      ],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateOfBirth": {
          "description": "The person's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "taxId": {
          "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)",
          "uniqueItems": false,
          "type": "string"
        },
        "taxIdCountry": {
          "description": "Country originating the Customer's taxId element",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "governmentId": {
          "description": "A federal (such as passport) or state (such as driver's license) issued identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "employeeId": {
          "description": "Provider's long-term persistent id for the employee",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Employee's full name",
          "uniqueItems": false,
          "$ref": "Individualname"
        }
      }
    },
    "Employerentity": {
      "id": "Employerentity",
      "description": "Represents an employer",
      "required": [
        "name"
      ],
      "properties": {
        "employerId": {
          "description": "Provider's long-term persistent id for the employer",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The employer's name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "dbas": {
          "description": "Array of Doing Business As names for this employer",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "taxId": {
          "description": "Country specific Tax Id associated with this employer (FEIN in USA or BN in Canada)",
          "uniqueItems": false,
          "type": "string"
        },
        "taxIdCountry": {
          "description": "Country originating the employer's taxId element",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "contacts": {
          "description": "Employer's various contact information",
          "uniqueItems": false,
          "$ref": "Contactsentity"
        }
      }
    },
    "Employment": {
      "id": "Employment",
      "description": "Provides a person's employment details",
      "required": [
        "employer",
        "status"
      ],
      "properties": {
        "employer": {
          "description": "The employer for the job/position",
          "uniqueItems": false,
          "$ref": "Employerentity1"
        },
        "jobTitle": {
          "description": "The title of the job/position",
          "uniqueItems": false,
          "type": "string"
        },
        "originalHireDate": {
          "description": "The date when employee joined for the first time.",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "mostRecentHireDate": {
          "description": "The date when employee re-joined most recently.",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The employment end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "The employee's employment status, ACTIVE or INACTIVE",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "supplementalStatus": {
          "description": "Supplemental detail of employee's employment status",
          "enum": [
            "FURLOUGHED",
            "LEAVE",
            "MEDICAL_LEAVE",
            "MILITARY_LEAVE",
            "PATERNITY_LEAVE",
            "QUIT",
            "RETIRED",
            "TERMINATED",
            "VACATION"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "The employee's employment type, CONTRACTED, FULL-TIME, OTHER, PART-TIME, SEASONAL, TEMPORARY",
          "enum": [
            "CONTRACTED",
            "FULL_TIME",
            "OTHER",
            "PART_TIME",
            "SEASONAL",
            "TEMPORARY"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentAmounts": {
      "id": "PaymentAmounts",
      "description": "Year to date amounts for current and previous years",
      "required": [
        "total"
      ],
      "properties": {
        "total": {
          "description": "Total gross pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount1"
        },
        "base": {
          "description": "Base pay part of Gross pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount2"
        },
        "bonus": {
          "description": "Bonus pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount3"
        },
        "commission": {
          "description": "Commission for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount4"
        },
        "overtime": {
          "description": "Overtime pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount5"
        },
        "otherEarnings": {
          "description": "Other earnings received in covered period",
          "items": {
            "$ref": "OtherMonetaryAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Income": {
      "id": "Income",
      "description": "Provides a person's employment income details. Applicable only for VOIE (Verification of Income and Employment) data retrieval",
      "required": [
        "payrollFrequency"
      ],
      "properties": {
        "baseRate": {
          "description": "The employee's base payroll rate",
          "uniqueItems": false,
          "$ref": "BasePayrollRate1"
        },
        "payrollFrequency": {
          "description": "The frequency of payments",
          "enum": [
            "ANNUALLY",
            "BI_WEEKLY",
            "DAILY",
            "EVERY_2_6_WEEKS",
            "EVERY_4_WEEKS",
            "EVERY_5_2_WEEKS",
            "MONTHLY",
            "QUARTERLY",
            "SEMI_ANNUALLY",
            "SEMI_MONTHLY",
            "WEEKLY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "latestPayDate": {
          "description": "The date of employee's most recent pay",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "latestPayPeriodEndDate": {
          "description": "The end date of employee's most recent pay period",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "annualPay": {
          "description": "Year-to-date pay for current year and total annual pay for previous years",
          "uniqueItems": false,
          "$ref": "PaymentAmounts1"
        }
      }
    },
    "OtherMonetaryAmount": {
      "id": "OtherMonetaryAmount",
      "description": "A monetary amount with its source name and its currency code",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The source name of this monetary amount",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentAmounts3": {
      "id": "PaymentAmounts3",
      "description": "Year to date amounts for current and previous years",
      "required": [
        "year",
        "grossPay"
      ],
      "properties": {
        "year": {
          "description": "The year in which this income was earned",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "grossPay": {
          "description": "Gross pay for covered period",
          "uniqueItems": false,
          "$ref": "PaymentAmounts2"
        },
        "netPay": {
          "description": "Net pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount6"
        }
      }
    },
    "PayrollReportentity": {
      "id": "PayrollReportentity",
      "description": "An employee's Payroll Report",
      "required": [
        "reportId",
        "reportType",
        "generationDate",
        "employee",
        "employment"
      ],
      "properties": {
        "reportId": {
          "description": "The report identification number",
          "uniqueItems": false,
          "type": "string"
        },
        "reportType": {
          "description": "The type of report",
          "enum": [
            "VOE",
            "VOIE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "generationDate": {
          "description": "The generation date of the report",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dataAsOf": {
          "description": "The data in the report is as of this date.",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "employee": {
          "description": "The employee",
          "uniqueItems": false,
          "$ref": "Employeeentity1"
        },
        "employment": {
          "description": "The employee's employment",
          "uniqueItems": false,
          "$ref": "Employment1"
        },
        "incomes": {
          "description": "The employee's year to date income amounts for current and previous years omitted for Verification of Employment requests (VOE), included for Verification of Income and Employment requests (VOI / VOIE)",
          "items": {
            "$ref": "Income"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "links": {
          "description": "Links to retrieve this payroll report, or to invoke related APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PayrollReportListentity": {
      "id": "PayrollReportListentity",
      "description": "Response object for /payroll/report API with list of reports available",
      "required": [],
      "properties": {
        "summaries": {
          "description": "Zero or more PayrollReportSummaries for lightweight response",
          "items": {
            "$ref": "PayrollReportSummaryentity"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "reports": {
          "description": "Zero or more PayrollReports, for details response",
          "items": {
            "$ref": "PayrollReportentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PayrollReportSummaryentity": {
      "id": "PayrollReportSummaryentity",
      "description": "The list of payroll reports for an employee",
      "required": [
        "reportId",
        "reportType",
        "generationDate",
        "employeeName",
        "employerName"
      ],
      "properties": {
        "reportId": {
          "description": "The report identification number",
          "uniqueItems": false,
          "type": "string"
        },
        "reportType": {
          "description": "The type of report",
          "enum": [
            "VOE",
            "VOIE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "generationDate": {
          "description": "The generation date of the report",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dataAsOf": {
          "description": "The data in the report is as of this date.",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "employeeId": {
          "description": "Provider's long-term persistent id for the employee",
          "uniqueItems": false,
          "type": "string"
        },
        "employeeName": {
          "description": "Employee's full name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "employerId": {
          "description": "The employer for this report",
          "uniqueItems": false,
          "type": "string"
        },
        "employerName": {
          "description": "The employer's name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "links": {
          "description": "Links to retrieve this payroll report, or to invoke related APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "BasePayrollRate1": {
      "id": "BasePayrollRate1",
      "description": "The employee's base payroll rate",
      "required": [
        "rate",
        "rateType"
      ],
      "properties": {
        "rate": {
          "description": "The amount and currency of the base pay rate of employee",
          "uniqueItems": false,
          "$ref": "MonetaryAmount"
        },
        "rateType": {
          "description": "Whether the worker's rate is ANNUAL, DAILY, HOURLY, OTHER",
          "enum": [
            "ANNUAL",
            "DAILY",
            "HOURLY",
            "OTHER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Businessname": {
      "id": "Businessname",
      "description": "The employer's name",
      "required": [],
      "properties": {
        "name1": {
          "description": "Name line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "name2": {
          "description": "Name line 2",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Contactsentity": {
      "id": "Contactsentity",
      "description": "Employer's various contact information",
      "required": [],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Employeeentity1": {
      "id": "Employeeentity1",
      "description": "The employee",
      "required": [
        "name"
      ],
      "properties": {
        "emails": {
          "description": "Array of the contact email addresses",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "addresses": {
          "description": "Array of the contact physical addresses",
          "items": {
            "$ref": "DeliveryAddress"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "telephones": {
          "description": "Array of the contact telephone numbers",
          "items": {
            "$ref": "TelephoneNumber"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateOfBirth": {
          "description": "The person's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "taxId": {
          "description": "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)",
          "uniqueItems": false,
          "type": "string"
        },
        "taxIdCountry": {
          "description": "Country originating the Customer's taxId element",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "governmentId": {
          "description": "A federal (such as passport) or state (such as driver's license) issued identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "employeeId": {
          "description": "Provider's long-term persistent id for the employee",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Employee's full name",
          "uniqueItems": false,
          "$ref": "Individualname"
        }
      }
    },
    "Employerentity1": {
      "id": "Employerentity1",
      "description": "The employer for the job/position",
      "required": [
        "name"
      ],
      "properties": {
        "employerId": {
          "description": "Provider's long-term persistent id for the employer",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The employer's name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "dbas": {
          "description": "Array of Doing Business As names for this employer",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "taxId": {
          "description": "Country specific Tax Id associated with this employer (FEIN in USA or BN in Canada)",
          "uniqueItems": false,
          "type": "string"
        },
        "taxIdCountry": {
          "description": "Country originating the employer's taxId element",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "contacts": {
          "description": "Employer's various contact information",
          "uniqueItems": false,
          "$ref": "Contactsentity"
        }
      }
    },
    "Employment1": {
      "id": "Employment1",
      "description": "The employee's employment",
      "required": [
        "employer",
        "status"
      ],
      "properties": {
        "employer": {
          "description": "The employer for the job/position",
          "uniqueItems": false,
          "$ref": "Employerentity1"
        },
        "jobTitle": {
          "description": "The title of the job/position",
          "uniqueItems": false,
          "type": "string"
        },
        "originalHireDate": {
          "description": "The date when employee joined for the first time.",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "mostRecentHireDate": {
          "description": "The date when employee re-joined most recently.",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The employment end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "The employee's employment status, ACTIVE or INACTIVE",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "supplementalStatus": {
          "description": "Supplemental detail of employee's employment status",
          "enum": [
            "FURLOUGHED",
            "LEAVE",
            "MEDICAL_LEAVE",
            "MILITARY_LEAVE",
            "PATERNITY_LEAVE",
            "QUIT",
            "RETIRED",
            "TERMINATED",
            "VACATION"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "The employee's employment type, CONTRACTED, FULL-TIME, OTHER, PART-TIME, SEASONAL, TEMPORARY",
          "enum": [
            "CONTRACTED",
            "FULL_TIME",
            "OTHER",
            "PART_TIME",
            "SEASONAL",
            "TEMPORARY"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount": {
      "id": "MonetaryAmount",
      "description": "The amount and currency of the base pay rate of employee",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount1": {
      "id": "MonetaryAmount1",
      "description": "Total gross pay for covered period",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount2": {
      "id": "MonetaryAmount2",
      "description": "Base pay part of Gross pay for covered period",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount3": {
      "id": "MonetaryAmount3",
      "description": "Bonus pay for covered period",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount4": {
      "id": "MonetaryAmount4",
      "description": "Commission for covered period",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount5": {
      "id": "MonetaryAmount5",
      "description": "Overtime pay for covered period",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MonetaryAmount6": {
      "id": "MonetaryAmount6",
      "description": "Net pay for covered period",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The monetary amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currency": {
          "description": "Currency code of the monetary amount",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XSU",
            "XTS",
            "XUA",
            "XXX",
            "YER",
            "ZAR",
            "ZMW",
            "ZWG",
            "ZWL"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PaymentAmounts1": {
      "id": "PaymentAmounts1",
      "description": "Year-to-date pay for current year and total annual pay for previous years",
      "required": [
        "year",
        "grossPay"
      ],
      "properties": {
        "year": {
          "description": "The year in which this income was earned",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "grossPay": {
          "description": "Gross pay for covered period",
          "uniqueItems": false,
          "$ref": "PaymentAmounts2"
        },
        "netPay": {
          "description": "Net pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount6"
        }
      }
    },
    "PaymentAmounts2": {
      "id": "PaymentAmounts2",
      "description": "Gross pay for covered period",
      "required": [
        "total"
      ],
      "properties": {
        "total": {
          "description": "Total gross pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount1"
        },
        "base": {
          "description": "Base pay part of Gross pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount2"
        },
        "bonus": {
          "description": "Bonus pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount3"
        },
        "commission": {
          "description": "Commission for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount4"
        },
        "overtime": {
          "description": "Overtime pay for covered period",
          "uniqueItems": false,
          "$ref": "MonetaryAmount5"
        },
        "otherEarnings": {
          "description": "Other earnings received in covered period",
          "items": {
            "$ref": "OtherMonetaryAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RecipientProvider": {
      "id": "RecipientProvider",
      "description": "Record of Recipient at the Provider. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)",
      "required": [
        "client_name",
        "redirect_uris",
        "client_id",
        "grant_types",
        "token_endpoint_auth_method",
        "status"
      ],
      "properties": {
        "client_name": {
          "description": "The Data Recipient or Data Recipient Application name displayed by Data Provider during the consent Flow as well as in the Consent Dashboard",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "A short description of the Data Recipient application",
          "uniqueItems": false,
          "type": "string"
        },
        "redirect_uris": {
          "description": "An array of eligible Redirect URI targets",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "logo_uri": {
          "description": "Data Recipient Logo URL location",
          "uniqueItems": false,
          "type": "string"
        },
        "client_uri": {
          "description": "The URI which provides additional information about the Data Recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "contacts": {
          "description": "Array of strings representing ways to contact individuals responsible for the Data Recipient application",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scope": {
          "description": "String form field with a list of data clusters",
          "uniqueItems": false,
          "type": "string"
        },
        "duration_type": {
          "description": "The duration of consent for the Data Recipient consumers",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "duration_period": {
          "description": "The maximum consent duration in days for duration_type TIME_BOUND for the Data Recipient, effective from the date of consent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "lookback_period": {
          "description": "The maximum number of days allowed for Data Recipient to obtain in transaction history, effective from the current date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "registry_references": {
          "description": "An array of external registries containing registered entity name, registered entity id and registry fields for the registries where the data recipient is registered",
          "items": {
            "$ref": "RegistryReference"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "intermediaries": {
          "description": "An array of the intermediaries for this data recipient",
          "items": {
            "$ref": "Intermediary"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "client_id": {
          "description": "OAuth 2.0 client identifier.  Unique ID representing Data Recipient and Identity Chain combination",
          "uniqueItems": false,
          "type": "string"
        },
        "client_secret": {
          "description": "OAuth 2.0 client secret string",
          "uniqueItems": false,
          "type": "string"
        },
        "grant_types": {
          "description": "Array of OAuth 2.0 grants made available to the Data Recipient",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "token_endpoint_auth_method": {
          "description": "Requested Authentication method for Authorization Server",
          "uniqueItems": false,
          "type": "string"
        },
        "registration_client_uri": {
          "description": "Fully qualified URI for subsequent DCR calls (GET, PUT, DELETE) for managing the Data Recipient registration",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of FDX OAuth 2.0 extension",
          "uniqueItems": false,
          "type": "string"
        },
        "registration_access_token": {
          "description": "String containing a unique DCR access token to be used in subsequent operations to manage the Data Recipient",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Intermediary": {
      "id": "Intermediary",
      "description": "Data Access Platform, Service Provider, or any other entity in the data sharing chain between a Data Provider to a Data Recipient. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of intermediary party",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "A short description of the intermediary",
          "uniqueItems": false,
          "type": "string"
        },
        "uri": {
          "description": "A URL string of a web page providing information about the intermediary",
          "uniqueItems": false,
          "type": "string"
        },
        "logo_uri": {
          "description": "A URL string that references a logo for this intermediary",
          "uniqueItems": false,
          "type": "string"
        },
        "contacts": {
          "description": "Array of strings representing ways to contact people responsible for this intermediary",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "registry_references": {
          "description": "Registry references for this intermediary",
          "items": {
            "$ref": "RegistryReference"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RecipientRequest": {
      "id": "RecipientRequest",
      "description": "Used to request a recipient registration. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)",
      "required": [
        "client_name",
        "redirect_uris"
      ],
      "properties": {
        "client_name": {
          "description": "The Data Recipient or Data Recipient Application name displayed by Data Provider during the consent Flow as well as in the Consent Dashboard",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "A short description of the Data Recipient application",
          "uniqueItems": false,
          "type": "string"
        },
        "redirect_uris": {
          "description": "An array of eligible Redirect URI targets",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "logo_uri": {
          "description": "Data Recipient Logo URL location",
          "uniqueItems": false,
          "type": "string"
        },
        "client_uri": {
          "description": "The URI which provides additional information about the Data Recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "contacts": {
          "description": "Array of strings representing ways to contact individuals responsible for the Data Recipient application",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scope": {
          "description": "String form field with a list of data clusters",
          "uniqueItems": false,
          "type": "string"
        },
        "duration_type": {
          "description": "The duration of consent for the Data Recipient consumers",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "duration_period": {
          "description": "The maximum consent duration in days for duration_type TIME_BOUND for the Data Recipient, effective from the date of consent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "lookback_period": {
          "description": "The maximum number of days allowed for Data Recipient to obtain in transaction history, effective from the current date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "registry_references": {
          "description": "An array of external registries containing registered entity name, registered entity id and registry fields for the registries where the data recipient is registered",
          "items": {
            "$ref": "RegistryReference"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "intermediaries": {
          "description": "An array of the intermediaries for this data recipient",
          "items": {
            "$ref": "Intermediary"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RegistryReference": {
      "id": "RegistryReference",
      "description": "Used for registry references. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/)",
      "required": [],
      "properties": {
        "registered_entity_name": {
          "description": "The legal company name for the intermediary",
          "uniqueItems": false,
          "type": "string"
        },
        "registered_entity_id": {
          "description": "An ID representing the intermediary that can be looked up from a legal identity registry source",
          "uniqueItems": false,
          "type": "string"
        },
        "registry": {
          "description": "The Registry source",
          "enum": [
            "FDX",
            "GLEIF",
            "ICANN",
            "PRIVATE"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Recipientrecordatecosystemregistry": {
      "id": "Recipientrecordatecosystemregistry",
      "description": "Record of Recipient at the Ecosystem Registry. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/).",
      "required": [
        "client_name",
        "redirect_uris",
        "recipient_id"
      ],
      "properties": {
        "client_name": {
          "description": "The Data Recipient or Data Recipient Application name displayed by Data Provider during the consent Flow as well as in the Consent Dashboard",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "A short description of the Data Recipient application",
          "uniqueItems": false,
          "type": "string"
        },
        "redirect_uris": {
          "description": "An array of eligible Redirect URI targets",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "logo_uri": {
          "description": "Data Recipient Logo URL location",
          "uniqueItems": false,
          "type": "string"
        },
        "client_uri": {
          "description": "The URI which provides additional information about the Data Recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "contacts": {
          "description": "Array of strings representing ways to contact individuals responsible for the Data Recipient application",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scope": {
          "description": "String form field with a list of data clusters",
          "uniqueItems": false,
          "type": "string"
        },
        "duration_type": {
          "description": "The duration of consent for the Data Recipient consumers",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "duration_period": {
          "description": "The maximum consent duration in days for duration_type TIME_BOUND for the Data Recipient, effective from the date of consent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "lookback_period": {
          "description": "The maximum number of days allowed for Data Recipient to obtain in transaction history, effective from the current date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "registry_references": {
          "description": "An array of external registries containing registered entity name, registered entity id and registry fields for the registries where the data recipient is registered",
          "items": {
            "$ref": "RegistryReference"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "intermediaries": {
          "description": "An array of the intermediaries for this data recipient",
          "items": {
            "$ref": "Intermediary"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "recipient_id": {
          "description": "Recipient Id at ecosystem registry",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Recipientrecordsatecosystemregistry": {
      "id": "Recipientrecordsatecosystemregistry",
      "description": "Recipient records at Ecosystem Registry. Properties in this structure use 'snake_case' names to match the properties in [IETF RFC 7591](https://datatracker.ietf.org/doc/rfc7591/).",
      "required": [
        "recipients"
      ],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "recipients": {
          "description": "Recipients retrieved by the operation",
          "items": {
            "$ref": "Recipientrecordatecosystemregistry"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "BasicAuthCredentials": {
      "id": "BasicAuthCredentials",
      "description": "Tax form credentials container for QR Code purposes",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Confidential and unique identifier of the tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "passcode": {
          "description": "Unique, randomized and restricted password for this document",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BasicAuthforQR": {
      "id": "BasicAuthforQR",
      "description": "Tax form credentials container for QR Code purposes",
      "required": [],
      "properties": {
        "basicAuth": {
          "description": "The Basic Authentication credentials to retrieve a tax form",
          "uniqueItems": false,
          "$ref": "BasicAuthCredentials1"
        },
        "version": {
          "description": "[Financial Data Exchange (FDX)](https://financialdataexchange.org/) schema version number (e.g. \"V5.0\").",
          "enum": [
            "V1.0",
            "V2.0",
            "V2.1",
            "V3.0",
            "V4.0",
            "V4.1",
            "V4.2",
            "V4.5",
            "V4.6",
            "V4.6.1",
            "V4.6.2",
            "V5.0",
            "V5.0.0",
            "V5.0.1",
            "V5.0.2",
            "V5.0.3",
            "V5.1",
            "V5.1.0",
            "V5.1.1",
            "V5.1.2",
            "V5.2",
            "V5.2.0",
            "V5.2.1",
            "V5.2.2",
            "V5.2.3",
            "V5.2.4",
            "V5.3",
            "V5.3.0",
            "V5.3.1",
            "V5.3.2",
            "V5.3.3",
            "V6.0.0",
            "V6.1.0",
            "V6.2.0"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "softwareId": {
          "description": "The FDX registration ID of company or software generating this tax data",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BusinessIncomeStatement": {
      "id": "BusinessIncomeStatement",
      "description": "Business Income Statement for IRS Form 1040 Schedule C",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "businessName": {
          "description": "Box C, Business name",
          "uniqueItems": false,
          "type": "string"
        },
        "sales": {
          "description": "Box 1, Gross receipts or sales",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "returns": {
          "description": "Box 2, Returns and allowances",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 6, Other income, including federal and state gasoline or fuel tax credit or refund",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "advertising": {
          "description": "Box 8, Advertising",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "carAndTruck": {
          "description": "Box 9, Car and truck expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "commissions": {
          "description": "Box 10, Commissions and fees",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "contractLabor": {
          "description": "Box 11, Contract labor",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "depletion": {
          "description": "Box 12, Depletion",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "depreciation": {
          "description": "Box 13, Depreciation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeBenefits": {
          "description": "Box 14, Employee benefit programs",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "insurance": {
          "description": "Box 15, Insurance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInterest": {
          "description": "Box 16a, Mortgage interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherInterest": {
          "description": "Box 16b, Other interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "legal": {
          "description": "Box 17, Legal and professional services",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "office": {
          "description": "Box 18, Office expense",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "pension": {
          "description": "Box 19, Pension and profit-sharing plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "equipmentRent": {
          "description": "Box 20a, Equipment rent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRent": {
          "description": "Box 20b, Other rent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repairs": {
          "description": "Box 21, Repairs and maintenance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "supplies": {
          "description": "Box 22, Supplies",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxes": {
          "description": "Box 23, Taxes and licenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "travel": {
          "description": "Box 24a, Travel",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "meals": {
          "description": "Box 24b, Deductible meals",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "utilities": {
          "description": "Box 25, Utilities",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "wages": {
          "description": "Box 26, Wages",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherExpenses": {
          "description": "Box 27, Other expenses",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "beginningInventory": {
          "description": "Box 35, Inventory at beginning of year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "purchases": {
          "description": "Box 36, Purchases",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "costOfLabor": {
          "description": "Box 37, Cost of labor",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "materials": {
          "description": "Box 38, Materials and supplies",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherCosts": {
          "description": "Box 39, Other costs",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "endingInventory": {
          "description": "Box 41, Inventory at end of year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalExpenditures": {
          "description": "Capital expenditures, for use in calculating Depreciation",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CodeandAmount": {
      "id": "CodeandAmount",
      "description": "Code and amount pair used on IRS W-2, K-1, etc.",
      "required": [],
      "properties": {
        "code": {
          "description": "Code",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Gainorlossfromcryptocurrencytransaction": {
      "id": "Gainorlossfromcryptocurrencytransaction",
      "description": "Tax information for a single cryptocurrency transaction. If reported on Form 1099-B, use Tax1099B and SecurityDetail instead of this entity.",
      "required": [],
      "properties": {
        "cryptocurrencyName": {
          "description": "Cryptocurrency name (e.g. Bitcoin)",
          "uniqueItems": false,
          "type": "string"
        },
        "symbol": {
          "description": "Cryptocurrency abbreviation or symbol (e.g. BTC)",
          "uniqueItems": false,
          "type": "string"
        },
        "quantity": {
          "description": "Quantity (e.g. 0.0125662)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "saleDescription": {
          "description": "Description of property (1099-B box 1a)",
          "uniqueItems": false,
          "type": "string"
        },
        "dateAcquired": {
          "description": "Date acquired (1099-B box 1b)",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "variousDatesAcquired": {
          "description": "Acquired on various dates (1099-B box 1b)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateOfSale": {
          "description": "Date sold or disposed (1099-B box 1c)",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "salesPrice": {
          "description": "Proceeds (not price per share, 1099-B box 1d)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "costBasis": {
          "description": "Cost or other basis (1099-B box 1e)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "longOrShort": {
          "description": "LONG or SHORT (1099-B box 2)",
          "enum": [
            "LONG",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CryptocurrencyTaxStatementlist": {
      "id": "CryptocurrencyTaxStatementlist",
      "description": "Array of cryptocurrency gains and losses",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "gainsAndLosses": {
          "description": "The list of cryptocurrency gains and losses",
          "items": {
            "$ref": "Gainorlossfromcryptocurrencytransaction"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DateandAmount": {
      "id": "DateandAmount",
      "description": "Date, description, and amount. When used in 1098-Q, description is optional",
      "required": [],
      "properties": {
        "date": {
          "description": "Date of amount. When used in 1098-Q, date of last payment in month",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "description": {
          "description": "Description of amount. When used in 1098-Q, may use MonthAbbreviation",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount of payment or receipt. When used in 1098-Q, monthly total",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "DescriptionandAmount": {
      "id": "DescriptionandAmount",
      "description": "Description and amount pair used on IRS W-2, etc.",
      "required": [],
      "properties": {
        "description": {
          "description": "Description",
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "FarmIncomeStatement": {
      "id": "FarmIncomeStatement",
      "description": "Farm Income Statement for IRS Form 1040 Schedule F",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "cropOrActivity": {
          "description": "Box A, Principal crop or activity",
          "uniqueItems": false,
          "type": "string"
        },
        "sales": {
          "description": "Box 1a, Sales of livestock and other resale items",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "costOfItemsSold": {
          "description": "Box 1b, Cost or other basis of livestock or other items",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "salesOfRaised": {
          "description": "Box 2, Sales of livestock, produce, grains, and other products you raised",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "coopDistributions": {
          "description": "Box 3a, Cooperative distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "agProgramPayments": {
          "description": "Box 4a, Agricultural program payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cccLoans": {
          "description": "Box 5a, Commodity Credit Corporation (CCC) loans reported under election",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cropInsuranceProceeds": {
          "description": "Box 6a, Crop insurance proceeds and federal crop disaster payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "customHireIncome": {
          "description": "Box 7, Custom hire (machine work) income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 8, Other income",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "carAndTruck": {
          "description": "Box 10, Car and truck expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "chemicals": {
          "description": "Box 11, Chemicals",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "conservation": {
          "description": "Box 12, Conservation expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "customHireExpenses": {
          "description": "Box 13, Custom hire (machine work)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "depreciation": {
          "description": "Box 14, Depreciation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeBenefitPrograms": {
          "description": "Box 15, Employee benefit programs",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "feed": {
          "description": "Box 16, Feed",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fertilizers": {
          "description": "Box 17, Fertilizers and lime",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "freight": {
          "description": "Box 18, Freight and trucking",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fuel": {
          "description": "Box 19, Gasoline, fuel, and oil",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "insurance": {
          "description": "Box 20, Insurance (other than health)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInterest": {
          "description": "Box 21a, Mortgage Interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherInterest": {
          "description": "Box 21b, Other interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "laborHired": {
          "description": "Box 22, Labor hired",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "pension": {
          "description": "Box 23, Pension and profit-sharing plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "equipmentRent": {
          "description": "Box 24a, Rent or lease: Vehicles, machinery, equipment",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRent": {
          "description": "Box 24b, Rent or lease: Other",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repairs": {
          "description": "Box 25, Repairs and maintenance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "seeds": {
          "description": "Box 26, Seeds and plants",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "storage": {
          "description": "Box 27, Storage and warehousing",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "supplies": {
          "description": "Box 28, Supplies",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxes": {
          "description": "Box 29, Taxes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "utilities": {
          "description": "Box 30, Utilities",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "veterinary": {
          "description": "Box 31, Veterinary, breeding, and medicine",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherExpenses": {
          "description": "Box 32, Other expenses",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "capitalExpenditures": {
          "description": "Capital expenditures, for use in calculating Depreciation",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FarmRentalIncomeStatement": {
      "id": "FarmRentalIncomeStatement",
      "description": "Farm Rental Income Statement for IRS Form 4835",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "incomeFromProduction": {
          "description": "Box 1, Income from production of livestock, produce, grains, and other crops",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "coopDistributions": {
          "description": "Box 2a, Cooperative distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "agProgramPayments": {
          "description": "Box 3a, Agricultural program payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cccLoans": {
          "description": "Box 4a, Commodity Credit Corporation (CCC) loans reported under election",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cropInsuranceProceeds": {
          "description": "Box 5a, Crop insurance proceeds and federal crop disaster payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 6, Other income",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "carAndTruck": {
          "description": "Box 8, Car and truck expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "chemicals": {
          "description": "Box 9, Chemicals",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "conservation": {
          "description": "Box 10, Conservation expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "customHireExpenses": {
          "description": "Box 11, Custom hire (machine work)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "depreciation": {
          "description": "Box 12, Depreciation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeBenefitPrograms": {
          "description": "Box 13, Employee benefit programs",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "feed": {
          "description": "Box 14, Feed",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fertilizers": {
          "description": "Box 15, Fertilizers and lime",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "freight": {
          "description": "Box 16, Freight and trucking",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fuel": {
          "description": "Box 17, Gasoline, fuel, and oil",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "insurance": {
          "description": "Box 18, Insurance (other than health)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInterest": {
          "description": "Box 19a, Mortgage Interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherInterest": {
          "description": "Box 19b, Other interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "laborHired": {
          "description": "Box 20, Labor hired",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "pension": {
          "description": "Box 21, Pension and profit-sharing plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "equipmentRent": {
          "description": "Box 22a, Rent or lease: Vehicles, machinery, equipment",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRent": {
          "description": "Box 22b, Rent or lease: Other",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repairs": {
          "description": "Box 23, Repairs and maintenance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "seeds": {
          "description": "Box 24, Seeds and plants",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "storage": {
          "description": "Box 25, Storage and warehousing",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "supplies": {
          "description": "Box 26, Supplies",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxes": {
          "description": "Box 27, Taxes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "utilities": {
          "description": "Box 28, Utilities",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "veterinary": {
          "description": "Box 29, Veterinary, breeding, and medicine",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherExpenses": {
          "description": "Box 30, Other expenses",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "capitalExpenditures": {
          "description": "Capital expenditures, for use in calculating Depreciation",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1042SAgent": {
      "id": "Form1042SAgent",
      "description": "One of various persons or businesses involved in Form 1042-S reporting. Use\n  * `tin` for\n    * Box 12a, Withholding Agent EIN,\n    * Box 13e, Recipient U.S. TIN,\n    * Box 14b, Primary Withholding Agent EIN,\n    * Box 15a, Intermediary or flow-through entity EIN,\n    * Box 16b, Payer TIN\n  * `individualName` or `businessName` for\n    * Box 12d, Withholding Agent name,\n    * Box 13a, Recipient name,\n    * Box 14a, Primary Withholding Agent name,\n    * Box 15d, Intermediary or flow-through entity name,\n    * Box 16a, Payer name\n  * `address.country` for\n    * Box 12f, Withholding Agent Country code,\n    * Box 13b, Recipient Country code,\n    * Box 15f, Intermediary or flow-through entity Country code\n  * `address` for\n    * Boxes 12h-i, Withholding Agent Address,\n    * Boxes 13c-d, Recipient Address,\n    * Boxes 15h-i, Intermediary or flow-through entity Address",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1042SRecipient": {
      "id": "Form1042SRecipient",
      "description": "Recipient for Form 1042-S, Boxes 13a-j, 13l",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        },
        "lobCode": {
          "description": "Box 13j, Recipient's LOB code, if any",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Box 13l, Recipient's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "HealthInsuranceCoverage": {
      "id": "HealthInsuranceCoverage",
      "description": "Used on Form 1095-A Part III",
      "required": [],
      "properties": {
        "enrollmentPremium": {
          "description": "Monthly enrollment premiums",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "slcspPremium": {
          "description": "Monthly second lowest cost silver plan (SLCSP) premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "advancePremiumTaxCreditPayment": {
          "description": "Monthly advance payment of premium tax credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "month": {
          "description": "Month of coverage",
          "enum": [
            "ANNUAL",
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "HealthInsuranceCoveredIndividual": {
      "id": "HealthInsuranceCoveredIndividual",
      "description": "Used on Form 1095-B Part IV and Form 1095-C Part III",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of responsible individual",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "tin": {
          "description": "Social security number or other TIN",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "coveredAll12Months": {
          "description": "Covered all 12 months",
          "uniqueItems": false,
          "type": "boolean"
        },
        "coveredMonths": {
          "description": "Months covered",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "HealthInsuranceMarketplaceCoveredIndividual": {
      "id": "HealthInsuranceMarketplaceCoveredIndividual",
      "description": "Used on Form 1095-A Part II",
      "required": [],
      "properties": {
        "name": {
          "description": "Covered individual name",
          "uniqueItems": false,
          "type": "string"
        },
        "tin": {
          "description": "Covered individual SSN",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Covered individual date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyStartDate": {
          "description": "Coverage start date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyTerminationDate": {
          "description": "Coverage termination date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "LocalTaxWithholding": {
      "id": "LocalTaxWithholding",
      "description": "Income in a locality and its tax withholding",
      "required": [],
      "properties": {
        "taxWithheld": {
          "description": "Amount of local income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "localityName": {
          "description": "Locality name",
          "uniqueItems": false,
          "type": "string"
        },
        "income": {
          "description": "Income amount for local tax purposes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "MonthandAmount": {
      "id": "MonthandAmount",
      "description": "Month and amount pair used on IRS Form 1099-K, etc.",
      "required": [],
      "properties": {
        "month": {
          "description": "Month",
          "enum": [
            "JAN",
            "FEB",
            "MAR",
            "APR",
            "MAY",
            "JUN",
            "JUL",
            "AUG",
            "SEP",
            "OCT",
            "NOV",
            "DEC"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "amount": {
          "description": "Amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "OfferofHealthInsuranceCoverage": {
      "id": "OfferofHealthInsuranceCoverage",
      "description": "Health insurance coverage offer for part II of IRS Form 1095-C",
      "required": [],
      "properties": {
        "coverageCode": {
          "description": "Offer of Coverage (enter required code)",
          "uniqueItems": false,
          "type": "string"
        },
        "requiredContribution": {
          "description": "Employee required contribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section4980HCode": {
          "description": "Section 4980H Safe Harbor and Other Relief (enter code)",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Box 17, ZIP Code",
          "uniqueItems": false,
          "type": "string"
        },
        "month": {
          "description": "Month",
          "enum": [
            "ANNUAL",
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RentalIncomeStatement": {
      "id": "RentalIncomeStatement",
      "description": "Rental Income Statement for IRS Form 1040 Schedule E",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "propertyAddress": {
          "description": "Box 1a, Physical address of property (street, city, state, ZIP code)",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "rents": {
          "description": "Box 3, Rents received",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "advertising": {
          "description": "Box 5, Advertising",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "auto": {
          "description": "Box 6, Auto and travel",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cleaning": {
          "description": "Box 7, Cleaning and maintenance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "commissions": {
          "description": "Box 8, Commissions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "insurance": {
          "description": "Box 9, Insurance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "legal": {
          "description": "Box 10, Legal and other professional fees",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "managementFees": {
          "description": "Box 11, Management fees",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInterest": {
          "description": "Box 12, Mortgage interest paid to banks, etc.",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherInterest": {
          "description": "Box 13, Other interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repairs": {
          "description": "Box 14, Repairs",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "supplies": {
          "description": "Box 15, Supplies",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxes": {
          "description": "Box 16, Taxes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "utilities": {
          "description": "Box 17, Utilities",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "depreciationExpense": {
          "description": "Box 18, Depreciation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherExpenses": {
          "description": "Box 19, Other expenses",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "capitalExpenditures": {
          "description": "Capital expenditures, for use in calculating Depreciation",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RoyaltyIncomeStatement": {
      "id": "RoyaltyIncomeStatement",
      "description": "Royalty Income Statement for IRS Form 1040 Schedule E",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "propertyAddress": {
          "description": "Box 1a, Physical address of property (street, city, state, ZIP code)",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "royalties": {
          "description": "Box 3, Royalties received",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "advertising": {
          "description": "Box 5, Advertising",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "auto": {
          "description": "Box 6, Auto and travel",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cleaning": {
          "description": "Box 7, Cleaning and maintenance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "commissions": {
          "description": "Box 8, Commissions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "insurance": {
          "description": "Box 9, Insurance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "legal": {
          "description": "Box 10, Legal and other professional fees",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "managementFees": {
          "description": "Box 11, Management fees",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInterest": {
          "description": "Box 12, Mortgage interest paid to banks, etc.",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherInterest": {
          "description": "Box 13, Other interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repairs": {
          "description": "Box 14, Repairs",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "supplies": {
          "description": "Box 15, Supplies",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxes": {
          "description": "Box 16, Taxes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "utilities": {
          "description": "Box 17, Utilities",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "depletionExpense": {
          "description": "Box 18, Depletion",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherExpenses": {
          "description": "Box 19, Other expenses",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "capitalExpenditures": {
          "description": "Capital expenditures, for use in calculating Depreciation",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SecurityDetailIRSForm1099B": {
      "id": "SecurityDetailIRSForm1099B",
      "description": "Tax information for a single security transaction",
      "required": [],
      "properties": {
        "checkboxOnForm8949": {
          "description": "Applicable checkbox on Form 8949",
          "uniqueItems": false,
          "type": "string"
        },
        "securityName": {
          "description": "Security name",
          "uniqueItems": false,
          "type": "string"
        },
        "numberOfShares": {
          "description": "Number of shares",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "saleDescription": {
          "description": "Box 1a, Description of property",
          "uniqueItems": false,
          "type": "string"
        },
        "dateAcquired": {
          "description": "Box 1b, Date acquired",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "variousDatesAcquired": {
          "description": "Box 1b, Date acquired Various",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateOfSale": {
          "description": "Box 1c, Date sold or disposed",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "salesPrice": {
          "description": "Box 1d, Proceeds (not price per share)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "accruedMarketDiscount": {
          "description": "Box 1f, Accrued market discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjustmentCodes": {
          "description": "Other adjustments (code and amount)",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "costBasis": {
          "description": "Box 1e, Cost or other basis",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "correctedCostBasis": {
          "description": "Corrected cost basis. May be supplied in lieu of adjustmentCode code B. If both adjustmentCodes and correctedCostBasis are supplied, costBasis plus adjustmentCode B should equal correctedCostBasis",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "washSaleLossDisallowed": {
          "description": "Box 1g, Wash sale loss disallowed",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "longOrShort": {
          "description": "Box 2, LONG or SHORT",
          "enum": [
            "LONG",
            "SHORT"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "ordinary": {
          "description": "Box 2, Ordinary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "collectible": {
          "description": "Box 3, Collectibles",
          "uniqueItems": false,
          "type": "boolean"
        },
        "qof": {
          "description": "Box 3, Qualified Opportunity Fund (QOF)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "noncoveredSecurity": {
          "description": "Box 5, Noncovered security",
          "uniqueItems": false,
          "type": "boolean"
        },
        "grossOrNet": {
          "description": "Box 6, Reported to IRS: GROSS or NET",
          "enum": [
            "GROSS",
            "NET"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "lossNotAllowed": {
          "description": "Box 7, Loss not allowed based on proceeds",
          "uniqueItems": false,
          "type": "boolean"
        },
        "basisReported": {
          "description": "Box 12, Basis reported to IRS",
          "uniqueItems": false,
          "type": "boolean"
        },
        "stateAndLocal": {
          "description": "Boxes 14-16, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "cusip": {
          "description": "CUSIP number",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignAccountTaxCompliance": {
          "description": "Foreign account tax compliance",
          "uniqueItems": false,
          "type": "boolean"
        },
        "expiredOption": {
          "description": "To indicate gain or loss resulted from option expiration. If salesPrice (1d, proceeds) is zero, use PURCHASED. If costBasis (1e) is zero, use GRANTED",
          "enum": [
            "GRANTED",
            "PURCHASED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "investmentSaleType": {
          "description": "Type of investment sale",
          "enum": [
            "CRYPTOCURRENCY",
            "EMPLOYEE_STOCK_PURCHASE_PLAN",
            "INCENTIVE_STOCK_OPTION",
            "NONQUALIFIED_STOCK_OPTIONS",
            "OTHER",
            "RESTRICTED_STOCK",
            "RESTRICTED_STOCK_UNITS"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "StateandLocalTaxWithholding": {
      "id": "StateandLocalTaxWithholding",
      "description": "Income in a state and/or locality and its or their tax withholding",
      "required": [],
      "properties": {
        "stateCode": {
          "description": "State two-digit code",
          "enum": [
            "AA",
            "AE",
            "AK",
            "AL",
            "AP",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "Amount of state income tax withheld",
          "uniqueItems": false,
          "$ref": "StateTaxWithholding2"
        },
        "local": {
          "description": "Amount of local income tax withheld, if any",
          "uniqueItems": false,
          "$ref": "LocalTaxWithholding1"
        }
      }
    },
    "StateTaxWithholding": {
      "id": "StateTaxWithholding",
      "description": "Income in a state and its tax withholding",
      "required": [],
      "properties": {
        "taxWithheld": {
          "description": "Amount of state income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxId": {
          "description": "Filer's state tax id",
          "uniqueItems": false,
          "type": "string"
        },
        "income": {
          "description": "Income amount for state tax purposes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Tax": {
      "id": "Tax",
      "description": "Base entity for all IRS Tax forms",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1041K1": {
      "id": "Form1041K1",
      "description": "Beneficiary's Share of Income, Deductions, Credits, etc., from Estate or Trust (boxes A-B as issuer) and Fiduciary (box C) to Beneficiary (boxes F-G as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "finalK1": {
          "description": "Final K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendedK1": {
          "description": "Amended K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "form1041T": {
          "description": "Box D, Check if Form 1041-T was filed",
          "uniqueItems": false,
          "type": "boolean"
        },
        "date1041T": {
          "description": "Box D, and enter the date it was filed",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "final1041": {
          "description": "Box E, Check if this is the final Form 1041 for the estate or trust",
          "uniqueItems": false,
          "type": "boolean"
        },
        "domestic": {
          "description": "Box H, Domestic beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "foreign": {
          "description": "Box H, Foreign beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "interestIncome": {
          "description": "Box 1, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryDividends": {
          "description": "Box 2a, Ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 2b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netShortTermGain": {
          "description": "Box 3, Net short-term capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netLongTermGain": {
          "description": "Box 4a, Net long-term capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "gain28Rate": {
          "description": "Box 4b, 28% rate gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 4c, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherPortfolioIncome": {
          "description": "Box 5, Other portfolio and nonbusiness income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryBusinessIncome": {
          "description": "Box 6, Ordinary business income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netRentalRealEstateIncome": {
          "description": "Box 7, Net rental real estate income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRentalIncome": {
          "description": "Box 8, Other rental income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "directlyApportionedDeductions": {
          "description": "Box 9, Directly apportioned deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "estateTaxDeduction": {
          "description": "Box 10, Estate tax deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "finalYearDeductions": {
          "description": "Box 11, Final year deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiduciary": {
          "description": "Box C, Fiduciary's name and address",
          "uniqueItems": false,
          "$ref": "TaxParty2"
        },
        "amtAdjustments": {
          "description": "Box 12, Alternative minimum tax adjustment",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "credits": {
          "description": "Box 13, Credits and credit recapture",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "otherInfo": {
          "description": "Box 14, Other information",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1042S": {
      "id": "Form1042S",
      "description": "Foreign Person's U.S. Source Income Subject to Withholding, from WithholdingAgent (boxes 12a-i) to Recipient (boxes 13a-j, 13l as form1042Recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "formId": {
          "description": "Unique form identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "amended": {
          "description": "Amended",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendmentNumber": {
          "description": "Amendment number",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "incomeTypeCode": {
          "description": "Box 1, Income code",
          "uniqueItems": false,
          "type": "string"
        },
        "grossIncome": {
          "description": "Box 2, Gross income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "chapterIndicator": {
          "description": "Box 3, Chapter indicator",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3ExemptionCode": {
          "description": "Box 3a, Exemption code",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3TaxRate": {
          "description": "Box 3b, Tax rate",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ch4ExemptionCode": {
          "description": "Box 4a, Exemption code",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4TaxRate": {
          "description": "Box 4b, Tax rate",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "withholdingAllowance": {
          "description": "Box 5, Withholding allowance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netIncome": {
          "description": "Box 6, Net income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 7a, Federal tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "escrowProceduresApplied": {
          "description": "Box 7b, Check if federal tax withheld was not deposited with the IRS because escrow procedures were applied",
          "uniqueItems": false,
          "type": "boolean"
        },
        "subsequentYear": {
          "description": "Box 7c, Check if withholding occurred in subsequent year with respect to a partnership interest",
          "uniqueItems": false,
          "type": "boolean"
        },
        "otherAgentsTaxWithheld": {
          "description": "Box 8, Tax withheld by other agents",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recipientRepaidAmount": {
          "description": "Box 9, Overwithheld tax repaid to recipient pursuant to adjustment procedures",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalTaxWithholdingCredit": {
          "description": "Box 10, Total withholding credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "withholdingAgentTaxPaid": {
          "description": "Box 11, Tax paid by withholding agent (amounts not withheld)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "withholdingAgent": {
          "description": "Boxes 12a-i, Withholding agent",
          "uniqueItems": false,
          "$ref": "Form1042SAgent1"
        },
        "form1042Recipient": {
          "description": "Boxes 13a-j, 13l, Recipient for Form 1042-S",
          "uniqueItems": false,
          "$ref": "Form1042SRecipient1"
        },
        "accountNumber": {
          "description": "Box 13k, Recipient account number",
          "uniqueItems": false,
          "type": "string"
        },
        "primary": {
          "description": "Boxes 14a-b, Primary Withholding Agent",
          "uniqueItems": false,
          "$ref": "Form1042SAgent2"
        },
        "prorataBasisReporting": {
          "description": "Box 15, Check if pro-rata basis reporting",
          "uniqueItems": false,
          "type": "boolean"
        },
        "intermediary": {
          "description": "Boxes 15a-i, Intermediary or flow thru entity",
          "uniqueItems": false,
          "$ref": "Form1042SAgent3"
        },
        "payer": {
          "description": "Boxes 16a-e, Payer",
          "uniqueItems": false,
          "$ref": "Form1042SAgent4"
        },
        "stateAndLocal": {
          "description": "Box 17, State and Local tax withholding",
          "uniqueItems": false,
          "$ref": "StateandLocalTaxWithholding1"
        }
      }
    },
    "Form1065K1": {
      "id": "Form1065K1",
      "description": "Partner's Share of Income, Deductions, Credits, etc., from Partnership (boxes A, D as issuer) to Partner (boxes E-F as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end data",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "finalK1": {
          "description": "Final K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendedK1": {
          "description": "Amended K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "irsCenter": {
          "description": "Box C, IRS Center where partnership filed return",
          "uniqueItems": false,
          "type": "string"
        },
        "publiclyTraded": {
          "description": "Box D, Check if this is a publicly traded partnership (PTP)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "generalPartner": {
          "description": "Box G, General partner or LLC member-manager",
          "uniqueItems": false,
          "type": "boolean"
        },
        "limitedPartner": {
          "description": "Box G, Limited partner or other LLC member",
          "uniqueItems": false,
          "type": "boolean"
        },
        "domestic": {
          "description": "Box H1, Domestic partner",
          "uniqueItems": false,
          "type": "boolean"
        },
        "foreign": {
          "description": "Box H1, Foreign partner",
          "uniqueItems": false,
          "type": "boolean"
        },
        "disregardedEntity": {
          "description": "Box H2, Check if the partner is a disregarded entity (DE), and enter the partner's TIN and Name",
          "uniqueItems": false,
          "type": "boolean"
        },
        "disregardedEntityTin": {
          "description": "Box H2, Disregarded entity partner's TIN",
          "uniqueItems": false,
          "type": "string"
        },
        "disregardedEntityName": {
          "description": "Box H2, Disregarded entity partner's Name",
          "uniqueItems": false,
          "type": "string"
        },
        "entityType": {
          "description": "Box I1, What type of entity is this partner?",
          "uniqueItems": false,
          "type": "string"
        },
        "retirementPlan": {
          "description": "Box I2, If this partner is a retirement plan (IRA/SEP/Keogh/etc.), check here",
          "uniqueItems": false,
          "type": "boolean"
        },
        "profitShareBegin": {
          "description": "Box J, Partner's share of profit - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "profitShareEnd": {
          "description": "Box J, Partner's share of profit - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lossShareBegin": {
          "description": "Box J, Partner's share of loss - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lossShareEnd": {
          "description": "Box J, Partner's share of loss - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalShareBegin": {
          "description": "Box J, Partner's share of capital - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalShareEnd": {
          "description": "Box J, Partner's share of capital - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "decreaseDueToSaleOrExchange": {
          "description": "Box J, Check if decrease is due to sale or exchange of partnership interest. Deprecated and no longer used beginning tax year 2023. Use `decreaseDueToSale` and `decreaseDueToExchange` instead",
          "uniqueItems": false,
          "type": "boolean"
        },
        "decreaseDueToSale": {
          "description": "Box J, Check if decrease is due to sale of partnership interest",
          "uniqueItems": false,
          "type": "boolean"
        },
        "decreaseDueToExchange": {
          "description": "Box J, Check if decrease is due to exchange of partnership interest",
          "uniqueItems": false,
          "type": "boolean"
        },
        "nonrecourseLiabilityShareBegin": {
          "description": "Box K1, Partner's share of liabilities - beginning - nonrecourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonrecourseLiabilityShareEnd": {
          "description": "Box K1, Partner's share of liabilities - ending - nonrecourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedLiabilityShareBegin": {
          "description": "Box K1, Partner's share of liabilities - beginning - qualified nonrecourse financing",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedLiabilityShareEnd": {
          "description": "Box K1, Partner's share of liabilities - ending - qualified nonrecourse financing",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recourseLiabilityShareBegin": {
          "description": "Box K1, Partner's share of liabilities - beginning - recourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recourseLiabilityShareEnd": {
          "description": "Box K1, Partner's share of liabilities - ending - recourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "includesLowerTierLiability": {
          "description": "Box K2, Check this box if item K1 includes liability amounts from lower tier partnerships",
          "uniqueItems": false,
          "type": "boolean"
        },
        "liabilitySubjectToGuarantees": {
          "description": "Box K3, Check if any of the above liability is subject to guarantees or other payment obligations by the partner",
          "uniqueItems": false,
          "type": "boolean"
        },
        "capitalAccountBegin": {
          "description": "Box L, Partner's capital account analysis - Beginning capital account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountContributions": {
          "description": "Box L, Partner's capital account analysis - Capital contributed during the year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountIncrease": {
          "description": "Box L, Partner's capital account analysis - Current year net income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountOther": {
          "description": "Box L, Partner's capital account analysis - Other increase (decrease)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountWithdrawals": {
          "description": "Box L, Partner's capital account analysis - Withdrawals & distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountEnd": {
          "description": "Box L, Partner's capital account analysis - Ending capital account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "builtInGain": {
          "description": "Box M, Did the partner contribute property with a built-in gain or loss? - Yes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "unrecognizedSection704Begin": {
          "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecognizedSection704End": {
          "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryIncome": {
          "description": "Box 1, Ordinary business income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netRentalRealEstateIncome": {
          "description": "Box 2, Net rental real estate income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRentalIncome": {
          "description": "Box 3, Other net rental income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "guaranteedPaymentServices": {
          "description": "Box 4a, Guaranteed payments for services",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "guaranteedPaymentCapital": {
          "description": "Box 4b, Guaranteed payments for capital",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "guaranteedPayment": {
          "description": "Box 4c, Total guaranteed payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestIncome": {
          "description": "Box 5, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryDividends": {
          "description": "Box 6a, Ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 6b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dividendEquivalents": {
          "description": "Box 6c, Dividend equivalents",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "description": "Box 7, Royalties",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netShortTermGain": {
          "description": "Box 8, Net short-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netLongTermGain": {
          "description": "Box 9a, Net long-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 9b, Collectibles (28%) gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 9c, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "net1231Gain": {
          "description": "Box 10, Net section 1231 gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 11, Other income",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "section179Deduction": {
          "description": "Box 12, Section 179 deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherDeductions": {
          "description": "Box 13, Other deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "selfEmployment": {
          "description": "Box 14, Self-employment earnings (loss)",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "credits": {
          "description": "Box 15, Credits",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scheduleK3": {
          "description": "Box 16, Schedule K-3 is attached",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amtItems": {
          "description": "Box 17, Alternative minimum tax (AMT) items",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "taxExemptIncome": {
          "description": "Box 18, Tax-exempt income and nondeductible expenses",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "distributions": {
          "description": "Box 19, Distributions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "otherInfo": {
          "description": "Box 20, Other information",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignTaxPaid": {
          "description": "Box 21, Foreign taxes paid or accrued",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "multipleAtRiskActivities": {
          "description": "Box 22, More than one activity for at-risk purposes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "multiplePassiveActivities": {
          "description": "Box 23, More than one activity for passive activity purposes",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1095A": {
      "id": "Form1095A",
      "description": "Health Insurance Marketplace Statement, to Recipient (boxes 4-5, 12-15)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "marketplaceId": {
          "description": "Box 1, Marketplace identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "marketplacePolicyNumber": {
          "description": "Box 2, Marketplace-assigned policy number",
          "uniqueItems": false,
          "type": "string"
        },
        "policyIssuerName": {
          "description": "Box 3, Policy issuer's name",
          "uniqueItems": false,
          "type": "string"
        },
        "recipientDateOfBirth": {
          "description": "Box 6, Recipient's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "spouseName": {
          "description": "Box 7, Recipient's spouse's name",
          "uniqueItems": false,
          "type": "string"
        },
        "spouseTin": {
          "description": "Box 8, Recipient's spouse's SSN",
          "uniqueItems": false,
          "type": "string"
        },
        "spouseDateOfBirth": {
          "description": "Box 9, Recipient's spouse's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyStartDate": {
          "description": "Box 10, Policy start date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyTerminationDate": {
          "description": "Box 11, Policy termination date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "coveredIndividuals": {
          "description": "Boxes 16+, Covered Individuals",
          "items": {
            "$ref": "HealthInsuranceMarketplaceCoveredIndividual"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "coverages": {
          "description": "Boxes 21-33, Coverage Information",
          "items": {
            "$ref": "HealthInsuranceCoverage"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1095B": {
      "id": "Form1095B",
      "description": "Health Coverage, from Issuer (boxes 16-22) to Responsible Individual (boxes 1-2, 4-7 as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "responsibleDateOfBirth": {
          "description": "Box 3, Date of birth (if SSN or other TIN is not available)",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "originOfHealthCoverageCode": {
          "description": "Box 8, Enter letter identifying Origin of the Health Coverage",
          "uniqueItems": false,
          "type": "string"
        },
        "employer": {
          "description": "Boxes 10-15, Employer EIN, name and address",
          "uniqueItems": false,
          "$ref": "TaxParty3"
        },
        "coveredIndividuals": {
          "description": "Boxes 23+, Covered Individuals",
          "items": {
            "$ref": "HealthInsuranceCoveredIndividual"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1095C": {
      "id": "Form1095C",
      "description": "Employer-Provided Health Insurance Offer and Coverage, from Employer (boxes 7-13 as issuer) to Employee (boxes 1-6 as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "selfInsuredCoverage": {
          "description": "Self Insured Coverage",
          "uniqueItems": false,
          "type": "boolean"
        },
        "offersOfCoverage": {
          "description": "Boxes 14-16, Employee Offer of Coverage",
          "items": {
            "$ref": "OfferofHealthInsuranceCoverage"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "employeeAge": {
          "description": "Employee's Age on January 1",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "planStartMonth": {
          "description": "Plan Start Month",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "coveredIndividuals": {
          "description": "Boxes 17+, Covered Individuals",
          "items": {
            "$ref": "HealthInsuranceCoveredIndividual"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1097BTC": {
      "id": "Form1097BTC",
      "description": "Bond Tax Credit, from FORM 1097-BTC ISSUER (1st-2nd boxes) to RECIPIENT (3rd-6th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "filingForCredit": {
          "description": "Form 1097-BTC issuer is: Issuer of bond or its agent filing current year Form 1097-BTC for credit being reported",
          "uniqueItems": false,
          "type": "boolean"
        },
        "asNominee": {
          "description": "Form 1097-BTC issuer is: An entity or a person that received or should have received a current year Form 1097-BTC and is distributing part or all of that credit to others",
          "uniqueItems": false,
          "type": "boolean"
        },
        "total": {
          "description": "Box 1, Total",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondCode": {
          "description": "Box 2a, Code",
          "uniqueItems": false,
          "type": "string"
        },
        "uniqueId": {
          "description": "Box 2b, Unique Identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "bondType": {
          "description": "Box 3, Bond type",
          "uniqueItems": false,
          "type": "string"
        },
        "amounts": {
          "description": "Box 5, Amounts by month",
          "items": {
            "$ref": "MonthandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "comments": {
          "description": "Box 6, Comments",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1098": {
      "id": "Form1098",
      "description": "Mortgage Interest Statement, from RECIPIENT/LENDER (1st-2nd boxes as issuer) to PAYER/BORROWER (3rd-6th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "mortgagedProperties": {
          "description": "Box 9, Number of properties securing the mortgage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "otherInformation": {
          "description": "Box 10, Other (property tax)",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "mortgageInterest": {
          "description": "Box 1, Mortgage interest received from borrower",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "outstandingPrincipal": {
          "description": "Box 2, Outstanding mortgage principal",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "originationDate": {
          "description": "Box 3, Mortgage origination date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "overpaidRefund": {
          "description": "Box 4, Refund of overpaid interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInsurance": {
          "description": "Box 5, Mortgage insurance premiums",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "pointsPaid": {
          "description": "Box 6, Points paid on purchase of principal residence",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "isPropertyAddressSameAsBorrowerAddress": {
          "description": "Box 7, Is address of property securing mortgage same as PAYER'S/BORROWER'S address",
          "uniqueItems": false,
          "type": "boolean"
        },
        "acquisitionDate": {
          "description": "Box 11, Mortgage acquisition date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "propertyAddress": {
          "description": "Box 8, Address of property securing mortgage",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "propertyTax": {
          "description": "Box 10, Property tax",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "propertyDescription": {
          "description": "Box 8, Description of property securing mortgage, if property securing mortgage has no address",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1098C": {
      "id": "Form1098C",
      "description": "Contributions of Motor Vehicles, Boats, and Airplanes, from DONEE (1st-2nd boxes as issuer) to DONOR (3rd-6th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateOfContribution": {
          "description": "Box 1, Date of contribution",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "odometerMileage": {
          "description": "Box 2a, Odometer mileage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "carYear": {
          "description": "Box 2b, Year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "make": {
          "description": "Box 2c, Make",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Box 2d, Model",
          "uniqueItems": false,
          "type": "string"
        },
        "vin": {
          "description": "Box 3, Vehicle or other identification number",
          "uniqueItems": false,
          "type": "string"
        },
        "armsLengthTransaction": {
          "description": "Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateOfSale": {
          "description": "Box 4b, Date of sale",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grossProceeds": {
          "description": "Box 4c, Gross proceeds from sale (see instructions)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "notTransferredBefore": {
          "description": "Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use",
          "uniqueItems": false,
          "type": "boolean"
        },
        "needyIndividual": {
          "description": "Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose",
          "uniqueItems": false,
          "type": "boolean"
        },
        "descriptionOfImprovements": {
          "description": "Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use",
          "uniqueItems": false,
          "type": "string"
        },
        "goodsInExchange": {
          "description": "Box 6a, Did you provide goods or services in exchange for the vehicle? Yes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "valueOfExchange": {
          "description": "Box 6b, Value of goods and services provided in exchange for the vehicle",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "intangibleReligious": {
          "description": "Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits",
          "uniqueItems": false,
          "type": "boolean"
        },
        "descriptionOfGoods": {
          "description": "Box 6c, Describe the goods and services, if any, that were provided",
          "uniqueItems": false,
          "type": "string"
        },
        "maxDeductionApplies": {
          "description": "Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1098E": {
      "id": "Form1098E",
      "description": "Student Loan Interest Statement, from RECIPIENT/LENDER (1st-2nd boxes as issuer) to PAYER/BORROWER (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "studentLoanInterest": {
          "description": "Box 1, Student loan interest received by lender",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "box1ExcludesFees": {
          "description": "Box 2, If checked, box 1 does not include loan origination fee made before September 1, 2004",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1098MA": {
      "id": "Form1098MA",
      "description": "Mortgage Assistance Payments, from FILER (1st-2nd boxes as issuer) to HOMEOWNER (3rd-6th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "totalMortgagePayments": {
          "description": "Box 1, Total State HFA (Housing Finance Agency) and homeowner mortgage payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageAssistancePayments": {
          "description": "Box 2, State HFA (Housing Finance Agency) mortgage assistance payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "homeownerMortgagePayments": {
          "description": "Box 3, Homeowner mortgage payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1098Q": {
      "id": "Form1098Q",
      "description": "Qualifying Longevity Annuity Contract Information, from ISSUER (1st box) to PARTICIPANT (3rd-5th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "planNumber": {
          "description": "Plan number",
          "uniqueItems": false,
          "type": "string"
        },
        "planName": {
          "description": "Plan name",
          "uniqueItems": false,
          "type": "string"
        },
        "planSponsorId": {
          "description": "Plan sponsor's EIN",
          "uniqueItems": false,
          "type": "string"
        },
        "annuityAmount": {
          "description": "Box 1a, Annuity amount on start date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "description": "Box 1b, Annuity start date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "canBeAccelerated": {
          "description": "Box 2, Start date may be accelerated",
          "uniqueItems": false,
          "type": "boolean"
        },
        "totalPremiums": {
          "description": "Box 3, Total premiums",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 4, Fair market value of qualifying longevity annuity contract (FMV of QLAC)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "premiums": {
          "description": "Box 5, Total monthly premiums paid for the contract and date of the last payment in the month",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1098T": {
      "id": "Form1098T",
      "description": "Tuition Statement, from FILER (1st-2nd boxes as issuer) to STUDENT (3rd-6th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "studentTinCertification": {
          "description": "By checking the box in STUDENT'S TIN, filer is making a true and accurate certification under penalty of perjury that they have complied with standards promulgated by the Secretary for obtaining such individual's TIN",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "halfTime": {
          "description": "Box 8, Check if at least half-time student",
          "uniqueItems": false,
          "type": "boolean"
        },
        "qualifiedTuitionFees": {
          "description": "Box 1, Payments received for qualified tuition and related expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjustmentPriorYear": {
          "description": "Box 4, Adjustments made for a prior year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "scholarship": {
          "description": "Box 5, Scholarships or grants",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjustScholarship": {
          "description": "Box 6, Adjustments to scholarships or grants for a prior year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "includeJanMar": {
          "description": "Box 7, Check if the amount in box 1 or box 2 includes amounts for an academic period beginning January - March of next year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "graduate": {
          "description": "Box 9, Check if graduate student",
          "uniqueItems": false,
          "type": "boolean"
        },
        "insuranceRefund": {
          "description": "Box 10, Insurance contract reimbursement / refund",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099A": {
      "id": "Form1099A",
      "description": "Acquisition or Abandonment of Secured Property, from LENDER (1st-2nd boxes as issuer) to BORROWER (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfAcquisition": {
          "description": "Box 1, Date of lender's acquisition or knowledge of abandonment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "principalBalance": {
          "description": "Box 2, Balance of principal outstanding",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 4, Fair market value property",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "personallyLiable": {
          "description": "Box 5, If checked, the borrower was personally liable for repayment of the debt",
          "uniqueItems": false,
          "type": "boolean"
        },
        "propertyDescription": {
          "description": "Box 6, Description of property",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1099B": {
      "id": "Form1099B",
      "description": "Proceeds From Broker and Barter Exchange Transactions, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-6th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "stateAndLocal": {
          "description": "Boxes 14-16, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "profitOnClosedContracts": {
          "description": "Box 8, Profit or (loss) realized in current year on closed contracts",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrealizedProfitOpenContractsBegin": {
          "description": "Box 9, Unrealized profit or loss on open contracts at end of last year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrealizedProfitOpenContractsEnd": {
          "description": "Box 10, Unrealized profit or loss on open contracts at end of current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "aggregateProfitOnContracts": {
          "description": "Box 11, Aggregate profit or (loss) on contracts",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bartering": {
          "description": "Box 13, Bartering",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "securityDetails": {
          "description": "Boxes 1-3, 5-7, 12, Security details",
          "items": {
            "$ref": "SecurityDetailIRSForm1099B"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099C": {
      "id": "Form1099C",
      "description": "Cancellation of Debt, from CREDITOR (1st-2nd boxes as issuer) to DEBTOR (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfEvent": {
          "description": "Box 1, Date of identifiable event",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "amountDischarged": {
          "description": "Box 2, Amount of debt discharged",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestIncluded": {
          "description": "Box 3, Interest if included in box 2",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "debtDescription": {
          "description": "Box 4, Debt description",
          "uniqueItems": false,
          "type": "string"
        },
        "personallyLiable": {
          "description": "Box 5, If checked, the debtor was personally liable for repayment of the debt",
          "uniqueItems": false,
          "type": "boolean"
        },
        "debtCode": {
          "description": "Box 6, Identifiable debt code",
          "uniqueItems": false,
          "type": "string"
        },
        "fairMarketValue": {
          "description": "Box 7, Fair market value of property",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099CAP": {
      "id": "Form1099CAP",
      "description": "Changes in Corporate Control and Capital Structure, from CORPORATION (1st-2nd boxes as issuer) to SHAREHOLDER (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfSale": {
          "description": "Box 1, Date of sale or exchange",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "aggregateAmount": {
          "description": "Box 2, Aggregate amount received",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfShares": {
          "description": "Box 3, Number of shares exchanged",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stockClasses": {
          "description": "Box 4, Classes of stock exchanged",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1099ConsolidatedStatement": {
      "id": "Form1099ConsolidatedStatement",
      "description": "Various tax-related items reported on consolidated brokerage or mutual fund statements not on the base 1099 forms. The component 1099 forms are delivered as their own Tax1099Xxx entities as usual",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "marginInterestPaid": {
          "description": "Interest paid on margin account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "paymentInLieuPaid": {
          "description": "Payment in lieu of dividends paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "advisorFeesPaid": {
          "description": "Advisor fees paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherFeesPaid": {
          "description": "Other fees paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "corporateBondInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 1, Corporate bond interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "usBondInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 3, accrued U.S. Treasury Notes and Bonds interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExemptInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 8, tax exempt interest income from municipal bonds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedPabInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 9, tax exempt interest income from Private Activity Bonds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099DIV": {
      "id": "Form1099DIV",
      "description": "Dividends and Distributions, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-6th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "ordinaryDividends": {
          "description": "Box 1a, Total ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 1b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalCapitalGain": {
          "description": "Box 2a, Total capital gain distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 2b, Unrecaptured Section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section1202Gain": {
          "description": "Box 2c, Section 1202 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 2d, Collectibles (28%) gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section897Dividends": {
          "description": "Box 2e, Section 897 ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section897CapitalGain": {
          "description": "Box 2f, Section 897 capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonTaxableDistribution": {
          "description": "Box 3, Nondividend distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199ADividends": {
          "description": "Box 5, Section 199A dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentExpenses": {
          "description": "Box 6, Investment expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignTaxPaid": {
          "description": "Box 7, Foreign tax paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignCountry": {
          "description": "Box 8, Foreign country or U.S. possession",
          "uniqueItems": false,
          "type": "string"
        },
        "cashLiquidation": {
          "description": "Box 9, Cash liquidation distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonCashLiquidation": {
          "description": "Box 10, Noncash liquidation distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAccountTaxCompliance": {
          "description": "Box 11, FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "taxExemptInterestDividend": {
          "description": "Box 12, Exempt-interest dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedPabInterestDividend": {
          "description": "Box 13, Specified private activity bond interest dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 14-16, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignIncomes": {
          "description": "Foreign income information",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateTaxExemptIncomes": {
          "description": "Tax exempt income state information",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099G": {
      "id": "Form1099G",
      "description": "Certain Government Payments, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "unemploymentCompensation": {
          "description": "Box 1, Unemployment compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxRefund": {
          "description": "Box 2, State or local income tax refunds, credits, or offsets",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "refundYear": {
          "description": "Box 3, Box 2 amount is for tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rtaaPayments": {
          "description": "Box 5, RTAA payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "grants": {
          "description": "Box 6, Taxable grants",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "agriculturePayments": {
          "description": "Box 7, Agriculture payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "businessIncome": {
          "description": "Box 8, If checked, box 2 is trade or business income",
          "uniqueItems": false,
          "type": "boolean"
        },
        "marketGain": {
          "description": "Box 9, Market gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 10-11, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099H": {
      "id": "Form1099H",
      "description": "Health Coverage Tax Credit (HCTC) Advance Payments, from ISSUER/PROVIDER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "advancePayments": {
          "description": "Box 1, Amount of HCTC advance payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfMonths": {
          "description": "Box 2, Number of months HCTC advance payments and reimbursement credits paid to you",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "payments": {
          "description": "Boxes 3-14, Payments by month",
          "items": {
            "$ref": "MonthandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099INT": {
      "id": "Form1099INT",
      "description": "Interest Income, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignAccountTaxCompliance": {
          "description": "FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "payerRtn": {
          "description": "Payer's RTN",
          "uniqueItems": false,
          "type": "string"
        },
        "interestIncome": {
          "description": "Box 1, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earlyWithdrawalPenalty": {
          "description": "Box 2, Early withdrawal penalty",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "usBondInterest": {
          "description": "Box 3, Interest on U.S. Savings Bonds and Treasury obligations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentExpenses": {
          "description": "Box 5, Investment expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignTaxPaid": {
          "description": "Box 6, Foreign tax paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignCountry": {
          "description": "Box 7, Foreign country or U.S. possession",
          "uniqueItems": false,
          "type": "string"
        },
        "taxExemptInterest": {
          "description": "Box 8, Tax-exempt interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedPabInterest": {
          "description": "Box 9, Specified private activity bond interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "marketDiscount": {
          "description": "Box 10, Market discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondPremium": {
          "description": "Box 11, Bond premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "usBondPremium": {
          "description": "Box 12, Bond premium on Treasury obligations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExemptBondPremium": {
          "description": "Box 13, Bond premium on tax-exempt bond",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cusipNumber": {
          "description": "Box 14, Tax-exempt bond CUSIP no.",
          "uniqueItems": false,
          "type": "string"
        },
        "stateAndLocal": {
          "description": "Boxes 15-17, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignIncomes": {
          "description": "Supplemental foreign income amount information (description is country)",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateTaxExemptIncome": {
          "description": "Supplemental tax-exempt income by state (description is state)",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099K": {
      "id": "Form1099K",
      "description": "Merchant Card and Third-Party Network Payments, from FILER (1st, 7th boxes as issuer) to PAYEE (4th, 8th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "paymentSettlementEntity": {
          "description": "Check to indicate if FILER is a Payment Settlement Entity (PSE)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "electronicPaymentFacilitator": {
          "description": "Check to indicate if FILER is an Electronic Payment Facilitator (EPF) / Other third party",
          "uniqueItems": false,
          "type": "boolean"
        },
        "paymentCard": {
          "description": "Check to indicate transactions reported are: Payment card",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thirdPartyNetwork": {
          "description": "Check to indicate transactions reported are: Third party network",
          "uniqueItems": false,
          "type": "boolean"
        },
        "pseName": {
          "description": "PSE's name",
          "uniqueItems": false,
          "type": "string"
        },
        "psePhone": {
          "description": "PSE's phone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension1"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossAmount": {
          "description": "Box 1a, Gross amount of payment card/third party network transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cardNotPresent": {
          "description": "Box 1b, Card Not Present Transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantCategoryCode": {
          "description": "Box 2, Merchant category code",
          "uniqueItems": false,
          "type": "string"
        },
        "numberOfTransactions": {
          "description": "Box 3, Number of purchase transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "monthAmounts": {
          "description": "Box 5, Monthly amounts",
          "items": {
            "$ref": "MonthandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateAndLocal": {
          "description": "Boxes 6-8, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099LS": {
      "id": "Form1099LS",
      "description": "Reportable Life Insurance Sale, from ACQUIRER (1st-2nd boxes as issuer) to PAYMENT RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "policyNumber": {
          "description": "Policy number",
          "uniqueItems": false,
          "type": "string"
        },
        "payment": {
          "description": "Box 1, Amount paid to payment recipient",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "saleDate": {
          "description": "Box 2, Date of sale",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "issuerName": {
          "description": "Issuer's name",
          "uniqueItems": false,
          "type": "string"
        },
        "contactNameAddress": {
          "description": "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)",
          "uniqueItems": false,
          "$ref": "NameAddressandPhone"
        }
      }
    },
    "Form1099LTC": {
      "id": "Form1099LTC",
      "description": "Long-Term Care and Accelerated Death Benefits, from PAYER (1st-2nd boxes as issuer) to POLICY HOLDER (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "ltcBenefits": {
          "description": "Box 1, Gross long-term care benefits paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "deathBenefits": {
          "description": "Box 2, Accelerated death benefits paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "perDiem": {
          "description": "Box 3, Per diem",
          "uniqueItems": false,
          "type": "boolean"
        },
        "reimbursedAmount": {
          "description": "Box 3, Reimbursed amount",
          "uniqueItems": false,
          "type": "boolean"
        },
        "insuredId": {
          "description": "INSURED'S taxpayer identification no.",
          "uniqueItems": false,
          "type": "string"
        },
        "insuredNameAddress": {
          "description": "Insured name and address",
          "uniqueItems": false,
          "$ref": "NameandAddress"
        },
        "qualifiedContract": {
          "description": "Box 4, Qualified contract",
          "uniqueItems": false,
          "type": "boolean"
        },
        "chronicallyIll": {
          "description": "Box 5, Chronically ill",
          "uniqueItems": false,
          "type": "boolean"
        },
        "terminallyIll": {
          "description": "Box 5, Terminally ill",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateCertified": {
          "description": "Date certified",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Form1099MISC": {
      "id": "Form1099MISC",
      "description": "Miscellaneous Income, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "rents": {
          "description": "Box 1, Rents",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "description": "Box 2, Royalties",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 3, Other income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fishingBoatProceeds": {
          "description": "Box 5, Fishing boat proceeds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicalHealthPayment": {
          "description": "Box 6, Medical and health care payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payerDirectSales": {
          "description": "Box 7, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale",
          "uniqueItems": false,
          "type": "boolean"
        },
        "substitutePayments": {
          "description": "Box 8, Substitute payments in lieu of dividends or interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cropInsurance": {
          "description": "Box 9, Crop insurance proceeds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        },
        "grossAttorney": {
          "description": "Box 10, Gross proceeds paid to an attorney",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fishPurchased": {
          "description": "Box 11, Fish purchased for resale",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section409ADeferrals": {
          "description": "Box 12, Section 409A deferrals",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAccountTaxCompliance": {
          "description": "Box 13, FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "excessGolden": {
          "description": "Box 14, Excess golden parachute payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonQualifiedDeferredCompensation": {
          "description": "Box 15, Nonqualified Deferred Compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 16-18, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099NEC": {
      "id": "Form1099NEC",
      "description": "Non-Employee Compensation, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        },
        "nonEmployeeCompensation": {
          "description": "Box 1, Nonemployee compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payerDirectSales": {
          "description": "Box 2, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale",
          "uniqueItems": false,
          "type": "boolean"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 5-7, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099OID": {
      "id": "Form1099OID",
      "description": "Original Issue Discount, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignAccountTaxCompliance": {
          "description": "FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "originalIssueDiscount": {
          "description": "Box 1, Original issue discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherPeriodicInterest": {
          "description": "Box 2, Other periodic interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earlyWithdrawalPenalty": {
          "description": "Box 3, Early withdrawal penalty",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "marketDiscount": {
          "description": "Box 5, Market discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "acquisitionPremium": {
          "description": "Box 6, Acquisition premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "oidDescription": {
          "description": "Box 7, Description",
          "uniqueItems": false,
          "type": "string"
        },
        "discountOnTreasuryObligations": {
          "description": "Box 8, Original issue discount on U.S. Treasury obligations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentExpenses": {
          "description": "Box 9, Investment expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondPremium": {
          "description": "Box 10, Bond premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExemptOid": {
          "description": "Box 11, Tax-exempt OID",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 12-14, State and Local tax withheld",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateExemptOid": {
          "description": "Supplemental: State name and tax-exempt OID by state",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099PATR": {
      "id": "Form1099PATR",
      "description": "Taxable Distributions Received From Cooperatives, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "patronageDividends": {
          "description": "Box 1, Patronage dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonpatronageDistributions": {
          "description": "Box 2, Nonpatronage distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "perUnitRetainAllocations": {
          "description": "Box 3, Per-unit retain allocations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "redemption": {
          "description": "Box 5, Redemption of nonqualified notices and retain allocations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199Deduction": {
          "description": "Box 6, Section 199A(g) deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedPayments": {
          "description": "Box 7, Qualified payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199QualifiedItems": {
          "description": "Box 8, Section 199A(a) qualified items",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199SstbItems": {
          "description": "Box 9, Section 199A(a) SSTB (Specified Service Trade or Business) items",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentCredit": {
          "description": "Box 10, Investment credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "workOpportunityCredit": {
          "description": "Box 11, Work opportunity credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherCreditsAndDeductions": {
          "description": "Box 12, Other credits and deductions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedCoop": {
          "description": "Box 13, Specified Cooperative",
          "uniqueItems": false,
          "type": "boolean"
        },
        "stateAndLocal": {
          "description": "State and Local tax withholding, from IRS's IRIS schema",
          "uniqueItems": false,
          "$ref": "StateandLocalTaxWithholding2"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099Q": {
      "id": "Form1099Q",
      "description": "Payments From Qualified Education Programs, from PAYER/TRUSTEE (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earnings": {
          "description": "Box 2, Earnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "basis": {
          "description": "Box 3, Basis",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "trusteeToTrustee": {
          "description": "Box 4, Trustee-to-trustee transfer",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tuitionPlanPrivate": {
          "description": "Box 5a, Qualified tuition plan - Private",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tuitionPlanPublic": {
          "description": "Box 5b, Qualified tuition plan - Public",
          "uniqueItems": false,
          "type": "boolean"
        },
        "coverdellEsa": {
          "description": "Box 5c, Coverdell ESA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "recipientIsNotBeneficiary": {
          "description": "Box 6, If this box is checked, the recipient is not the designated beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fairMarketValue": {
          "description": "If fair market value (FMV) is included, see Pub. 970, Tax Benefits for Education, for how to figure earnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099QA": {
      "id": "Form1099QA",
      "description": "Distributions From ABLE Accounts, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earnings": {
          "description": "Box 2, Earnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "basis": {
          "description": "Box 3, Basis",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "programTransfer": {
          "description": "Box 4, Program-to-program transfer",
          "uniqueItems": false,
          "type": "boolean"
        },
        "terminated": {
          "description": "Box 5, Check if ABLE account terminated in current year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "notBeneficiary": {
          "description": "Box 6, Check if the recipient is not the designated beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099R": {
      "id": "Form1099R",
      "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc., from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "allocableToIRR": {
          "description": "Box 10, Amount allocable to IRR within 5 years",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "firstYearOfRoth": {
          "description": "Box 11, First year of designated Roth contributions. A four-digit year. (Like `TaxYear` definition, but lower minimum since first year of Roth IRAs was 1997)",
          "minimum": "1997",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "recipientAccountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxableAmount": {
          "description": "Box 2a, Taxable amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxableAmountNotDetermined": {
          "description": "Box 2b, Taxable amount not determined",
          "uniqueItems": false,
          "type": "boolean"
        },
        "totalDistribution": {
          "description": "Box 2c, Total distribution",
          "uniqueItems": false,
          "type": "boolean"
        },
        "capitalGain": {
          "description": "Box 3, Capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeContributions": {
          "description": "Box 5, Employee contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netUnrealizedAppreciation": {
          "description": "Box 6, Net unrealized appreciation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "distributionCodes": {
          "description": "Box 7, Distribution codes",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "iraSepSimple": {
          "description": "Box 7b, IRA/SEP/SIMPLE",
          "uniqueItems": false,
          "type": "boolean"
        },
        "otherAmount": {
          "description": "Box 8, Other",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherPercent": {
          "description": "Box 8, Other percent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "yourPercentOfTotal": {
          "description": "Box 9a, Your percent of total distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalEmployeeContributions": {
          "description": "Box 9b, Total employee contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAccountTaxCompliance": {
          "description": "Box 12, FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateOfPayment": {
          "description": "Box 13, Date of payment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "stateAndLocal": {
          "description": "Boxes 14-19, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099S": {
      "id": "Form1099S",
      "description": "Proceeds From Real Estate Transactions, from FILER (1st-2nd boxes as issuer) to TRANSFEROR (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account or escrow number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfClosing": {
          "description": "Box 1, Date of closing",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grossProceeds": {
          "description": "Box 2, Gross proceeds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "addressOrLegalDescription": {
          "description": "Box 3, Address or legal description",
          "uniqueItems": false,
          "type": "string"
        },
        "receivedOtherConsideration": {
          "description": "Box 4, Transferor received or will receive property or services as part of the consideration (if checked)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "foreignPerson": {
          "description": "Box 5, If checked, transferor is a foreign person (nonresident alien, foreign partnership, foreign estate, or foreign trust)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "realEstateTax": {
          "description": "Box 6, Buyer's part of real estate tax",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099SA": {
      "id": "Form1099SA",
      "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA, from PAYER (1st-2nd boxes as issuer) to RECIPIENT (3rd-4th boxes)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earnings": {
          "description": "Box 2, Earnings on excess contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "distributionCode": {
          "description": "Box 3, Distribution code",
          "uniqueItems": false,
          "type": "string"
        },
        "fairMarketValue": {
          "description": "Box 4, FMV on date of death",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "hsa": {
          "description": "Box 5a, HSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "archerAccount": {
          "description": "Box 5b, Archer MSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "medicalSavingsAccount": {
          "description": "Box 5c, Medicare Advantage (MA) MSA",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099SB": {
      "id": "Form1099SB",
      "description": "Seller's Investment in Life Insurance Contract, from ISSUER (1st-2nd boxes) to SELLER (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "policyNumber": {
          "description": "Policy number",
          "uniqueItems": false,
          "type": "string"
        },
        "contractInvestment": {
          "description": "Box 1, Investment in contract",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "surrenderAmount": {
          "description": "Box 2, Surrender amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "contactNameAddress": {
          "description": "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)",
          "uniqueItems": false,
          "$ref": "NameAddressandPhone1"
        }
      }
    },
    "Form1120SK1": {
      "id": "Form1120SK1",
      "description": "Shareholder's Share of Income, Deductions, Credits, etc., from Corporation (boxes A-B as issuer) to Shareholder (boxes E-F as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "finalK1": {
          "description": "Final K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendedK1": {
          "description": "Amended K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "irsCenter": {
          "description": "Box C, IRS Center where corporation filed return",
          "uniqueItems": false,
          "type": "string"
        },
        "corporationBeginningShares": {
          "description": "Box D, Corporation's total number of shares, Beginning of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "corporationEndingShares": {
          "description": "Box D, Corporation's total number of shares, End of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "percentOwnership": {
          "description": "Box G, Current year allocation percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "beginningShares": {
          "description": "Box H, Shareholder's number of shares, Beginning of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "endingShares": {
          "description": "Box H, Shareholder's number of shares, End of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "beginningLoans": {
          "description": "Box I, Loans from shareholder, Beginning of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "endingLoans": {
          "description": "Box I, Loans from shareholder, Ending of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryIncome": {
          "description": "Box 1, Ordinary business income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netRentalRealEstateIncome": {
          "description": "Box 2, Net rental real estate income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRentalIncome": {
          "description": "Box 3, Other net rental income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestIncome": {
          "description": "Box 4, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryDividends": {
          "description": "Box 5a, Ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 5b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "description": "Box 6, Royalties",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netShortTermGain": {
          "description": "Box 7, Net short-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netLongTermGain": {
          "description": "Box 8a, Net long-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 8b, Collectibles (28%) gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 8c, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "net1231Gain": {
          "description": "Box 9, Net section 1231 gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 10, Other income (loss)",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "section179Deduction": {
          "description": "Box 11, Section 179 deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherDeductions": {
          "description": "Box 12, Other deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "credits": {
          "description": "Box 13, Credits",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scheduleK3": {
          "description": "Box 14, Schedule K-3 is attached",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amtItems": {
          "description": "Box 15, Alternative minimum tax (AMT) items",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "basisItems": {
          "description": "Box 16, Items affecting shareholder basis",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "otherInfo": {
          "description": "Box 17, Other information",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "multipleAtRiskActivities": {
          "description": "Box 18, More than one activity for at-risk purposes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "multiplePassiveActivities": {
          "description": "Box 19, More than one activity for passive activity purposes",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form2439": {
      "id": "Form2439",
      "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains, from RIC or REIT (1st-2nd boxes as issuer) to Shareholder (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "undistributedLongTermCapitalGains": {
          "description": "Box 1a, Total undistributed long-term capital gains",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 1b, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section1202Gain": {
          "description": "Box 1c, Section 1202 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 1d, Collectibles (28%) gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxPaid": {
          "description": "Box 2, Tax paid by the RIC or REIT on the box 1a gains",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form3921": {
      "id": "Form3921",
      "description": "Exercise of an Incentive Stock Option Under Section 422(b), from TRANSFEROR (1st-2nd boxes as issuer) to EMPLOYEE (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "optionGrantDate": {
          "description": "Box 1, Date option granted",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "optionExerciseDate": {
          "description": "Box 2, Date option exercised",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "exercisePrice": {
          "description": "Box 3, Exercise price per share",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "exerciseMarketValue": {
          "description": "Box 4, Fair market value per share on exercise date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfShares": {
          "description": "Box 5, Number of shares transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "corporation": {
          "description": "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred",
          "uniqueItems": false,
          "$ref": "TaxParty4"
        }
      }
    },
    "Form3922": {
      "id": "Form3922",
      "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c), from CORPORATION (1st-2nd boxes as issuer) to EMPLOYEE (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "optionGrantDate": {
          "description": "Box 1, Date option granted",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "optionExerciseDate": {
          "description": "Box 2, Date option exercised",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grantMarketValue": {
          "description": "Box 3, Fair market value per share on grant date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "exerciseMarketValue": {
          "description": "Box 4, Fair market value per share on exercise date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "exercisePrice": {
          "description": "Box 5, Exercise price paid per share",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfShares": {
          "description": "Box 6, Number of shares transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "titleTransferDate": {
          "description": "Box 7, Date legal title transferred",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grantDateExercisePrice": {
          "description": "Box 8, Exercise price per share determined as if the option was exercised on the option granted date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form5498": {
      "id": "Form5498",
      "description": "IRA Contribution Information, from TRUSTEE/ISSUER (1st-2nd boxes as issuer) to PARTICIPANT (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "iraContributions": {
          "description": "Box 1, IRA contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributions": {
          "description": "Box 2, Rollover contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rothIraConversion": {
          "description": "Box 3, Roth IRA conversion amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recharacterizedContributions": {
          "description": "Box 4, Recharacterized contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 5, Fair market value of account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lifeInsuranceCost": {
          "description": "Box 6, Life insurance cost included in box 1",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ira": {
          "description": "Box 7a, IRA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "sep": {
          "description": "Box 7b, SEP",
          "uniqueItems": false,
          "type": "boolean"
        },
        "simple": {
          "description": "Box 7c, SIMPLE",
          "uniqueItems": false,
          "type": "boolean"
        },
        "rothIra": {
          "description": "Box 7d, Roth IRA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "sepContributions": {
          "description": "Box 8, SEP contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "simpleContributions": {
          "description": "Box 9, SIMPLE contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rothIraContributions": {
          "description": "Box 10, Roth IRA contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rmdNextYear": {
          "description": "Box 11, If checked, required minimum distribution for next year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "rmdDate": {
          "description": "Box 12a, RMD date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "rmdAmount": {
          "description": "Box 12b, RMD amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "postponedContribution": {
          "description": "Box 13a, Postponed contribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "postponedYear": {
          "description": "Box 13b, Year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "postponedCode": {
          "description": "Box 13c, Code",
          "uniqueItems": false,
          "type": "string"
        },
        "repayments": {
          "description": "Box 14a, Repayments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repayCode": {
          "description": "Box 14b, Code",
          "uniqueItems": false,
          "type": "string"
        },
        "fmvSpecifiedAssets": {
          "description": "Box 15a, FMV of certain specified assets",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedCodes": {
          "description": "Box 15b, Code(s)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form5498ESA": {
      "id": "Form5498ESA",
      "description": "Coverdell ESA Contribution Information, from TRUSTEE/ISSUER (1st-2nd boxes as issuer) to BENEFICIARY (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "coverdellEsaContributions": {
          "description": "Box 1, Coverdell ESA contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributions": {
          "description": "Box 2, Rollover contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form5498QA": {
      "id": "Form5498QA",
      "description": "ABLE Account Contribution Information, from ISSUER (1st-2nd boxes) to BENEFICIARY (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "ableContributions": {
          "description": "Box 1, ABLE contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rollovers": {
          "description": "Box 2, ABLE to ABLE Rollovers",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cumulativeContributions": {
          "description": "Box 3, Cumulative contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 4, Fair market value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "openedInTaxYear": {
          "description": "Box 5, Check if account opened in current tax year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "basisOfDisabilityCode": {
          "description": "Box 6, Basis of eligibility",
          "uniqueItems": false,
          "type": "string"
        },
        "typeOfDisabilityCode": {
          "description": "Box 7, Code",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form5498SA": {
      "id": "Form5498SA",
      "description": "HSA, Archer MSA, or Medicare Advantage (MA) MSA Information, from TRUSTEE (1st-2nd boxes as issuer) to PARTICIPANT (3rd-4th boxes as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "msaContributions": {
          "description": "Box 1, Employee or self-employed person's Archer MSA contributions made in current and following years for current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalContributions": {
          "description": "Box 2, Total contributions made in current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalPostYearEnd": {
          "description": "Box 3, Total HSA or Archer MSA contributions made in following year for current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributions": {
          "description": "Box 4, Rollover contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 5, Fair market value of HSA, Archer MSA, or Medicare Advantage (MA) MSA",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "hsa": {
          "description": "Box 6a, HSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "archer": {
          "description": "Box 6b, Archer MSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "maMsa": {
          "description": "Box 6c, Medicare Advantage (MA) MSA",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "TaxData": {
      "id": "TaxData",
      "description": "Tax data container for API requests and responses",
      "required": [],
      "properties": {
        "businessIncomeStatement": {
          "description": "Business Income Statement for IRS Form 1040 Schedule C",
          "uniqueItems": false,
          "$ref": "BusinessIncomeStatement"
        },
        "cryptocurrencyTaxStatement": {
          "description": "Cryptocurrency Tax Statement list",
          "uniqueItems": false,
          "$ref": "CryptocurrencyTaxStatementlist1"
        },
        "farmIncomeStatement": {
          "description": "Farm Income Statement for IRS Form 1040 Schedule F",
          "uniqueItems": false,
          "$ref": "FarmIncomeStatement"
        },
        "farmRentalIncomeStatement": {
          "description": "Farm Rental Income Statement for IRS Form 4835",
          "uniqueItems": false,
          "$ref": "FarmRentalIncomeStatement"
        },
        "rentalIncomeStatement": {
          "description": "Rental Income Statement for IRS Form 1040 Schedule E",
          "uniqueItems": false,
          "$ref": "RentalIncomeStatement"
        },
        "royaltyIncomeStatement": {
          "description": "Royalty Income Statement for IRS Form 1040 Schedule E",
          "uniqueItems": false,
          "$ref": "RoyaltyIncomeStatement"
        },
        "tax1041K1": {
          "description": "Beneficiary's Share of Income, Deductions, Credits, etc.",
          "uniqueItems": false,
          "$ref": "Form1041K11"
        },
        "tax1042S": {
          "description": "Foreign Person's U.S. Source Income Subject to Withholding",
          "uniqueItems": false,
          "$ref": "Form1042S1"
        },
        "tax1065K1": {
          "description": "Partner's Share of Income, Deductions, Credits, etc.",
          "uniqueItems": false,
          "$ref": "Form1065K11"
        },
        "tax1095A": {
          "description": "Health Insurance Marketplace Statement",
          "uniqueItems": false,
          "$ref": "Form1095A1"
        },
        "tax1095B": {
          "description": "Health Coverage",
          "uniqueItems": false,
          "$ref": "Form1095B1"
        },
        "tax1095C": {
          "description": "Employer-Provided Health Insurance Offer and Coverage",
          "uniqueItems": false,
          "$ref": "Form1095C1"
        },
        "tax1097Btc": {
          "description": "Bond Tax Credit",
          "uniqueItems": false,
          "$ref": "Form1097BTC1"
        },
        "tax1098": {
          "description": "Mortgage Interest Statement",
          "uniqueItems": false,
          "$ref": "Form10981"
        },
        "tax1098C": {
          "description": "Contributions of Motor Vehicles, Boats, and Airplanes",
          "uniqueItems": false,
          "$ref": "Form1098C1"
        },
        "tax1098E": {
          "description": "Student Loan Interest Statement",
          "uniqueItems": false,
          "$ref": "Form1098E1"
        },
        "tax1098Ma": {
          "description": "Mortgage Assistance Payments",
          "uniqueItems": false,
          "$ref": "Form1098MA1"
        },
        "tax1098Q": {
          "description": "Qualifying Longevity Annuity Contract Information",
          "uniqueItems": false,
          "$ref": "Form1098Q1"
        },
        "tax1098T": {
          "description": "Tuition Statement",
          "uniqueItems": false,
          "$ref": "Form1098T1"
        },
        "tax1099A": {
          "description": "Acquisition or Abandonment of Secured Property",
          "uniqueItems": false,
          "$ref": "Form1099A1"
        },
        "tax1099B": {
          "description": "Proceeds From Broker and Barter Exchange Transactions",
          "uniqueItems": false,
          "$ref": "Form1099B1"
        },
        "tax1099C": {
          "description": "Cancellation of Debt",
          "uniqueItems": false,
          "$ref": "Form1099C1"
        },
        "tax1099Cap": {
          "description": "Changes in Corporate Control and Capital Structure",
          "uniqueItems": false,
          "$ref": "Form1099CAP1"
        },
        "tax1099ConsolidatedStatement": {
          "description": "Consolidated Statement for combined IRS Form 1099s",
          "uniqueItems": false,
          "$ref": "Form1099ConsolidatedStatement1"
        },
        "tax1099Div": {
          "description": "Dividends and Distributions",
          "uniqueItems": false,
          "$ref": "Form1099DIV1"
        },
        "tax1099G": {
          "description": "Certain Government Payments",
          "uniqueItems": false,
          "$ref": "Form1099G1"
        },
        "tax1099H": {
          "description": "Health Coverage Tax Credit (HCTC) Advance Payments",
          "uniqueItems": false,
          "$ref": "Form1099H1"
        },
        "tax1099Int": {
          "description": "Interest Income",
          "uniqueItems": false,
          "$ref": "Form1099INT1"
        },
        "tax1099K": {
          "description": "Merchant Card and Third-Party Network Payments",
          "uniqueItems": false,
          "$ref": "Form1099K1"
        },
        "tax1099Ls": {
          "description": "Reportable Life Insurance Sale",
          "uniqueItems": false,
          "$ref": "Form1099LS1"
        },
        "tax1099Ltc": {
          "description": "Long-Term Care and Accelerated Death Benefits",
          "uniqueItems": false,
          "$ref": "Form1099LTC1"
        },
        "tax1099Misc": {
          "description": "Miscellaneous Income",
          "uniqueItems": false,
          "$ref": "Form1099MISC1"
        },
        "tax1099Nec": {
          "description": "Nonemployee Compensation",
          "uniqueItems": false,
          "$ref": "Form1099NEC1"
        },
        "tax1099Oid": {
          "description": "Original Issue Discount",
          "uniqueItems": false,
          "$ref": "Form1099OID1"
        },
        "tax1099Patr": {
          "description": "Taxable Distributions Received From Cooperatives",
          "uniqueItems": false,
          "$ref": "Form1099PATR1"
        },
        "tax1099Q": {
          "description": "Payments From Qualified Education Programs",
          "uniqueItems": false,
          "$ref": "Form1099Q1"
        },
        "tax1099Qa": {
          "description": "Distributions From ABLE Accounts",
          "uniqueItems": false,
          "$ref": "Form1099QA1"
        },
        "tax1099R": {
          "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc.",
          "uniqueItems": false,
          "$ref": "Form1099R1"
        },
        "tax1099S": {
          "description": "Proceeds From Real Estate Transactions",
          "uniqueItems": false,
          "$ref": "Form1099S1"
        },
        "tax1099Sa": {
          "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA",
          "uniqueItems": false,
          "$ref": "Form1099SA1"
        },
        "tax1099Sb": {
          "description": "Seller's Investment in Life Insurance Contract",
          "uniqueItems": false,
          "$ref": "Form1099SB1"
        },
        "tax1120SK1": {
          "description": "Shareholder's Share of Income, Deductions, Credits, etc.",
          "uniqueItems": false,
          "$ref": "Form1120SK11"
        },
        "tax2439": {
          "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains",
          "uniqueItems": false,
          "$ref": "Form24391"
        },
        "tax3921": {
          "description": "Exercise of an Incentive Stock Option Under Section 422(b)",
          "uniqueItems": false,
          "$ref": "Form39211"
        },
        "tax3922": {
          "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)",
          "uniqueItems": false,
          "$ref": "Form39221"
        },
        "tax5227K1": {
          "description": "Split-Interest Trust Beneficiary's schedule K-1",
          "uniqueItems": false,
          "$ref": "Form1041K1"
        },
        "tax5498": {
          "description": "IRA Contribution Information",
          "uniqueItems": false,
          "$ref": "Form54981"
        },
        "tax5498Esa": {
          "description": "Coverdell ESA Contribution Information",
          "uniqueItems": false,
          "$ref": "Form5498ESA1"
        },
        "tax5498Qa": {
          "description": "ABLE Account Contribution Information",
          "uniqueItems": false,
          "$ref": "Form5498QA1"
        },
        "tax5498Sa": {
          "description": "HSA, Archer MSA, or Medicare Advantage MSA Information",
          "uniqueItems": false,
          "$ref": "Form5498SA1"
        },
        "taxW2": {
          "description": "Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW24"
        },
        "taxW2C": {
          "description": "IRS form W-2c, Corrected Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW2c2"
        },
        "taxW2G": {
          "description": "Certain Gambling Winnings",
          "uniqueItems": false,
          "$ref": "FormW2G2"
        },
        "taxRefundDirectDeposit": {
          "description": "Tax refund direct deposit information",
          "uniqueItems": false,
          "$ref": "TaxRefundDirectDeposit2"
        }
      }
    },
    "TaxDataforQR": {
      "id": "TaxDataforQR",
      "description": "Tax data container for QR Code purposes",
      "required": [],
      "properties": {
        "businessIncomeStatement": {
          "description": "Business Income Statement for IRS Form 1040 Schedule C",
          "uniqueItems": false,
          "$ref": "BusinessIncomeStatement"
        },
        "cryptocurrencyTaxStatement": {
          "description": "Cryptocurrency Tax Statement list",
          "uniqueItems": false,
          "$ref": "CryptocurrencyTaxStatementlist1"
        },
        "farmIncomeStatement": {
          "description": "Farm Income Statement for IRS Form 1040 Schedule F",
          "uniqueItems": false,
          "$ref": "FarmIncomeStatement"
        },
        "farmRentalIncomeStatement": {
          "description": "Farm Rental Income Statement for IRS Form 4835",
          "uniqueItems": false,
          "$ref": "FarmRentalIncomeStatement"
        },
        "rentalIncomeStatement": {
          "description": "Rental Income Statement for IRS Form 1040 Schedule E",
          "uniqueItems": false,
          "$ref": "RentalIncomeStatement"
        },
        "royaltyIncomeStatement": {
          "description": "Royalty Income Statement for IRS Form 1040 Schedule E",
          "uniqueItems": false,
          "$ref": "RoyaltyIncomeStatement"
        },
        "tax1041K1": {
          "description": "Beneficiary's Share of Income, Deductions, Credits, etc.",
          "uniqueItems": false,
          "$ref": "Form1041K11"
        },
        "tax1042S": {
          "description": "Foreign Person's U.S. Source Income Subject to Withholding",
          "uniqueItems": false,
          "$ref": "Form1042S1"
        },
        "tax1065K1": {
          "description": "Partner's Share of Income, Deductions, Credits, etc.",
          "uniqueItems": false,
          "$ref": "Form1065K11"
        },
        "tax1095A": {
          "description": "Health Insurance Marketplace Statement",
          "uniqueItems": false,
          "$ref": "Form1095A1"
        },
        "tax1095B": {
          "description": "Health Coverage",
          "uniqueItems": false,
          "$ref": "Form1095B1"
        },
        "tax1095C": {
          "description": "Employer-Provided Health Insurance Offer and Coverage",
          "uniqueItems": false,
          "$ref": "Form1095C1"
        },
        "tax1097Btc": {
          "description": "Bond Tax Credit",
          "uniqueItems": false,
          "$ref": "Form1097BTC1"
        },
        "tax1098": {
          "description": "Mortgage Interest Statement",
          "uniqueItems": false,
          "$ref": "Form10981"
        },
        "tax1098C": {
          "description": "Contributions of Motor Vehicles, Boats, and Airplanes",
          "uniqueItems": false,
          "$ref": "Form1098C1"
        },
        "tax1098E": {
          "description": "Student Loan Interest Statement",
          "uniqueItems": false,
          "$ref": "Form1098E1"
        },
        "tax1098Ma": {
          "description": "Mortgage Assistance Payments",
          "uniqueItems": false,
          "$ref": "Form1098MA1"
        },
        "tax1098Q": {
          "description": "Qualifying Longevity Annuity Contract Information",
          "uniqueItems": false,
          "$ref": "Form1098Q1"
        },
        "tax1098T": {
          "description": "Tuition Statement",
          "uniqueItems": false,
          "$ref": "Form1098T1"
        },
        "tax1099A": {
          "description": "Acquisition or Abandonment of Secured Property",
          "uniqueItems": false,
          "$ref": "Form1099A1"
        },
        "tax1099B": {
          "description": "Proceeds From Broker and Barter Exchange Transactions",
          "uniqueItems": false,
          "$ref": "Form1099B1"
        },
        "tax1099C": {
          "description": "Cancellation of Debt",
          "uniqueItems": false,
          "$ref": "Form1099C1"
        },
        "tax1099Cap": {
          "description": "Changes in Corporate Control and Capital Structure",
          "uniqueItems": false,
          "$ref": "Form1099CAP1"
        },
        "tax1099ConsolidatedStatement": {
          "description": "Consolidated Statement for combined IRS Form 1099s",
          "uniqueItems": false,
          "$ref": "Form1099ConsolidatedStatement1"
        },
        "tax1099Div": {
          "description": "Dividends and Distributions",
          "uniqueItems": false,
          "$ref": "Form1099DIV1"
        },
        "tax1099G": {
          "description": "Certain Government Payments",
          "uniqueItems": false,
          "$ref": "Form1099G1"
        },
        "tax1099H": {
          "description": "Health Coverage Tax Credit (HCTC) Advance Payments",
          "uniqueItems": false,
          "$ref": "Form1099H1"
        },
        "tax1099Int": {
          "description": "Interest Income",
          "uniqueItems": false,
          "$ref": "Form1099INT1"
        },
        "tax1099K": {
          "description": "Merchant Card and Third-Party Network Payments",
          "uniqueItems": false,
          "$ref": "Form1099K1"
        },
        "tax1099Ls": {
          "description": "Reportable Life Insurance Sale",
          "uniqueItems": false,
          "$ref": "Form1099LS1"
        },
        "tax1099Ltc": {
          "description": "Long-Term Care and Accelerated Death Benefits",
          "uniqueItems": false,
          "$ref": "Form1099LTC1"
        },
        "tax1099Misc": {
          "description": "Miscellaneous Income",
          "uniqueItems": false,
          "$ref": "Form1099MISC1"
        },
        "tax1099Nec": {
          "description": "Nonemployee Compensation",
          "uniqueItems": false,
          "$ref": "Form1099NEC1"
        },
        "tax1099Oid": {
          "description": "Original Issue Discount",
          "uniqueItems": false,
          "$ref": "Form1099OID1"
        },
        "tax1099Patr": {
          "description": "Taxable Distributions Received From Cooperatives",
          "uniqueItems": false,
          "$ref": "Form1099PATR1"
        },
        "tax1099Q": {
          "description": "Payments From Qualified Education Programs",
          "uniqueItems": false,
          "$ref": "Form1099Q1"
        },
        "tax1099Qa": {
          "description": "Distributions From ABLE Accounts",
          "uniqueItems": false,
          "$ref": "Form1099QA1"
        },
        "tax1099R": {
          "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc.",
          "uniqueItems": false,
          "$ref": "Form1099R1"
        },
        "tax1099S": {
          "description": "Proceeds From Real Estate Transactions",
          "uniqueItems": false,
          "$ref": "Form1099S1"
        },
        "tax1099Sa": {
          "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA",
          "uniqueItems": false,
          "$ref": "Form1099SA1"
        },
        "tax1099Sb": {
          "description": "Seller's Investment in Life Insurance Contract",
          "uniqueItems": false,
          "$ref": "Form1099SB1"
        },
        "tax1120SK1": {
          "description": "Shareholder's Share of Income, Deductions, Credits, etc.",
          "uniqueItems": false,
          "$ref": "Form1120SK11"
        },
        "tax2439": {
          "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains",
          "uniqueItems": false,
          "$ref": "Form24391"
        },
        "tax3921": {
          "description": "Exercise of an Incentive Stock Option Under Section 422(b)",
          "uniqueItems": false,
          "$ref": "Form39211"
        },
        "tax3922": {
          "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)",
          "uniqueItems": false,
          "$ref": "Form39221"
        },
        "tax5227K1": {
          "description": "Split-Interest Trust Beneficiary's schedule K-1",
          "uniqueItems": false,
          "$ref": "Form1041K1"
        },
        "tax5498": {
          "description": "IRA Contribution Information",
          "uniqueItems": false,
          "$ref": "Form54981"
        },
        "tax5498Esa": {
          "description": "Coverdell ESA Contribution Information",
          "uniqueItems": false,
          "$ref": "Form5498ESA1"
        },
        "tax5498Qa": {
          "description": "ABLE Account Contribution Information",
          "uniqueItems": false,
          "$ref": "Form5498QA1"
        },
        "tax5498Sa": {
          "description": "HSA, Archer MSA, or Medicare Advantage MSA Information",
          "uniqueItems": false,
          "$ref": "Form5498SA1"
        },
        "taxW2": {
          "description": "Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW24"
        },
        "taxW2C": {
          "description": "IRS form W-2c, Corrected Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW2c2"
        },
        "taxW2G": {
          "description": "Certain Gambling Winnings",
          "uniqueItems": false,
          "$ref": "FormW2G2"
        },
        "taxRefundDirectDeposit": {
          "description": "Tax refund direct deposit information",
          "uniqueItems": false,
          "$ref": "TaxRefundDirectDeposit2"
        },
        "version": {
          "description": "[Financial Data Exchange (FDX)](https://financialdataexchange.org/) schema version number (e.g. \"V5.0\").",
          "enum": [
            "V1.0",
            "V2.0",
            "V2.1",
            "V3.0",
            "V4.0",
            "V4.1",
            "V4.2",
            "V4.5",
            "V4.6",
            "V4.6.1",
            "V4.6.2",
            "V5.0",
            "V5.0.0",
            "V5.0.1",
            "V5.0.2",
            "V5.0.3",
            "V5.1",
            "V5.1.0",
            "V5.1.1",
            "V5.1.2",
            "V5.2",
            "V5.2.0",
            "V5.2.1",
            "V5.2.2",
            "V5.2.3",
            "V5.2.4",
            "V5.3",
            "V5.3.0",
            "V5.3.1",
            "V5.3.2",
            "V5.3.3",
            "V6.0.0",
            "V6.1.0",
            "V6.2.0"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "softwareId": {
          "description": "The FDX registration ID of company or software generating this tax data",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxFormAttribute": {
      "id": "TaxFormAttribute",
      "description": "An additional tax form attribute for use when a defined field is not available",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of attribute",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "Value of attribute",
          "uniqueItems": false,
          "type": "string"
        },
        "boxNumber": {
          "description": "Box number on a tax form, if any",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Tax form code for the given box number, if any",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty": {
      "id": "TaxParty",
      "description": "Legal entity for issuer or recipient, used across all tax forms",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxRefundDirectDeposit": {
      "id": "TaxRefundDirectDeposit",
      "description": "IRS Form 8888 Direct Deposit Information",
      "required": [],
      "properties": {
        "institutionName": {
          "description": "Name of institution",
          "uniqueItems": false,
          "type": "string"
        },
        "rtn": {
          "description": "Routing transit number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNickName": {
          "description": "Account nickname",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxStatement": {
      "id": "TaxStatement",
      "description": "Tax statement containing one or more tax forms",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatementList": {
      "id": "TaxStatementList",
      "description": "Tax statement list containing one or more tax statements",
      "required": [],
      "properties": {
        "statements": {
          "description": "The list of tax statements",
          "items": {
            "$ref": "TaxStatement"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FormW2": {
      "id": "FormW2",
      "description": "Wage and Tax Statement, from Employer (boxes b-c as issuer) to Employee (boxes a, e-f as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "controlNumber": {
          "description": "Control number",
          "uniqueItems": false,
          "type": "string"
        },
        "wages": {
          "description": "Box 1, Wages, tips, other compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 2, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityWages": {
          "description": "Box 3, Social security wages",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTaxWithheld": {
          "description": "Box 4, Social security tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareWages": {
          "description": "Box 5, Medicare wages and tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareTaxWithheld": {
          "description": "Box 6, Medicare tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTips": {
          "description": "Box 7, Social security tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "allocatedTips": {
          "description": "Box 8, Allocated tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dependentCareBenefit": {
          "description": "Box 10, Dependent care benefits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonQualifiedPlan": {
          "description": "Box 11, Nonqualified plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "codes": {
          "description": "Box 12, Codes and amounts",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "statutory": {
          "description": "Box 13, Statutory employee",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retirementPlan": {
          "description": "Box 13, Retirement plan",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thirdPartySickPay": {
          "description": "Box 13, Third-party sick pay",
          "uniqueItems": false,
          "type": "boolean"
        },
        "esppQualified": {
          "description": "Employee Stock Purchase Plan Qualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "esppNonQualified": {
          "description": "Employee Stock Purchase Plan Nonqualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "other": {
          "description": "Box 14, Other descriptions and amounts",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateAndLocal": {
          "description": "Boxes 15-20, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FormW2c": {
      "id": "FormW2c",
      "description": "IRS form W-2c, Corrected Wage and Tax Statement, from Employer (boxes a-b as issuer) to Employee (boxes d, h-i as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "correctedTinOrName": {
          "description": "Box e, Corrected SSN and/or name",
          "uniqueItems": false,
          "type": "boolean"
        },
        "previousEmployeeTin": {
          "description": "Box f, Employee's previously reported SSN",
          "uniqueItems": false,
          "type": "string"
        },
        "previousEmployeeName": {
          "description": "Box g, Employee's previously reported name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "originalW2": {
          "description": "Boxes 1-20 of Previously reported Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW21"
        },
        "correctedW2": {
          "description": "Boxes 1-20 of Correct information Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW22"
        }
      }
    },
    "FormW2G": {
      "id": "FormW2G",
      "description": "Certain Gambling Winnings, from PAYER (1st-3rd boxes as issuer) to WINNER (boxes 4th-6th and 9 as recipient)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "winnings": {
          "description": "Box 1, Reportable winnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dateWon": {
          "description": "Box 2, Date won",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "typeOfWager": {
          "description": "Box 3, Type of wager",
          "uniqueItems": false,
          "type": "string"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transaction": {
          "description": "Box 5, Transaction",
          "uniqueItems": false,
          "type": "string"
        },
        "race": {
          "description": "Box 6, Race",
          "uniqueItems": false,
          "type": "string"
        },
        "identicalWinnings": {
          "description": "Box 7, Winnings from identical wagers",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cashier": {
          "description": "Box 8, Cashier",
          "uniqueItems": false,
          "type": "string"
        },
        "window": {
          "description": "Box 10, Window",
          "uniqueItems": false,
          "type": "string"
        },
        "firstId": {
          "description": "Box 11, First I.D.",
          "uniqueItems": false,
          "type": "string"
        },
        "secondId": {
          "description": "Box 12, Second I.D.",
          "uniqueItems": false,
          "type": "string"
        },
        "stateAndLocal": {
          "description": "Boxes 13-18, State and Local tax withholding, use income fields for state (box 14) and local (box 16) winnings amounts",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "BasicAuthCredentials1": {
      "id": "BasicAuthCredentials1",
      "description": "The Basic Authentication credentials to retrieve a tax form",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Confidential and unique identifier of the tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "passcode": {
          "description": "Unique, randomized and restricted password for this document",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CryptocurrencyTaxStatementlist1": {
      "id": "CryptocurrencyTaxStatementlist1",
      "description": "Cryptocurrency Tax Statement list",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "gainsAndLosses": {
          "description": "The list of cryptocurrency gains and losses",
          "items": {
            "$ref": "Gainorlossfromcryptocurrencytransaction"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1042SAgent1": {
      "id": "Form1042SAgent1",
      "description": "Boxes 12a-i, Withholding agent",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1042SRecipient1": {
      "id": "Form1042SRecipient1",
      "description": "Boxes 13a-j, 13l, Recipient for Form 1042-S",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        },
        "lobCode": {
          "description": "Box 13j, Recipient's LOB code, if any",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Box 13l, Recipient's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Form1042S1": {
      "id": "Form1042S1",
      "description": "Foreign Person's U.S. Source Income Subject to Withholding",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "formId": {
          "description": "Unique form identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "amended": {
          "description": "Amended",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendmentNumber": {
          "description": "Amendment number",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "incomeTypeCode": {
          "description": "Box 1, Income code",
          "uniqueItems": false,
          "type": "string"
        },
        "grossIncome": {
          "description": "Box 2, Gross income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "chapterIndicator": {
          "description": "Box 3, Chapter indicator",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3ExemptionCode": {
          "description": "Box 3a, Exemption code",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3TaxRate": {
          "description": "Box 3b, Tax rate",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ch4ExemptionCode": {
          "description": "Box 4a, Exemption code",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4TaxRate": {
          "description": "Box 4b, Tax rate",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "withholdingAllowance": {
          "description": "Box 5, Withholding allowance",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netIncome": {
          "description": "Box 6, Net income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 7a, Federal tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "escrowProceduresApplied": {
          "description": "Box 7b, Check if federal tax withheld was not deposited with the IRS because escrow procedures were applied",
          "uniqueItems": false,
          "type": "boolean"
        },
        "subsequentYear": {
          "description": "Box 7c, Check if withholding occurred in subsequent year with respect to a partnership interest",
          "uniqueItems": false,
          "type": "boolean"
        },
        "otherAgentsTaxWithheld": {
          "description": "Box 8, Tax withheld by other agents",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recipientRepaidAmount": {
          "description": "Box 9, Overwithheld tax repaid to recipient pursuant to adjustment procedures",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalTaxWithholdingCredit": {
          "description": "Box 10, Total withholding credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "withholdingAgentTaxPaid": {
          "description": "Box 11, Tax paid by withholding agent (amounts not withheld)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "withholdingAgent": {
          "description": "Boxes 12a-i, Withholding agent",
          "uniqueItems": false,
          "$ref": "Form1042SAgent1"
        },
        "form1042Recipient": {
          "description": "Boxes 13a-j, 13l, Recipient for Form 1042-S",
          "uniqueItems": false,
          "$ref": "Form1042SRecipient1"
        },
        "accountNumber": {
          "description": "Box 13k, Recipient account number",
          "uniqueItems": false,
          "type": "string"
        },
        "primary": {
          "description": "Boxes 14a-b, Primary Withholding Agent",
          "uniqueItems": false,
          "$ref": "Form1042SAgent2"
        },
        "prorataBasisReporting": {
          "description": "Box 15, Check if pro-rata basis reporting",
          "uniqueItems": false,
          "type": "boolean"
        },
        "intermediary": {
          "description": "Boxes 15a-i, Intermediary or flow thru entity",
          "uniqueItems": false,
          "$ref": "Form1042SAgent3"
        },
        "payer": {
          "description": "Boxes 16a-e, Payer",
          "uniqueItems": false,
          "$ref": "Form1042SAgent4"
        },
        "stateAndLocal": {
          "description": "Box 17, State and Local tax withholding",
          "uniqueItems": false,
          "$ref": "StateandLocalTaxWithholding1"
        }
      }
    },
    "Form1095A1": {
      "id": "Form1095A1",
      "description": "Health Insurance Marketplace Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "marketplaceId": {
          "description": "Box 1, Marketplace identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "marketplacePolicyNumber": {
          "description": "Box 2, Marketplace-assigned policy number",
          "uniqueItems": false,
          "type": "string"
        },
        "policyIssuerName": {
          "description": "Box 3, Policy issuer's name",
          "uniqueItems": false,
          "type": "string"
        },
        "recipientDateOfBirth": {
          "description": "Box 6, Recipient's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "spouseName": {
          "description": "Box 7, Recipient's spouse's name",
          "uniqueItems": false,
          "type": "string"
        },
        "spouseTin": {
          "description": "Box 8, Recipient's spouse's SSN",
          "uniqueItems": false,
          "type": "string"
        },
        "spouseDateOfBirth": {
          "description": "Box 9, Recipient's spouse's date of birth",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyStartDate": {
          "description": "Box 10, Policy start date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "policyTerminationDate": {
          "description": "Box 11, Policy termination date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "coveredIndividuals": {
          "description": "Boxes 16+, Covered Individuals",
          "items": {
            "$ref": "HealthInsuranceMarketplaceCoveredIndividual"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "coverages": {
          "description": "Boxes 21-33, Coverage Information",
          "items": {
            "$ref": "HealthInsuranceCoverage"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1095B1": {
      "id": "Form1095B1",
      "description": "Health Coverage",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "responsibleDateOfBirth": {
          "description": "Box 3, Date of birth (if SSN or other TIN is not available)",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "originOfHealthCoverageCode": {
          "description": "Box 8, Enter letter identifying Origin of the Health Coverage",
          "uniqueItems": false,
          "type": "string"
        },
        "employer": {
          "description": "Boxes 10-15, Employer EIN, name and address",
          "uniqueItems": false,
          "$ref": "TaxParty3"
        },
        "coveredIndividuals": {
          "description": "Boxes 23+, Covered Individuals",
          "items": {
            "$ref": "HealthInsuranceCoveredIndividual"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1095C1": {
      "id": "Form1095C1",
      "description": "Employer-Provided Health Insurance Offer and Coverage",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "selfInsuredCoverage": {
          "description": "Self Insured Coverage",
          "uniqueItems": false,
          "type": "boolean"
        },
        "offersOfCoverage": {
          "description": "Boxes 14-16, Employee Offer of Coverage",
          "items": {
            "$ref": "OfferofHealthInsuranceCoverage"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "employeeAge": {
          "description": "Employee's Age on January 1",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "planStartMonth": {
          "description": "Plan Start Month",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "coveredIndividuals": {
          "description": "Boxes 17+, Covered Individuals",
          "items": {
            "$ref": "HealthInsuranceCoveredIndividual"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1097BTC1": {
      "id": "Form1097BTC1",
      "description": "Bond Tax Credit",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "filingForCredit": {
          "description": "Form 1097-BTC issuer is: Issuer of bond or its agent filing current year Form 1097-BTC for credit being reported",
          "uniqueItems": false,
          "type": "boolean"
        },
        "asNominee": {
          "description": "Form 1097-BTC issuer is: An entity or a person that received or should have received a current year Form 1097-BTC and is distributing part or all of that credit to others",
          "uniqueItems": false,
          "type": "boolean"
        },
        "total": {
          "description": "Box 1, Total",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondCode": {
          "description": "Box 2a, Code",
          "uniqueItems": false,
          "type": "string"
        },
        "uniqueId": {
          "description": "Box 2b, Unique Identifier",
          "uniqueItems": false,
          "type": "string"
        },
        "bondType": {
          "description": "Box 3, Bond type",
          "uniqueItems": false,
          "type": "string"
        },
        "amounts": {
          "description": "Box 5, Amounts by month",
          "items": {
            "$ref": "MonthandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "comments": {
          "description": "Box 6, Comments",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1098C1": {
      "id": "Form1098C1",
      "description": "Contributions of Motor Vehicles, Boats, and Airplanes",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateOfContribution": {
          "description": "Box 1, Date of contribution",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "odometerMileage": {
          "description": "Box 2a, Odometer mileage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "carYear": {
          "description": "Box 2b, Year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "make": {
          "description": "Box 2c, Make",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Box 2d, Model",
          "uniqueItems": false,
          "type": "string"
        },
        "vin": {
          "description": "Box 3, Vehicle or other identification number",
          "uniqueItems": false,
          "type": "string"
        },
        "armsLengthTransaction": {
          "description": "Box 4a, Donee certifies that vehicle was sold in arm's length transaction to unrelated party",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateOfSale": {
          "description": "Box 4b, Date of sale",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grossProceeds": {
          "description": "Box 4c, Gross proceeds from sale (see instructions)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "notTransferredBefore": {
          "description": "Box 5a, Donee certifies that vehicle will not be transferred for money, other property, or services before completion of material improvements or significant intervening use",
          "uniqueItems": false,
          "type": "boolean"
        },
        "needyIndividual": {
          "description": "Box 5b, Donee certifies that vehicle is to be transferred to a needy individual for significantly below fair market value in furtherance of donee's charitable purpose",
          "uniqueItems": false,
          "type": "boolean"
        },
        "descriptionOfImprovements": {
          "description": "Box 5c, Donee certifies the following detailed description of material improvements or significant intervening use and duration of use",
          "uniqueItems": false,
          "type": "string"
        },
        "goodsInExchange": {
          "description": "Box 6a, Did you provide goods or services in exchange for the vehicle? Yes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "valueOfExchange": {
          "description": "Box 6b, Value of goods and services provided in exchange for the vehicle",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "intangibleReligious": {
          "description": "Box 6c, If this box is checked, donee certifies that the goods and services consisted solely of intangible religious benefits",
          "uniqueItems": false,
          "type": "boolean"
        },
        "descriptionOfGoods": {
          "description": "Box 6c, Describe the goods and services, if any, that were provided",
          "uniqueItems": false,
          "type": "string"
        },
        "maxDeductionApplies": {
          "description": "Box 7, Under the law, the donor may not claim a deduction of more than $500 for this vehicle if this box is checked",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1098E1": {
      "id": "Form1098E1",
      "description": "Student Loan Interest Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "studentLoanInterest": {
          "description": "Box 1, Student loan interest received by lender",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "box1ExcludesFees": {
          "description": "Box 2, If checked, box 1 does not include loan origination fee made before September 1, 2004",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1098MA1": {
      "id": "Form1098MA1",
      "description": "Mortgage Assistance Payments",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "totalMortgagePayments": {
          "description": "Box 1, Total State HFA (Housing Finance Agency) and homeowner mortgage payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageAssistancePayments": {
          "description": "Box 2, State HFA (Housing Finance Agency) mortgage assistance payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "homeownerMortgagePayments": {
          "description": "Box 3, Homeowner mortgage payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1098Q1": {
      "id": "Form1098Q1",
      "description": "Qualifying Longevity Annuity Contract Information",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "planNumber": {
          "description": "Plan number",
          "uniqueItems": false,
          "type": "string"
        },
        "planName": {
          "description": "Plan name",
          "uniqueItems": false,
          "type": "string"
        },
        "planSponsorId": {
          "description": "Plan sponsor's EIN",
          "uniqueItems": false,
          "type": "string"
        },
        "annuityAmount": {
          "description": "Box 1a, Annuity amount on start date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "description": "Box 1b, Annuity start date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "canBeAccelerated": {
          "description": "Box 2, Start date may be accelerated",
          "uniqueItems": false,
          "type": "boolean"
        },
        "totalPremiums": {
          "description": "Box 3, Total premiums",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 4, Fair market value of qualifying longevity annuity contract (FMV of QLAC)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "premiums": {
          "description": "Box 5, Total monthly premiums paid for the contract and date of the last payment in the month",
          "items": {
            "$ref": "DateandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1098T1": {
      "id": "Form1098T1",
      "description": "Tuition Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "studentTinCertification": {
          "description": "By checking the box in STUDENT'S TIN, filer is making a true and accurate certification under penalty of perjury that they have complied with standards promulgated by the Secretary for obtaining such individual's TIN",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "halfTime": {
          "description": "Box 8, Check if at least half-time student",
          "uniqueItems": false,
          "type": "boolean"
        },
        "qualifiedTuitionFees": {
          "description": "Box 1, Payments received for qualified tuition and related expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjustmentPriorYear": {
          "description": "Box 4, Adjustments made for a prior year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "scholarship": {
          "description": "Box 5, Scholarships or grants",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "adjustScholarship": {
          "description": "Box 6, Adjustments to scholarships or grants for a prior year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "includeJanMar": {
          "description": "Box 7, Check if the amount in box 1 or box 2 includes amounts for an academic period beginning January - March of next year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "graduate": {
          "description": "Box 9, Check if graduate student",
          "uniqueItems": false,
          "type": "boolean"
        },
        "insuranceRefund": {
          "description": "Box 10, Insurance contract reimbursement / refund",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099A1": {
      "id": "Form1099A1",
      "description": "Acquisition or Abandonment of Secured Property",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfAcquisition": {
          "description": "Box 1, Date of lender's acquisition or knowledge of abandonment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "principalBalance": {
          "description": "Box 2, Balance of principal outstanding",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 4, Fair market value property",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "personallyLiable": {
          "description": "Box 5, If checked, the borrower was personally liable for repayment of the debt",
          "uniqueItems": false,
          "type": "boolean"
        },
        "propertyDescription": {
          "description": "Box 6, Description of property",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1099B1": {
      "id": "Form1099B1",
      "description": "Proceeds From Broker and Barter Exchange Transactions",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "stateAndLocal": {
          "description": "Boxes 14-16, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "profitOnClosedContracts": {
          "description": "Box 8, Profit or (loss) realized in current year on closed contracts",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrealizedProfitOpenContractsBegin": {
          "description": "Box 9, Unrealized profit or loss on open contracts at end of last year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrealizedProfitOpenContractsEnd": {
          "description": "Box 10, Unrealized profit or loss on open contracts at end of current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "aggregateProfitOnContracts": {
          "description": "Box 11, Aggregate profit or (loss) on contracts",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bartering": {
          "description": "Box 13, Bartering",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "securityDetails": {
          "description": "Boxes 1-3, 5-7, 12, Security details",
          "items": {
            "$ref": "SecurityDetailIRSForm1099B"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099C1": {
      "id": "Form1099C1",
      "description": "Cancellation of Debt",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfEvent": {
          "description": "Box 1, Date of identifiable event",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "amountDischarged": {
          "description": "Box 2, Amount of debt discharged",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestIncluded": {
          "description": "Box 3, Interest if included in box 2",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "debtDescription": {
          "description": "Box 4, Debt description",
          "uniqueItems": false,
          "type": "string"
        },
        "personallyLiable": {
          "description": "Box 5, If checked, the debtor was personally liable for repayment of the debt",
          "uniqueItems": false,
          "type": "boolean"
        },
        "debtCode": {
          "description": "Box 6, Identifiable debt code",
          "uniqueItems": false,
          "type": "string"
        },
        "fairMarketValue": {
          "description": "Box 7, Fair market value of property",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099CAP1": {
      "id": "Form1099CAP1",
      "description": "Changes in Corporate Control and Capital Structure",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfSale": {
          "description": "Box 1, Date of sale or exchange",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "aggregateAmount": {
          "description": "Box 2, Aggregate amount received",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfShares": {
          "description": "Box 3, Number of shares exchanged",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stockClasses": {
          "description": "Box 4, Classes of stock exchanged",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1099ConsolidatedStatement1": {
      "id": "Form1099ConsolidatedStatement1",
      "description": "Consolidated Statement for combined IRS Form 1099s",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "marginInterestPaid": {
          "description": "Interest paid on margin account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "paymentInLieuPaid": {
          "description": "Payment in lieu of dividends paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "advisorFeesPaid": {
          "description": "Advisor fees paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherFeesPaid": {
          "description": "Other fees paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "corporateBondInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 1, Corporate bond interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "usBondInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 3, accrued U.S. Treasury Notes and Bonds interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExemptInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 8, tax exempt interest income from municipal bonds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedPabInterestPaid": {
          "description": "Accrued Interest Paid offset to form 1099-INT box 9, tax exempt interest income from Private Activity Bonds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099DIV1": {
      "id": "Form1099DIV1",
      "description": "Dividends and Distributions",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "ordinaryDividends": {
          "description": "Box 1a, Total ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 1b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalCapitalGain": {
          "description": "Box 2a, Total capital gain distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 2b, Unrecaptured Section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section1202Gain": {
          "description": "Box 2c, Section 1202 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 2d, Collectibles (28%) gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section897Dividends": {
          "description": "Box 2e, Section 897 ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section897CapitalGain": {
          "description": "Box 2f, Section 897 capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonTaxableDistribution": {
          "description": "Box 3, Nondividend distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199ADividends": {
          "description": "Box 5, Section 199A dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentExpenses": {
          "description": "Box 6, Investment expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignTaxPaid": {
          "description": "Box 7, Foreign tax paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignCountry": {
          "description": "Box 8, Foreign country or U.S. possession",
          "uniqueItems": false,
          "type": "string"
        },
        "cashLiquidation": {
          "description": "Box 9, Cash liquidation distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonCashLiquidation": {
          "description": "Box 10, Noncash liquidation distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAccountTaxCompliance": {
          "description": "Box 11, FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "taxExemptInterestDividend": {
          "description": "Box 12, Exempt-interest dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedPabInterestDividend": {
          "description": "Box 13, Specified private activity bond interest dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 14-16, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignIncomes": {
          "description": "Foreign income information",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateTaxExemptIncomes": {
          "description": "Tax exempt income state information",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099G1": {
      "id": "Form1099G1",
      "description": "Certain Government Payments",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "unemploymentCompensation": {
          "description": "Box 1, Unemployment compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxRefund": {
          "description": "Box 2, State or local income tax refunds, credits, or offsets",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "refundYear": {
          "description": "Box 3, Box 2 amount is for tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rtaaPayments": {
          "description": "Box 5, RTAA payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "grants": {
          "description": "Box 6, Taxable grants",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "agriculturePayments": {
          "description": "Box 7, Agriculture payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "businessIncome": {
          "description": "Box 8, If checked, box 2 is trade or business income",
          "uniqueItems": false,
          "type": "boolean"
        },
        "marketGain": {
          "description": "Box 9, Market gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 10-11, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099H1": {
      "id": "Form1099H1",
      "description": "Health Coverage Tax Credit (HCTC) Advance Payments",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "advancePayments": {
          "description": "Box 1, Amount of HCTC advance payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfMonths": {
          "description": "Box 2, Number of months HCTC advance payments and reimbursement credits paid to you",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "payments": {
          "description": "Boxes 3-14, Payments by month",
          "items": {
            "$ref": "MonthandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099INT1": {
      "id": "Form1099INT1",
      "description": "Interest Income",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignAccountTaxCompliance": {
          "description": "FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "payerRtn": {
          "description": "Payer's RTN",
          "uniqueItems": false,
          "type": "string"
        },
        "interestIncome": {
          "description": "Box 1, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earlyWithdrawalPenalty": {
          "description": "Box 2, Early withdrawal penalty",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "usBondInterest": {
          "description": "Box 3, Interest on U.S. Savings Bonds and Treasury obligations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentExpenses": {
          "description": "Box 5, Investment expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignTaxPaid": {
          "description": "Box 6, Foreign tax paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignCountry": {
          "description": "Box 7, Foreign country or U.S. possession",
          "uniqueItems": false,
          "type": "string"
        },
        "taxExemptInterest": {
          "description": "Box 8, Tax-exempt interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedPabInterest": {
          "description": "Box 9, Specified private activity bond interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "marketDiscount": {
          "description": "Box 10, Market discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondPremium": {
          "description": "Box 11, Bond premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "usBondPremium": {
          "description": "Box 12, Bond premium on Treasury obligations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExemptBondPremium": {
          "description": "Box 13, Bond premium on tax-exempt bond",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cusipNumber": {
          "description": "Box 14, Tax-exempt bond CUSIP no.",
          "uniqueItems": false,
          "type": "string"
        },
        "stateAndLocal": {
          "description": "Boxes 15-17, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignIncomes": {
          "description": "Supplemental foreign income amount information (description is country)",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateTaxExemptIncome": {
          "description": "Supplemental tax-exempt income by state (description is state)",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099K1": {
      "id": "Form1099K1",
      "description": "Merchant Card and Third-Party Network Payments",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "paymentSettlementEntity": {
          "description": "Check to indicate if FILER is a Payment Settlement Entity (PSE)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "electronicPaymentFacilitator": {
          "description": "Check to indicate if FILER is an Electronic Payment Facilitator (EPF) / Other third party",
          "uniqueItems": false,
          "type": "boolean"
        },
        "paymentCard": {
          "description": "Check to indicate transactions reported are: Payment card",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thirdPartyNetwork": {
          "description": "Check to indicate transactions reported are: Third party network",
          "uniqueItems": false,
          "type": "boolean"
        },
        "pseName": {
          "description": "PSE's name",
          "uniqueItems": false,
          "type": "string"
        },
        "psePhone": {
          "description": "PSE's phone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension1"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossAmount": {
          "description": "Box 1a, Gross amount of payment card/third party network transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cardNotPresent": {
          "description": "Box 1b, Card Not Present Transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "merchantCategoryCode": {
          "description": "Box 2, Merchant category code",
          "uniqueItems": false,
          "type": "string"
        },
        "numberOfTransactions": {
          "description": "Box 3, Number of purchase transactions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "monthAmounts": {
          "description": "Box 5, Monthly amounts",
          "items": {
            "$ref": "MonthandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateAndLocal": {
          "description": "Boxes 6-8, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099LS1": {
      "id": "Form1099LS1",
      "description": "Reportable Life Insurance Sale",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "policyNumber": {
          "description": "Policy number",
          "uniqueItems": false,
          "type": "string"
        },
        "payment": {
          "description": "Box 1, Amount paid to payment recipient",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "saleDate": {
          "description": "Box 2, Date of sale",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "issuerName": {
          "description": "Issuer's name",
          "uniqueItems": false,
          "type": "string"
        },
        "contactNameAddress": {
          "description": "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)",
          "uniqueItems": false,
          "$ref": "NameAddressandPhone"
        }
      }
    },
    "Form1099LTC1": {
      "id": "Form1099LTC1",
      "description": "Long-Term Care and Accelerated Death Benefits",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "ltcBenefits": {
          "description": "Box 1, Gross long-term care benefits paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "deathBenefits": {
          "description": "Box 2, Accelerated death benefits paid",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "perDiem": {
          "description": "Box 3, Per diem",
          "uniqueItems": false,
          "type": "boolean"
        },
        "reimbursedAmount": {
          "description": "Box 3, Reimbursed amount",
          "uniqueItems": false,
          "type": "boolean"
        },
        "insuredId": {
          "description": "INSURED'S taxpayer identification no.",
          "uniqueItems": false,
          "type": "string"
        },
        "insuredNameAddress": {
          "description": "Insured name and address",
          "uniqueItems": false,
          "$ref": "NameandAddress"
        },
        "qualifiedContract": {
          "description": "Box 4, Qualified contract",
          "uniqueItems": false,
          "type": "boolean"
        },
        "chronicallyIll": {
          "description": "Box 5, Chronically ill",
          "uniqueItems": false,
          "type": "boolean"
        },
        "terminallyIll": {
          "description": "Box 5, Terminally ill",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateCertified": {
          "description": "Date certified",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Form1099MISC1": {
      "id": "Form1099MISC1",
      "description": "Miscellaneous Income",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "rents": {
          "description": "Box 1, Rents",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "description": "Box 2, Royalties",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 3, Other income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fishingBoatProceeds": {
          "description": "Box 5, Fishing boat proceeds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicalHealthPayment": {
          "description": "Box 6, Medical and health care payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payerDirectSales": {
          "description": "Box 7, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale",
          "uniqueItems": false,
          "type": "boolean"
        },
        "substitutePayments": {
          "description": "Box 8, Substitute payments in lieu of dividends or interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cropInsurance": {
          "description": "Box 9, Crop insurance proceeds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        },
        "grossAttorney": {
          "description": "Box 10, Gross proceeds paid to an attorney",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fishPurchased": {
          "description": "Box 11, Fish purchased for resale",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section409ADeferrals": {
          "description": "Box 12, Section 409A deferrals",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAccountTaxCompliance": {
          "description": "Box 13, FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "excessGolden": {
          "description": "Box 14, Excess golden parachute payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonQualifiedDeferredCompensation": {
          "description": "Box 15, Nonqualified Deferred Compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 16-18, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099NEC1": {
      "id": "Form1099NEC1",
      "description": "Nonemployee Compensation",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        },
        "nonEmployeeCompensation": {
          "description": "Box 1, Nonemployee compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "payerDirectSales": {
          "description": "Box 2, Payer made direct sales of $5,000 or more of consumer products to a buyer (recipient) for resale",
          "uniqueItems": false,
          "type": "boolean"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 5-7, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099OID1": {
      "id": "Form1099OID1",
      "description": "Original Issue Discount",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignAccountTaxCompliance": {
          "description": "FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "originalIssueDiscount": {
          "description": "Box 1, Original issue discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherPeriodicInterest": {
          "description": "Box 2, Other periodic interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earlyWithdrawalPenalty": {
          "description": "Box 3, Early withdrawal penalty",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "marketDiscount": {
          "description": "Box 5, Market discount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "acquisitionPremium": {
          "description": "Box 6, Acquisition premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "oidDescription": {
          "description": "Box 7, Description",
          "uniqueItems": false,
          "type": "string"
        },
        "discountOnTreasuryObligations": {
          "description": "Box 8, Original issue discount on U.S. Treasury obligations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentExpenses": {
          "description": "Box 9, Investment expenses",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "bondPremium": {
          "description": "Box 10, Bond premium",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxExemptOid": {
          "description": "Box 11, Tax-exempt OID",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "stateAndLocal": {
          "description": "Boxes 12-14, State and Local tax withheld",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateExemptOid": {
          "description": "Supplemental: State name and tax-exempt OID by state",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099PATR1": {
      "id": "Form1099PATR1",
      "description": "Taxable Distributions Received From Cooperatives",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "patronageDividends": {
          "description": "Box 1, Patronage dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonpatronageDistributions": {
          "description": "Box 2, Nonpatronage distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "perUnitRetainAllocations": {
          "description": "Box 3, Per-unit retain allocations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "redemption": {
          "description": "Box 5, Redemption of nonqualified notices and retain allocations",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199Deduction": {
          "description": "Box 6, Section 199A(g) deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedPayments": {
          "description": "Box 7, Qualified payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199QualifiedItems": {
          "description": "Box 8, Section 199A(a) qualified items",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section199SstbItems": {
          "description": "Box 9, Section 199A(a) SSTB (Specified Service Trade or Business) items",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "investmentCredit": {
          "description": "Box 10, Investment credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "workOpportunityCredit": {
          "description": "Box 11, Work opportunity credit",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherCreditsAndDeductions": {
          "description": "Box 12, Other credits and deductions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedCoop": {
          "description": "Box 13, Specified Cooperative",
          "uniqueItems": false,
          "type": "boolean"
        },
        "stateAndLocal": {
          "description": "State and Local tax withholding, from IRS's IRIS schema",
          "uniqueItems": false,
          "$ref": "StateandLocalTaxWithholding2"
        },
        "secondTinNotice": {
          "description": "Second TIN Notice",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099Q1": {
      "id": "Form1099Q1",
      "description": "Payments From Qualified Education Programs",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earnings": {
          "description": "Box 2, Earnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "basis": {
          "description": "Box 3, Basis",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "trusteeToTrustee": {
          "description": "Box 4, Trustee-to-trustee transfer",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tuitionPlanPrivate": {
          "description": "Box 5a, Qualified tuition plan - Private",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tuitionPlanPublic": {
          "description": "Box 5b, Qualified tuition plan - Public",
          "uniqueItems": false,
          "type": "boolean"
        },
        "coverdellEsa": {
          "description": "Box 5c, Coverdell ESA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "recipientIsNotBeneficiary": {
          "description": "Box 6, If this box is checked, the recipient is not the designated beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fairMarketValue": {
          "description": "If fair market value (FMV) is included, see Pub. 970, Tax Benefits for Education, for how to figure earnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099QA1": {
      "id": "Form1099QA1",
      "description": "Distributions From ABLE Accounts",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earnings": {
          "description": "Box 2, Earnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "basis": {
          "description": "Box 3, Basis",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "programTransfer": {
          "description": "Box 4, Program-to-program transfer",
          "uniqueItems": false,
          "type": "boolean"
        },
        "terminated": {
          "description": "Box 5, Check if ABLE account terminated in current year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "notBeneficiary": {
          "description": "Box 6, Check if the recipient is not the designated beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099R1": {
      "id": "Form1099R1",
      "description": "Distributions from Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs, Insurance Contracts, etc.",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "allocableToIRR": {
          "description": "Box 10, Amount allocable to IRR within 5 years",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "firstYearOfRoth": {
          "description": "Box 11, First year of designated Roth contributions. A four-digit year. (Like `TaxYear` definition, but lower minimum since first year of Roth IRAs was 1997)",
          "minimum": "1997",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "recipientAccountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxableAmount": {
          "description": "Box 2a, Taxable amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxableAmountNotDetermined": {
          "description": "Box 2b, Taxable amount not determined",
          "uniqueItems": false,
          "type": "boolean"
        },
        "totalDistribution": {
          "description": "Box 2c, Total distribution",
          "uniqueItems": false,
          "type": "boolean"
        },
        "capitalGain": {
          "description": "Box 3, Capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "employeeContributions": {
          "description": "Box 5, Employee contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netUnrealizedAppreciation": {
          "description": "Box 6, Net unrealized appreciation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "distributionCodes": {
          "description": "Box 7, Distribution codes",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "iraSepSimple": {
          "description": "Box 7b, IRA/SEP/SIMPLE",
          "uniqueItems": false,
          "type": "boolean"
        },
        "otherAmount": {
          "description": "Box 8, Other",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherPercent": {
          "description": "Box 8, Other percent",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "yourPercentOfTotal": {
          "description": "Box 9a, Your percent of total distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalEmployeeContributions": {
          "description": "Box 9b, Total employee contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "foreignAccountTaxCompliance": {
          "description": "Box 12, FATCA filing requirement",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dateOfPayment": {
          "description": "Box 13, Date of payment",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "stateAndLocal": {
          "description": "Boxes 14-19, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1099S1": {
      "id": "Form1099S1",
      "description": "Proceeds From Real Estate Transactions",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account or escrow number",
          "uniqueItems": false,
          "type": "string"
        },
        "dateOfClosing": {
          "description": "Box 1, Date of closing",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grossProceeds": {
          "description": "Box 2, Gross proceeds",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "addressOrLegalDescription": {
          "description": "Box 3, Address or legal description",
          "uniqueItems": false,
          "type": "string"
        },
        "receivedOtherConsideration": {
          "description": "Box 4, Transferor received or will receive property or services as part of the consideration (if checked)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "foreignPerson": {
          "description": "Box 5, If checked, transferor is a foreign person (nonresident alien, foreign partnership, foreign estate, or foreign trust)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "realEstateTax": {
          "description": "Box 6, Buyer's part of real estate tax",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form1099SA1": {
      "id": "Form1099SA1",
      "description": "Distributions From an HSA, Archer MSA, or Medicare Advantage MSA",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "grossDistribution": {
          "description": "Box 1, Gross distribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "earnings": {
          "description": "Box 2, Earnings on excess contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "distributionCode": {
          "description": "Box 3, Distribution code",
          "uniqueItems": false,
          "type": "string"
        },
        "fairMarketValue": {
          "description": "Box 4, FMV on date of death",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "hsa": {
          "description": "Box 5a, HSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "archerAccount": {
          "description": "Box 5b, Archer MSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "medicalSavingsAccount": {
          "description": "Box 5c, Medicare Advantage (MA) MSA",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1099SB1": {
      "id": "Form1099SB1",
      "description": "Seller's Investment in Life Insurance Contract",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "policyNumber": {
          "description": "Policy number",
          "uniqueItems": false,
          "type": "string"
        },
        "contractInvestment": {
          "description": "Box 1, Investment in contract",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "surrenderAmount": {
          "description": "Box 2, Surrender amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "contactNameAddress": {
          "description": "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)",
          "uniqueItems": false,
          "$ref": "NameAddressandPhone1"
        }
      }
    },
    "Form5498ESA1": {
      "id": "Form5498ESA1",
      "description": "Coverdell ESA Contribution Information",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "coverdellEsaContributions": {
          "description": "Box 1, Coverdell ESA contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributions": {
          "description": "Box 2, Rollover contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form5498QA1": {
      "id": "Form5498QA1",
      "description": "ABLE Account Contribution Information",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "ableContributions": {
          "description": "Box 1, ABLE contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rollovers": {
          "description": "Box 2, ABLE to ABLE Rollovers",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cumulativeContributions": {
          "description": "Box 3, Cumulative contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 4, Fair market value",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "openedInTaxYear": {
          "description": "Box 5, Check if account opened in current tax year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "basisOfDisabilityCode": {
          "description": "Box 6, Basis of eligibility",
          "uniqueItems": false,
          "type": "string"
        },
        "typeOfDisabilityCode": {
          "description": "Box 7, Code",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form5498SA1": {
      "id": "Form5498SA1",
      "description": "HSA, Archer MSA, or Medicare Advantage MSA Information",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "msaContributions": {
          "description": "Box 1, Employee or self-employed person's Archer MSA contributions made in current and following years for current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalContributions": {
          "description": "Box 2, Total contributions made in current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "totalPostYearEnd": {
          "description": "Box 3, Total HSA or Archer MSA contributions made in following year for current year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributions": {
          "description": "Box 4, Rollover contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 5, Fair market value of HSA, Archer MSA, or Medicare Advantage (MA) MSA",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "hsa": {
          "description": "Box 6a, HSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "archer": {
          "description": "Box 6b, Archer MSA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "maMsa": {
          "description": "Box 6c, Medicare Advantage (MA) MSA",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1042SAgent2": {
      "id": "Form1042SAgent2",
      "description": "Boxes 14a-b, Primary Withholding Agent",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1042SAgent3": {
      "id": "Form1042SAgent3",
      "description": "Boxes 15a-i, Intermediary or flow thru entity",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1042SAgent4": {
      "id": "Form1042SAgent4",
      "description": "Boxes 16a-e, Payer",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        },
        "ch3StatusCode": {
          "description": "Ch. 3 status code,\n  * Box 12b, Withholding Agent,\n  * Box 13f, Recipient,\n  * Box 15b, Intermediary or flow-through entity,\n  * Box 16d, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "ch4StatusCode": {
          "description": "Ch. 4 status code,\n  * Box 12c, Withholding Agent,\n  * Box 13g, Recipient,\n  * Box 15c, Intermediary or flow-through entity,\n  * Box 16e, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "giin": {
          "description": "Agent's Global Intermediary Identification Number (GIIN),\n  * Box 12e, Withholding Agent,\n  * Box 13h, Recipient,\n  * Box 15e, Intermediary or flow-through entity,\n  * Box 16c, Payer",
          "uniqueItems": false,
          "type": "string"
        },
        "foreignTin": {
          "description": "Foreign tax identification number, if any,\n  * Box 12g, Withholding Agent,\n  * Box 13i, Recipient,\n  * Box 15g, Intermediary or flow-through entity",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form1041K11": {
      "id": "Form1041K11",
      "description": "Beneficiary's Share of Income, Deductions, Credits, etc.",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "finalK1": {
          "description": "Final K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendedK1": {
          "description": "Amended K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "form1041T": {
          "description": "Box D, Check if Form 1041-T was filed",
          "uniqueItems": false,
          "type": "boolean"
        },
        "date1041T": {
          "description": "Box D, and enter the date it was filed",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "final1041": {
          "description": "Box E, Check if this is the final Form 1041 for the estate or trust",
          "uniqueItems": false,
          "type": "boolean"
        },
        "domestic": {
          "description": "Box H, Domestic beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "foreign": {
          "description": "Box H, Foreign beneficiary",
          "uniqueItems": false,
          "type": "boolean"
        },
        "interestIncome": {
          "description": "Box 1, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryDividends": {
          "description": "Box 2a, Ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 2b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netShortTermGain": {
          "description": "Box 3, Net short-term capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netLongTermGain": {
          "description": "Box 4a, Net long-term capital gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "gain28Rate": {
          "description": "Box 4b, 28% rate gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 4c, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherPortfolioIncome": {
          "description": "Box 5, Other portfolio and nonbusiness income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryBusinessIncome": {
          "description": "Box 6, Ordinary business income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netRentalRealEstateIncome": {
          "description": "Box 7, Net rental real estate income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRentalIncome": {
          "description": "Box 8, Other rental income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "directlyApportionedDeductions": {
          "description": "Box 9, Directly apportioned deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "estateTaxDeduction": {
          "description": "Box 10, Estate tax deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "finalYearDeductions": {
          "description": "Box 11, Final year deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiduciary": {
          "description": "Box C, Fiduciary's name and address",
          "uniqueItems": false,
          "$ref": "TaxParty2"
        },
        "amtAdjustments": {
          "description": "Box 12, Alternative minimum tax adjustment",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "credits": {
          "description": "Box 13, Credits and credit recapture",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "otherInfo": {
          "description": "Box 14, Other information",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Form1065K11": {
      "id": "Form1065K11",
      "description": "Partner's Share of Income, Deductions, Credits, etc.",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end data",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "finalK1": {
          "description": "Final K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendedK1": {
          "description": "Amended K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "irsCenter": {
          "description": "Box C, IRS Center where partnership filed return",
          "uniqueItems": false,
          "type": "string"
        },
        "publiclyTraded": {
          "description": "Box D, Check if this is a publicly traded partnership (PTP)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "generalPartner": {
          "description": "Box G, General partner or LLC member-manager",
          "uniqueItems": false,
          "type": "boolean"
        },
        "limitedPartner": {
          "description": "Box G, Limited partner or other LLC member",
          "uniqueItems": false,
          "type": "boolean"
        },
        "domestic": {
          "description": "Box H1, Domestic partner",
          "uniqueItems": false,
          "type": "boolean"
        },
        "foreign": {
          "description": "Box H1, Foreign partner",
          "uniqueItems": false,
          "type": "boolean"
        },
        "disregardedEntity": {
          "description": "Box H2, Check if the partner is a disregarded entity (DE), and enter the partner's TIN and Name",
          "uniqueItems": false,
          "type": "boolean"
        },
        "disregardedEntityTin": {
          "description": "Box H2, Disregarded entity partner's TIN",
          "uniqueItems": false,
          "type": "string"
        },
        "disregardedEntityName": {
          "description": "Box H2, Disregarded entity partner's Name",
          "uniqueItems": false,
          "type": "string"
        },
        "entityType": {
          "description": "Box I1, What type of entity is this partner?",
          "uniqueItems": false,
          "type": "string"
        },
        "retirementPlan": {
          "description": "Box I2, If this partner is a retirement plan (IRA/SEP/Keogh/etc.), check here",
          "uniqueItems": false,
          "type": "boolean"
        },
        "profitShareBegin": {
          "description": "Box J, Partner's share of profit - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "profitShareEnd": {
          "description": "Box J, Partner's share of profit - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lossShareBegin": {
          "description": "Box J, Partner's share of loss - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lossShareEnd": {
          "description": "Box J, Partner's share of loss - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalShareBegin": {
          "description": "Box J, Partner's share of capital - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalShareEnd": {
          "description": "Box J, Partner's share of capital - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "decreaseDueToSaleOrExchange": {
          "description": "Box J, Check if decrease is due to sale or exchange of partnership interest. Deprecated and no longer used beginning tax year 2023. Use `decreaseDueToSale` and `decreaseDueToExchange` instead",
          "uniqueItems": false,
          "type": "boolean"
        },
        "decreaseDueToSale": {
          "description": "Box J, Check if decrease is due to sale of partnership interest",
          "uniqueItems": false,
          "type": "boolean"
        },
        "decreaseDueToExchange": {
          "description": "Box J, Check if decrease is due to exchange of partnership interest",
          "uniqueItems": false,
          "type": "boolean"
        },
        "nonrecourseLiabilityShareBegin": {
          "description": "Box K1, Partner's share of liabilities - beginning - nonrecourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonrecourseLiabilityShareEnd": {
          "description": "Box K1, Partner's share of liabilities - ending - nonrecourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedLiabilityShareBegin": {
          "description": "Box K1, Partner's share of liabilities - beginning - qualified nonrecourse financing",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedLiabilityShareEnd": {
          "description": "Box K1, Partner's share of liabilities - ending - qualified nonrecourse financing",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recourseLiabilityShareBegin": {
          "description": "Box K1, Partner's share of liabilities - beginning - recourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recourseLiabilityShareEnd": {
          "description": "Box K1, Partner's share of liabilities - ending - recourse",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "includesLowerTierLiability": {
          "description": "Box K2, Check this box if item K1 includes liability amounts from lower tier partnerships",
          "uniqueItems": false,
          "type": "boolean"
        },
        "liabilitySubjectToGuarantees": {
          "description": "Box K3, Check if any of the above liability is subject to guarantees or other payment obligations by the partner",
          "uniqueItems": false,
          "type": "boolean"
        },
        "capitalAccountBegin": {
          "description": "Box L, Partner's capital account analysis - Beginning capital account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountContributions": {
          "description": "Box L, Partner's capital account analysis - Capital contributed during the year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountIncrease": {
          "description": "Box L, Partner's capital account analysis - Current year net income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountOther": {
          "description": "Box L, Partner's capital account analysis - Other increase (decrease)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountWithdrawals": {
          "description": "Box L, Partner's capital account analysis - Withdrawals & distributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "capitalAccountEnd": {
          "description": "Box L, Partner's capital account analysis - Ending capital account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "builtInGain": {
          "description": "Box M, Did the partner contribute property with a built-in gain or loss? - Yes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "unrecognizedSection704Begin": {
          "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - beginning",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecognizedSection704End": {
          "description": "Box N, Partner's Share of Net Unrecognized Section 704(c) Gain or (Loss) - ending",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryIncome": {
          "description": "Box 1, Ordinary business income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netRentalRealEstateIncome": {
          "description": "Box 2, Net rental real estate income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRentalIncome": {
          "description": "Box 3, Other net rental income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "guaranteedPaymentServices": {
          "description": "Box 4a, Guaranteed payments for services",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "guaranteedPaymentCapital": {
          "description": "Box 4b, Guaranteed payments for capital",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "guaranteedPayment": {
          "description": "Box 4c, Total guaranteed payments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestIncome": {
          "description": "Box 5, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryDividends": {
          "description": "Box 6a, Ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 6b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dividendEquivalents": {
          "description": "Box 6c, Dividend equivalents",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "description": "Box 7, Royalties",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netShortTermGain": {
          "description": "Box 8, Net short-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netLongTermGain": {
          "description": "Box 9a, Net long-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 9b, Collectibles (28%) gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 9c, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "net1231Gain": {
          "description": "Box 10, Net section 1231 gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 11, Other income",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "section179Deduction": {
          "description": "Box 12, Section 179 deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherDeductions": {
          "description": "Box 13, Other deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "selfEmployment": {
          "description": "Box 14, Self-employment earnings (loss)",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "credits": {
          "description": "Box 15, Credits",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scheduleK3": {
          "description": "Box 16, Schedule K-3 is attached",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amtItems": {
          "description": "Box 17, Alternative minimum tax (AMT) items",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "taxExemptIncome": {
          "description": "Box 18, Tax-exempt income and nondeductible expenses",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "distributions": {
          "description": "Box 19, Distributions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "otherInfo": {
          "description": "Box 20, Other information",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "foreignTaxPaid": {
          "description": "Box 21, Foreign taxes paid or accrued",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "multipleAtRiskActivities": {
          "description": "Box 22, More than one activity for at-risk purposes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "multiplePassiveActivities": {
          "description": "Box 23, More than one activity for passive activity purposes",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form1120SK11": {
      "id": "Form1120SK11",
      "description": "Shareholder's Share of Income, Deductions, Credits, etc.",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "finalK1": {
          "description": "Final K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amendedK1": {
          "description": "Amended K-1",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "irsCenter": {
          "description": "Box C, IRS Center where corporation filed return",
          "uniqueItems": false,
          "type": "string"
        },
        "corporationBeginningShares": {
          "description": "Box D, Corporation's total number of shares, Beginning of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "corporationEndingShares": {
          "description": "Box D, Corporation's total number of shares, End of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "percentOwnership": {
          "description": "Box G, Current year allocation percentage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "beginningShares": {
          "description": "Box H, Shareholder's number of shares, Beginning of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "endingShares": {
          "description": "Box H, Shareholder's number of shares, End of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "beginningLoans": {
          "description": "Box I, Loans from shareholder, Beginning of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "endingLoans": {
          "description": "Box I, Loans from shareholder, Ending of tax year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryIncome": {
          "description": "Box 1, Ordinary business income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netRentalRealEstateIncome": {
          "description": "Box 2, Net rental real estate income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherRentalIncome": {
          "description": "Box 3, Other net rental income (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "interestIncome": {
          "description": "Box 4, Interest income",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ordinaryDividends": {
          "description": "Box 5a, Ordinary dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "qualifiedDividends": {
          "description": "Box 5b, Qualified dividends",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "description": "Box 6, Royalties",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netShortTermGain": {
          "description": "Box 7, Net short-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "netLongTermGain": {
          "description": "Box 8a, Net long-term capital gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 8b, Collectibles (28%) gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 8c, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "net1231Gain": {
          "description": "Box 9, Net section 1231 gain (loss)",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherIncome": {
          "description": "Box 10, Other income (loss)",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "section179Deduction": {
          "description": "Box 11, Section 179 deduction",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "otherDeductions": {
          "description": "Box 12, Other deductions",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "credits": {
          "description": "Box 13, Credits",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "scheduleK3": {
          "description": "Box 14, Schedule K-3 is attached",
          "uniqueItems": false,
          "type": "boolean"
        },
        "amtItems": {
          "description": "Box 15, Alternative minimum tax (AMT) items",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "basisItems": {
          "description": "Box 16, Items affecting shareholder basis",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "otherInfo": {
          "description": "Box 17, Other information",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "multipleAtRiskActivities": {
          "description": "Box 18, More than one activity for at-risk purposes",
          "uniqueItems": false,
          "type": "boolean"
        },
        "multiplePassiveActivities": {
          "description": "Box 19, More than one activity for passive activity purposes",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Form10981": {
      "id": "Form10981",
      "description": "Mortgage Interest Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "mortgagedProperties": {
          "description": "Box 9, Number of properties securing the mortgage",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "otherInformation": {
          "description": "Box 10, Other (property tax)",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "mortgageInterest": {
          "description": "Box 1, Mortgage interest received from borrower",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "outstandingPrincipal": {
          "description": "Box 2, Outstanding mortgage principal",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "originationDate": {
          "description": "Box 3, Mortgage origination date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "overpaidRefund": {
          "description": "Box 4, Refund of overpaid interest",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "mortgageInsurance": {
          "description": "Box 5, Mortgage insurance premiums",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "pointsPaid": {
          "description": "Box 6, Points paid on purchase of principal residence",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "isPropertyAddressSameAsBorrowerAddress": {
          "description": "Box 7, Is address of property securing mortgage same as PAYER'S/BORROWER'S address",
          "uniqueItems": false,
          "type": "boolean"
        },
        "acquisitionDate": {
          "description": "Box 11, Mortgage acquisition date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "propertyAddress": {
          "description": "Box 8, Address of property securing mortgage",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "propertyTax": {
          "description": "Box 10, Property tax",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "propertyDescription": {
          "description": "Box 8, Description of property securing mortgage, if property securing mortgage has no address",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Form24391": {
      "id": "Form24391",
      "description": "Notice to Shareholder of Undistributed Long-Term Capital Gains",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fiscalYearBegin": {
          "description": "Fiscal year begin date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "fiscalYearEnd": {
          "description": "Fiscal year end date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "undistributedLongTermCapitalGains": {
          "description": "Box 1a, Total undistributed long-term capital gains",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "unrecaptured1250Gain": {
          "description": "Box 1b, Unrecaptured section 1250 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "section1202Gain": {
          "description": "Box 1c, Section 1202 gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "collectiblesGain": {
          "description": "Box 1d, Collectibles (28%) gain",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxPaid": {
          "description": "Box 2, Tax paid by the RIC or REIT on the box 1a gains",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form39211": {
      "id": "Form39211",
      "description": "Exercise of an Incentive Stock Option Under Section 422(b)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "optionGrantDate": {
          "description": "Box 1, Date option granted",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "optionExerciseDate": {
          "description": "Box 2, Date option exercised",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "exercisePrice": {
          "description": "Box 3, Exercise price per share",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "exerciseMarketValue": {
          "description": "Box 4, Fair market value per share on exercise date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfShares": {
          "description": "Box 5, Number of shares transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "corporation": {
          "description": "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred",
          "uniqueItems": false,
          "$ref": "TaxParty4"
        }
      }
    },
    "Form39221": {
      "id": "Form39221",
      "description": "Transfer of Stock Acquired Through an Employee Stock Purchase Plan under Section 423(c)",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "optionGrantDate": {
          "description": "Box 1, Date option granted",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "optionExerciseDate": {
          "description": "Box 2, Date option exercised",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grantMarketValue": {
          "description": "Box 3, Fair market value per share on grant date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "exerciseMarketValue": {
          "description": "Box 4, Fair market value per share on exercise date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "exercisePrice": {
          "description": "Box 5, Exercise price paid per share",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "numberOfShares": {
          "description": "Box 6, Number of shares transferred",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "titleTransferDate": {
          "description": "Box 7, Date legal title transferred",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "grantDateExercisePrice": {
          "description": "Box 8, Exercise price per share determined as if the option was exercised on the option granted date",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Form54981": {
      "id": "Form54981",
      "description": "IRA Contribution Information",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "iraContributions": {
          "description": "Box 1, IRA contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rolloverContributions": {
          "description": "Box 2, Rollover contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rothIraConversion": {
          "description": "Box 3, Roth IRA conversion amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "recharacterizedContributions": {
          "description": "Box 4, Recharacterized contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fairMarketValue": {
          "description": "Box 5, Fair market value of account",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lifeInsuranceCost": {
          "description": "Box 6, Life insurance cost included in box 1",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "ira": {
          "description": "Box 7a, IRA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "sep": {
          "description": "Box 7b, SEP",
          "uniqueItems": false,
          "type": "boolean"
        },
        "simple": {
          "description": "Box 7c, SIMPLE",
          "uniqueItems": false,
          "type": "boolean"
        },
        "rothIra": {
          "description": "Box 7d, Roth IRA",
          "uniqueItems": false,
          "type": "boolean"
        },
        "sepContributions": {
          "description": "Box 8, SEP contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "simpleContributions": {
          "description": "Box 9, SIMPLE contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rothIraContributions": {
          "description": "Box 10, Roth IRA contributions",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "rmdNextYear": {
          "description": "Box 11, If checked, required minimum distribution for next year",
          "uniqueItems": false,
          "type": "boolean"
        },
        "rmdDate": {
          "description": "Box 12a, RMD date",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "rmdAmount": {
          "description": "Box 12b, RMD amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "postponedContribution": {
          "description": "Box 13a, Postponed contribution",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "postponedYear": {
          "description": "Box 13b, Year",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "postponedCode": {
          "description": "Box 13c, Code",
          "uniqueItems": false,
          "type": "string"
        },
        "repayments": {
          "description": "Box 14a, Repayments",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "repayCode": {
          "description": "Box 14b, Code",
          "uniqueItems": false,
          "type": "string"
        },
        "fmvSpecifiedAssets": {
          "description": "Box 15a, FMV of certain specified assets",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "specifiedCodes": {
          "description": "Box 15b, Code(s)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FormW2c2": {
      "id": "FormW2c2",
      "description": "IRS form W-2c, Corrected Wage and Tax Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "correctedTinOrName": {
          "description": "Box e, Corrected SSN and/or name",
          "uniqueItems": false,
          "type": "boolean"
        },
        "previousEmployeeTin": {
          "description": "Box f, Employee's previously reported SSN",
          "uniqueItems": false,
          "type": "string"
        },
        "previousEmployeeName": {
          "description": "Box g, Employee's previously reported name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "originalW2": {
          "description": "Boxes 1-20 of Previously reported Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW21"
        },
        "correctedW2": {
          "description": "Boxes 1-20 of Correct information Wage and Tax Statement",
          "uniqueItems": false,
          "$ref": "FormW22"
        }
      }
    },
    "FormW2G2": {
      "id": "FormW2G2",
      "description": "Certain Gambling Winnings",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "winnings": {
          "description": "Box 1, Reportable winnings",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dateWon": {
          "description": "Box 2, Date won",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "typeOfWager": {
          "description": "Box 3, Type of wager",
          "uniqueItems": false,
          "type": "string"
        },
        "federalTaxWithheld": {
          "description": "Box 4, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "transaction": {
          "description": "Box 5, Transaction",
          "uniqueItems": false,
          "type": "string"
        },
        "race": {
          "description": "Box 6, Race",
          "uniqueItems": false,
          "type": "string"
        },
        "identicalWinnings": {
          "description": "Box 7, Winnings from identical wagers",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "cashier": {
          "description": "Box 8, Cashier",
          "uniqueItems": false,
          "type": "string"
        },
        "window": {
          "description": "Box 10, Window",
          "uniqueItems": false,
          "type": "string"
        },
        "firstId": {
          "description": "Box 11, First I.D.",
          "uniqueItems": false,
          "type": "string"
        },
        "secondId": {
          "description": "Box 12, Second I.D.",
          "uniqueItems": false,
          "type": "string"
        },
        "stateAndLocal": {
          "description": "Boxes 13-18, State and Local tax withholding, use income fields for state (box 14) and local (box 16) winnings amounts",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FormW21": {
      "id": "FormW21",
      "description": "Boxes 1-20 of Previously reported Wage and Tax Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "controlNumber": {
          "description": "Control number",
          "uniqueItems": false,
          "type": "string"
        },
        "wages": {
          "description": "Box 1, Wages, tips, other compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 2, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityWages": {
          "description": "Box 3, Social security wages",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTaxWithheld": {
          "description": "Box 4, Social security tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareWages": {
          "description": "Box 5, Medicare wages and tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareTaxWithheld": {
          "description": "Box 6, Medicare tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTips": {
          "description": "Box 7, Social security tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "allocatedTips": {
          "description": "Box 8, Allocated tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dependentCareBenefit": {
          "description": "Box 10, Dependent care benefits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonQualifiedPlan": {
          "description": "Box 11, Nonqualified plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "codes": {
          "description": "Box 12, Codes and amounts",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "statutory": {
          "description": "Box 13, Statutory employee",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retirementPlan": {
          "description": "Box 13, Retirement plan",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thirdPartySickPay": {
          "description": "Box 13, Third-party sick pay",
          "uniqueItems": false,
          "type": "boolean"
        },
        "esppQualified": {
          "description": "Employee Stock Purchase Plan Qualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "esppNonQualified": {
          "description": "Employee Stock Purchase Plan Nonqualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "other": {
          "description": "Box 14, Other descriptions and amounts",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateAndLocal": {
          "description": "Boxes 15-20, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FormW22": {
      "id": "FormW22",
      "description": "Boxes 1-20 of Correct information Wage and Tax Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "controlNumber": {
          "description": "Control number",
          "uniqueItems": false,
          "type": "string"
        },
        "wages": {
          "description": "Box 1, Wages, tips, other compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 2, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityWages": {
          "description": "Box 3, Social security wages",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTaxWithheld": {
          "description": "Box 4, Social security tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareWages": {
          "description": "Box 5, Medicare wages and tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareTaxWithheld": {
          "description": "Box 6, Medicare tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTips": {
          "description": "Box 7, Social security tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "allocatedTips": {
          "description": "Box 8, Allocated tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dependentCareBenefit": {
          "description": "Box 10, Dependent care benefits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonQualifiedPlan": {
          "description": "Box 11, Nonqualified plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "codes": {
          "description": "Box 12, Codes and amounts",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "statutory": {
          "description": "Box 13, Statutory employee",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retirementPlan": {
          "description": "Box 13, Retirement plan",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thirdPartySickPay": {
          "description": "Box 13, Third-party sick pay",
          "uniqueItems": false,
          "type": "boolean"
        },
        "esppQualified": {
          "description": "Employee Stock Purchase Plan Qualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "esppNonQualified": {
          "description": "Employee Stock Purchase Plan Nonqualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "other": {
          "description": "Box 14, Other descriptions and amounts",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateAndLocal": {
          "description": "Boxes 15-20, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FormW24": {
      "id": "FormW24",
      "description": "Wage and Tax Statement",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "corrected": {
          "description": "True to indicate this is a corrected tax form",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountId": {
          "description": "Long-term persistent identity of the source account. Not the account number",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormId": {
          "description": "Long-term persistent id for this tax form. Depending upon the data provider, this may be the same id as the enclosing tax statement id, or this may be a different id, or this id may be omitted.",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormDate": {
          "description": "Date of production or delivery of the tax form",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "additionalInformation": {
          "description": "Additional explanation text or content about this tax form",
          "uniqueItems": false,
          "type": "string"
        },
        "taxFormType": {
          "description": "Enumerated name of the tax form entity e.g. \"TaxW2\"",
          "enum": [
            "BusinessIncomeStatement",
            "CryptocurrencyTaxStatement",
            "FarmIncomeStatement",
            "FarmRentalIncomeStatement",
            "RentalIncomeStatement",
            "RoyaltyIncomeStatement",
            "Tax1041K1",
            "Tax1042S",
            "Tax1065K1",
            "Tax1095A",
            "Tax1095B",
            "Tax1095C",
            "Tax1097Btc",
            "Tax1098",
            "Tax1098C",
            "Tax1098E",
            "Tax1098Ma",
            "Tax1098Q",
            "Tax1098T",
            "Tax1099A",
            "Tax1099B",
            "Tax1099C",
            "Tax1099Cap",
            "Tax1099ConsolidatedStatement",
            "Tax1099Div",
            "Tax1099G",
            "Tax1099H",
            "Tax1099Int",
            "Tax1099K",
            "Tax1099Ls",
            "Tax1099Ltc",
            "Tax1099Misc",
            "Tax1099Nec",
            "Tax1099Oid",
            "Tax1099Patr",
            "Tax1099Q",
            "Tax1099Qa",
            "Tax1099R",
            "Tax1099S",
            "Tax1099Sa",
            "Tax1099Sb",
            "Tax1120SK1",
            "Tax2439",
            "Tax3921",
            "Tax3922",
            "Tax5227K1",
            "Tax5498",
            "Tax5498Esa",
            "Tax5498Qa",
            "Tax5498Sa",
            "TaxW2",
            "TaxW2C",
            "TaxW2G"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty8"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
          "uniqueItems": false,
          "$ref": "TaxParty1"
        },
        "attributes": {
          "description": "Additional attributes for this tax form when defined fields are not available. Some specific additional attributes already defined by providers: Fields required by [IRS FIRE](https://www.irs.gov/e-file-providers/filing-information-returns-electronically-fire): Name Control, Type of Identification Number (EIN, SSN, ITIN, ATIN). (ATIN is tax ID number for pending adoptions.) Tax form provider field for taxpayer notification: Recipient Email Address.",
          "items": {
            "$ref": "TaxFormAttribute"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "error": {
          "description": "Present if an error was encountered while retrieving this form",
          "uniqueItems": false,
          "$ref": "Error1"
        },
        "links": {
          "description": "Links to retrieve this form as data or image, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "controlNumber": {
          "description": "Control number",
          "uniqueItems": false,
          "type": "string"
        },
        "wages": {
          "description": "Box 1, Wages, tips, other compensation",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "federalTaxWithheld": {
          "description": "Box 2, Federal income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityWages": {
          "description": "Box 3, Social security wages",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTaxWithheld": {
          "description": "Box 4, Social security tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareWages": {
          "description": "Box 5, Medicare wages and tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "medicareTaxWithheld": {
          "description": "Box 6, Medicare tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "socialSecurityTips": {
          "description": "Box 7, Social security tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "allocatedTips": {
          "description": "Box 8, Allocated tips",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "dependentCareBenefit": {
          "description": "Box 10, Dependent care benefits",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "nonQualifiedPlan": {
          "description": "Box 11, Nonqualified plans",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "codes": {
          "description": "Box 12, Codes and amounts",
          "items": {
            "$ref": "CodeandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "statutory": {
          "description": "Box 13, Statutory employee",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retirementPlan": {
          "description": "Box 13, Retirement plan",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thirdPartySickPay": {
          "description": "Box 13, Third-party sick pay",
          "uniqueItems": false,
          "type": "boolean"
        },
        "esppQualified": {
          "description": "Employee Stock Purchase Plan Qualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "esppNonQualified": {
          "description": "Employee Stock Purchase Plan Nonqualified Disposition amount",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "other": {
          "description": "Box 14, Other descriptions and amounts",
          "items": {
            "$ref": "DescriptionandAmount"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stateAndLocal": {
          "description": "Boxes 15-20, State and Local tax withholding",
          "items": {
            "$ref": "StateandLocalTaxWithholding"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "LocalTaxWithholding1": {
      "id": "LocalTaxWithholding1",
      "description": "Amount of local income tax withheld, if any",
      "required": [],
      "properties": {
        "taxWithheld": {
          "description": "Amount of local income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "localityName": {
          "description": "Locality name",
          "uniqueItems": false,
          "type": "string"
        },
        "income": {
          "description": "Income amount for local tax purposes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "NameandAddress": {
      "id": "NameandAddress",
      "description": "Insured name and address",
      "required": [],
      "properties": {
        "line1": {
          "description": "Address line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "line2": {
          "description": "Address line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "line3": {
          "description": "Address line 3",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "City",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name1": {
          "description": "Name line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "name2": {
          "description": "Name line 2",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "NameAddressandPhone": {
      "id": "NameAddressandPhone",
      "description": "Acquirer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (If different from ACQUIRER)",
      "required": [],
      "properties": {
        "line1": {
          "description": "Address line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "line2": {
          "description": "Address line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "line3": {
          "description": "Address line 3",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "City",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name1": {
          "description": "Name line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "name2": {
          "description": "Name line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension2"
        }
      }
    },
    "NameAddressandPhone1": {
      "id": "NameAddressandPhone1",
      "description": "Issuer's information contact name, street address, city or town, state or province, country, ZIP or foreign postal code, and telephone no. (if different from ISSUER)",
      "required": [],
      "properties": {
        "line1": {
          "description": "Address line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "line2": {
          "description": "Address line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "line3": {
          "description": "Address line 3",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "City",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "State, Province, Territory, Canton or Prefecture. From [Universal Postal Union](https://www.upu.int/en/Postal-Solutions/Programmes-Services/Addressing-Solutions#addressing-s42-standard) as of 2-26-2020, [S42 International Address Standards](https://www.upu.int/UPU/media/upu/documents/PostCode/S42_International-Addressing-Standards.pdf). For U.S. addresses can be 2-character code from '#/components/schemas/StateCode'",
          "uniqueItems": false,
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "enum": [
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name1": {
          "description": "Name line 1",
          "uniqueItems": false,
          "type": "string"
        },
        "name2": {
          "description": "Name line 2",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension2"
        }
      }
    },
    "StateandLocalTaxWithholding1": {
      "id": "StateandLocalTaxWithholding1",
      "description": "Box 17, State and Local tax withholding",
      "required": [],
      "properties": {
        "stateCode": {
          "description": "State two-digit code",
          "enum": [
            "AA",
            "AE",
            "AK",
            "AL",
            "AP",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "Amount of state income tax withheld",
          "uniqueItems": false,
          "$ref": "StateTaxWithholding2"
        },
        "local": {
          "description": "Amount of local income tax withheld, if any",
          "uniqueItems": false,
          "$ref": "LocalTaxWithholding1"
        }
      }
    },
    "StateandLocalTaxWithholding2": {
      "id": "StateandLocalTaxWithholding2",
      "description": "State and Local tax withholding, from IRS's IRIS schema",
      "required": [],
      "properties": {
        "stateCode": {
          "description": "State two-digit code",
          "enum": [
            "AA",
            "AE",
            "AK",
            "AL",
            "AP",
            "AR",
            "AS",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "FM",
            "GA",
            "GU",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MH",
            "MI",
            "MN",
            "MO",
            "MP",
            "MS",
            "MT",
            "NC",
            "ND",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "PW",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VA",
            "VI",
            "VT",
            "WA",
            "WI",
            "WV",
            "WY"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "Amount of state income tax withheld",
          "uniqueItems": false,
          "$ref": "StateTaxWithholding2"
        },
        "local": {
          "description": "Amount of local income tax withheld, if any",
          "uniqueItems": false,
          "$ref": "LocalTaxWithholding1"
        }
      }
    },
    "StateTaxWithholding2": {
      "id": "StateTaxWithholding2",
      "description": "Amount of state income tax withheld",
      "required": [],
      "properties": {
        "taxWithheld": {
          "description": "Amount of state income tax withheld",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "taxId": {
          "description": "Filer's state tax id",
          "uniqueItems": false,
          "type": "string"
        },
        "income": {
          "description": "Income amount for state tax purposes",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "TaxParty1": {
      "id": "TaxParty1",
      "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty2": {
      "id": "TaxParty2",
      "description": "Box C, Fiduciary's name and address",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty3": {
      "id": "TaxParty3",
      "description": "Boxes 10-15, Employer EIN, name and address",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty4": {
      "id": "TaxParty4",
      "description": "Box 6, If other than TRANSFEROR, name, address and tin of corporation whose stock is being transferred",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty6": {
      "id": "TaxParty6",
      "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty7": {
      "id": "TaxParty7",
      "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxParty8": {
      "id": "TaxParty8",
      "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmitted on enclosing TaxStatement, if it is the same on all its included tax forms.",
      "required": [],
      "properties": {
        "tin": {
          "description": "Issuer or recipient Tax Identification Number. Usually EIN for issuer and SSN for recipient",
          "uniqueItems": false,
          "type": "string"
        },
        "partyType": {
          "description": "Type of issuer or recipient legal entity, as \"BUSINESS\" or \"INDIVIDUAL\". Commonly BUSINESS for issuer and INDIVIDUAL for recipient",
          "enum": [
            "BUSINESS",
            "INDIVIDUAL"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "individualName": {
          "description": "Individual issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Individualname"
        },
        "businessName": {
          "description": "Business issuer or recipient name",
          "uniqueItems": false,
          "$ref": "Businessname"
        },
        "address": {
          "description": "Issuer or recipient address",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "phone": {
          "description": "Issuer or recipient telephone number",
          "uniqueItems": false,
          "$ref": "TelephoneNumberPlusExtension"
        },
        "email": {
          "description": "Issuer or recipient email address. (Additional information, not part of IRS forms)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxRefundDirectDeposit2": {
      "id": "TaxRefundDirectDeposit2",
      "description": "Tax refund direct deposit information",
      "required": [],
      "properties": {
        "institutionName": {
          "description": "Name of institution",
          "uniqueItems": false,
          "type": "string"
        },
        "rtn": {
          "description": "Routing transit number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNickName": {
          "description": "Account nickname",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TaxStatement1": {
      "id": "TaxStatement1",
      "description": "The full data contents of the tax document and all its included forms including the indexing metadata values",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatement2": {
      "id": "TaxStatement2",
      "description": "The full data contents of the tax document and all its included forms as ingested",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatement3": {
      "id": "TaxStatement3",
      "description": "The data contents of the tax document as ingested, with Errors on some included forms",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatement4": {
      "id": "TaxStatement4",
      "description": "The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatement5": {
      "id": "TaxStatement5",
      "description": "The TaxStatement json for a single tax document containing one or more tax reporting forms for the customer, one or more of which contain an Error",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatement6": {
      "id": "TaxStatement6",
      "description": "The full data contents of the document and all its contained forms including the indexing metadata values",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TaxStatement7": {
      "id": "TaxStatement7",
      "description": "The data contents of the tax document as updated, with Errors on some included forms",
      "required": [],
      "properties": {
        "taxYear": {
          "description": "Year for which taxes are being paid",
          "minimum": "2018",
          "maximum": "2050",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "taxStatementId": {
          "description": "Long-term persistent id for the tax statement. Depending upon the data provider, this may be the same id as the id on the enclosed tax form(s), or this may be a different id",
          "uniqueItems": false,
          "type": "string"
        },
        "issuer": {
          "description": "Issuer's name, address, phone, and TIN. Issuer data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty6"
        },
        "recipient": {
          "description": "Recipient's name, address, phone, and TIN. Recipient data need only be transmittted on TaxStatement, 'JSON' data type responses if it is the same on all included tax forms",
          "uniqueItems": false,
          "$ref": "TaxParty7"
        },
        "taxDataType": {
          "description": "Whether this `application/json` tax form response contains data in `forms` property (as 'JSON' format) or `pdf` property (as 'BASE64_PDF' format)",
          "enum": [
            "BASE64_PDF",
            "JSON"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "forms": {
          "description": "The list of data contents for all included tax forms, response should include one of `forms` or `pdf`",
          "items": {
            "$ref": "TaxData"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "pdf": {
          "description": "PDF version of the tax statement containing all form pages, binary encoded as Base64, response should include one of `pdf` or `forms`",
          "uniqueItems": false,
          "type": "object"
        },
        "attributes": {
          "description": "Additional tax statement attributes that the provider wishes to include",
          "items": {
            "$ref": "FIAttributeentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TelephoneNumberPlusExtension": {
      "id": "TelephoneNumberPlusExtension",
      "description": "Issuer or recipient telephone number",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of phone number: HOME, BUSINESS, CELL, FAX",
          "enum": [
            "BUSINESS",
            "CELL",
            "FAX",
            "HOME"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "number": {
          "description": "Telephone subscriber number defined by ITU-T recommendation E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "extension": {
          "description": "An arbitrary length telephone number extension",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TelephoneNumberPlusExtension1": {
      "id": "TelephoneNumberPlusExtension1",
      "description": "PSE's phone number",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of phone number: HOME, BUSINESS, CELL, FAX",
          "enum": [
            "BUSINESS",
            "CELL",
            "FAX",
            "HOME"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "number": {
          "description": "Telephone subscriber number defined by ITU-T recommendation E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "extension": {
          "description": "An arbitrary length telephone number extension",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TelephoneNumberPlusExtension2": {
      "id": "TelephoneNumberPlusExtension2",
      "description": "Phone number",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of phone number: HOME, BUSINESS, CELL, FAX",
          "enum": [
            "BUSINESS",
            "CELL",
            "FAX",
            "HOME"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country calling codes defined by ITU-T recommendations E.123 and E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "number": {
          "description": "Telephone subscriber number defined by ITU-T recommendation E.164",
          "uniqueItems": false,
          "type": "string"
        },
        "extension": {
          "description": "An arbitrary length telephone number extension",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Resourceentity": {
      "id": "Resourceentity",
      "description": "Details of resource entity",
      "required": [],
      "properties": {
        "resourceId": {
          "description": "Long-term persistent identifier for the Resource",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of Resource",
          "enum": [
            "ACTIVE",
            "IN_PROGRESS",
            "RETIRED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of resource",
          "uniqueItems": false,
          "type": "string"
        },
        "links": {
          "description": "Links to retrieve this resource, or to invoke other APIs",
          "items": {
            "$ref": "HATEOASLink"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ResourceListentity": {
      "id": "ResourceListentity",
      "description": "Response object for /resources API",
      "required": [],
      "properties": {
        "page": {
          "description": "Offset IDs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadata"
        },
        "links": {
          "description": "Resource URLs for navigating result sets",
          "uniqueItems": false,
          "$ref": "PageMetadataLinks"
        },
        "resources": {
          "description": "Zero or more Resources",
          "items": {
            "$ref": "Resourceentity"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    }
  },
  "authorizations": {
    "TaxBasicAuth": {
      "type": "basicAuth"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}
